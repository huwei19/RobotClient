// Classes and structures being serialized

// Generated by ProtocolBuffer
// - a pure c# code generation implementation of protocol buffers
// Report bugs to: https://silentorbit.com/protobuf/

// DO NOT EDIT
// This file will be overwritten when CodeGenerator is run.
// To make custom modifications, edit the .proto file and add //:external before the message line
// then write the code and the changes in a separate file.
using System;
using System.Collections.Generic;

namespace ProtobufPacket
{
    public partial class SampleStruct : LiteNet.ISyncData
    {
        public bool Has_Data1 { get; private set; }
        private int __Data1;
        public int Data1 { get { return __Data1; } set { __Data1 = value; Has_Data1 = true; } }

        public bool Has_Data2 { get; private set; }
        private int __Data2;
        public int Data2 { get { return __Data2; } set { __Data2 = value; Has_Data2 = true; } }

    }

    public partial class SampleData : LiteNet.ISyncData
    {
        public SampleData()
        {
            Skills = new List<int>();
        }
        public bool Has_Guid { get; private set; }
        private ulong __Guid;
        public ulong Guid { get { return __Guid; } set { __Guid = value; Has_Guid = true; } }

        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

        public bool Has_Level { get; private set; }
        private int __Level;
        public int Level { get { return __Level; } set { __Level = value; Has_Level = true; } }

        public bool Has_Locked { get; private set; }
        private bool __Locked;
        public bool Locked { get { return __Locked; } set { __Locked = value; Has_Locked = true; } }

        public string Name { get; set; }

        public global::ProtobufPacket.SampleStruct Sample { get; set; }

        public List<int> Skills { get; set; }

    }

    /// <summary>能力</summary>
    public partial class AbilityStruct : LiteNet.ISyncData
    {
        public AbilityStruct()
        {
            AbilityId = -1;
            AbilityLevel = 1;
        }
        public bool Has_AbilityId { get; private set; }
        private int __AbilityId;
        public int AbilityId { get { return __AbilityId; } set { __AbilityId = value; Has_AbilityId = true; } }

        public bool Has_AbilityLevel { get; private set; }
        private int __AbilityLevel;
        public int AbilityLevel { get { return __AbilityLevel; } set { __AbilityLevel = value; Has_AbilityLevel = true; } }

    }

    /// <summary>卡</summary>
    public partial class _Card : LiteNet.ISyncData
    {
        public _Card()
        {
            AbilityLevel = new List<global::ProtobufPacket.AbilityStruct>();
            TrainLevel = 0;
        }
        public bool Has_Guid { get; private set; }
        private ulong __Guid;
        public ulong Guid { get { return __Guid; } set { __Guid = value; Has_Guid = true; } }

        public bool Has_CardId { get; private set; }
        private int __CardId;
        public int CardId { get { return __CardId; } set { __CardId = value; Has_CardId = true; } }

        public bool Has_Level { get; private set; }
        private int __Level;
        public int Level { get { return __Level; } set { __Level = value; Has_Level = true; } }

        public bool Has_Star { get; private set; }
        private int __Star;
        public int Star { get { return __Star; } set { __Star = value; Has_Star = true; } }

        public bool Has_Exp { get; private set; }
        private int __Exp;
        public int Exp { get { return __Exp; } set { __Exp = value; Has_Exp = true; } }

        public bool Has_EnhanceLevel { get; private set; }
        private int __EnhanceLevel;
        public int EnhanceLevel { get { return __EnhanceLevel; } set { __EnhanceLevel = value; Has_EnhanceLevel = true; } }

        /// <summary>强化等级</summary>
        public bool Has_Point { get; private set; }
        private int __Point;
        public int Point { get { return __Point; } set { __Point = value; Has_Point = true; } }

        /// <summary>成长点数</summary>
        public bool Has_FileUnlockFlag { get; private set; }
        private int __FileUnlockFlag;
        public int FileUnlockFlag { get { return __FileUnlockFlag; } set { __FileUnlockFlag = value; Has_FileUnlockFlag = true; } }

        /// <summary>档案解锁标记</summary>
        public bool Has_FileAwardFlag { get; private set; }
        private int __FileAwardFlag;
        public int FileAwardFlag { get { return __FileAwardFlag; } set { __FileAwardFlag = value; Has_FileAwardFlag = true; } }

        /// <summary>档案分析标记</summary>
        public bool Has_LastLevelUpTime { get; private set; }
        private int __LastLevelUpTime;
        public int LastLevelUpTime { get { return __LastLevelUpTime; } set { __LastLevelUpTime = value; Has_LastLevelUpTime = true; } }

        /// <summary>上次使用升级道具时间 以05:00为一天的起点 年月日 eg:20200527</summary>
        public bool Has_LevelUpCount { get; private set; }
        private int __LevelUpCount;
        public int LevelUpCount { get { return __LevelUpCount; } set { __LevelUpCount = value; Has_LevelUpCount = true; } }

        /// <summary>使用升级道具次数</summary>
        public bool Has_IsAdvanceFace { get; private set; }
        private bool __IsAdvanceFace;
        public bool IsAdvanceFace { get { return __IsAdvanceFace; } set { __IsAdvanceFace = value; Has_IsAdvanceFace = true; } }

        /// <summary>是否展示高级卡面</summary>
        public List<global::ProtobufPacket.AbilityStruct> AbilityLevel { get; set; }

        /// <summary>能力</summary>
        public bool Has_IsAlbumActive { get; private set; }
        private bool __IsAlbumActive;
        public bool IsAlbumActive { get { return __IsAlbumActive; } set { __IsAlbumActive = value; Has_IsAlbumActive = true; } }

        /// <summary>相册是否激活</summary>
        public bool Has_TrainLevel { get; private set; }
        private int __TrainLevel;
        public int TrainLevel { get { return __TrainLevel; } set { __TrainLevel = value; Has_TrainLevel = true; } }

        /// <summary>培训等级</summary>
        public bool Has_IsShareAward { get; private set; }
        private bool __IsShareAward;
        public bool IsShareAward { get { return __IsShareAward; } set { __IsShareAward = value; Has_IsShareAward = true; } }

    }

    public partial class _CardPiece : LiteNet.ISyncData
    {
        public bool Has_CardId { get; private set; }
        private int __CardId;
        public int CardId { get { return __CardId; } set { __CardId = value; Has_CardId = true; } }

        public bool Has_Count { get; private set; }
        private int __Count;
        public int Count { get { return __Count; } set { __Count = value; Has_Count = true; } }

    }

    /// <summary>=================数据库存储 修改需要考虑兼容=================</summary>
    public partial class _DBCards : LiteNet.ISyncData
    {
        public _DBCards()
        {
            Cards = new List<global::ProtobufPacket._Card>();
            CardPieces = new List<global::ProtobufPacket._CardPiece>();
            CardTickets = new List<global::ProtobufPacket._CardPiece>();
        }
        public List<global::ProtobufPacket._Card> Cards { get; set; }

        public List<global::ProtobufPacket._CardPiece> CardPieces { get; set; }

        public List<global::ProtobufPacket._CardPiece> CardTickets { get; set; }

    }

    /// <summary>人格</summary>
    public partial class _Personality : LiteNet.ISyncData
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

        /// <summary>人格Id</summary>
        public bool Has_Level { get; private set; }
        private int __Level;
        public int Level { get { return __Level; } set { __Level = value; Has_Level = true; } }

        /// <summary>人格等级</summary>
        public bool Has_Value { get; private set; }
        private int __Value;
        public int Value { get { return __Value; } set { __Value = value; Has_Value = true; } }

    }

    /// <summary>
    /// <para>独白</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class _Monologue : LiteNet.ISyncData
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

        public bool Has_Unlock { get; private set; }
        private bool __Unlock;
        public bool Unlock { get { return __Unlock; } set { __Unlock = value; Has_Unlock = true; } }

        public bool Has_CreateTime { get; private set; }
        private long __CreateTime;
        public long CreateTime { get { return __CreateTime; } set { __CreateTime = value; Has_CreateTime = true; } }

    }

    [SLua.CustomLuaClass]
    public partial class _DressInfo : LiteNet.ISyncData
    {
        public _DressInfo()
        {
            HangingIds = new List<int>();
        }
        public bool Has_SkinId { get; private set; }
        private int __SkinId;
        public int SkinId { get { return __SkinId; } set { __SkinId = value; Has_SkinId = true; } }

        /// <summary>此命运线当前选择皮肤</summary>
        public List<int> HangingIds { get; set; }

    }

    /// <summary>命运线</summary>
    public partial class _FateLine : LiteNet.ISyncData
    {
        public _FateLine()
        {
            UnLockSkinIds = new List<int>();
            UnLockDressIds = new List<int>();
            Personalitys = new List<global::ProtobufPacket._Personality>();
            Monologues = new List<global::ProtobufPacket._Monologue>();
            Appointments = new List<global::ProtobufPacket._Appointment>();
            Secrets = new List<global::ProtobufPacket._Secret>();
            GiveGift = new List<int>();
        }
        public bool Has_Guid { get; private set; }
        private ulong __Guid;
        public ulong Guid { get { return __Guid; } set { __Guid = value; Has_Guid = true; } }

        /// <summary>命运线id</summary>
        public bool Has_IsActive { get; private set; }
        private bool __IsActive;
        public bool IsActive { get { return __IsActive; } set { __IsActive = value; Has_IsActive = true; } }

        /// <summary>是否激活</summary>
        public global::ProtobufPacket._DressInfo DressInfo { get; set; }

        /// <summary>此命运线当前选择皮肤</summary>
        public List<int> UnLockSkinIds { get; set; }

        /// <summary>已解锁皮肤</summary>
        public List<int> UnLockDressIds { get; set; }

        /// <summary>已解锁挂件/动作id 对应CardDressup.txt</summary>
        public List<global::ProtobufPacket._Personality> Personalitys { get; set; }

        /// <summary>人格属性培养</summary>
        public List<global::ProtobufPacket._Monologue> Monologues { get; set; }

        /// <summary>收集独白</summary>
        public bool Has_AwardFlag { get; private set; }
        private int __AwardFlag;
        public int AwardFlag { get { return __AwardFlag; } set { __AwardFlag = value; Has_AwardFlag = true; } }

        /// <summary>人格完善奖励领取标记</summary>
        public bool Has_IsUnlock { get; private set; }
        private bool __IsUnlock;
        public bool IsUnlock { get { return __IsUnlock; } set { __IsUnlock = value; Has_IsUnlock = true; } }

        /// <summary>是否解锁</summary>
        public bool Has_IsAwardFateCard { get; private set; }
        private bool __IsAwardFateCard;
        public bool IsAwardFateCard { get { return __IsAwardFateCard; } set { __IsAwardFateCard = value; Has_IsAwardFateCard = true; } }

        /// <summary>是否给了命运卡</summary>
        public List<global::ProtobufPacket._Appointment> Appointments { get; set; }

        /// <summary>约会</summary>
        public List<global::ProtobufPacket._Secret> Secrets { get; set; }

        /// <summary>秘密</summary>
        public List<int> GiveGift { get; set; }

    }

    /// <summary>调查员</summary>
    public partial class _Character : LiteNet.ISyncData
    {
        public _Character()
        {
            FateLines = new List<global::ProtobufPacket._FateLine>();
        }
        public bool Has_Guid { get; private set; }
        private ulong __Guid;
        public ulong Guid { get { return __Guid; } set { __Guid = value; Has_Guid = true; } }

        /// <summary>调查员id</summary>
        public bool Has_CurLineId { get; private set; }
        private int __CurLineId;
        public int CurLineId { get { return __CurLineId; } set { __CurLineId = value; Has_CurLineId = true; } }

        /// <summary>选择的命运线id</summary>
        public List<global::ProtobufPacket._FateLine> FateLines { get; set; }

        /// <summary>所有命运线</summary>
        public bool Has_IsContactable { get; private set; }
        private bool __IsContactable;
        public bool IsContactable { get { return __IsContactable; } set { __IsContactable = value; Has_IsContactable = true; } }

        /// <summary>通讯录是否解锁</summary>
        public bool Has_Intimacy { get; private set; }
        private int __Intimacy;
        public int Intimacy { get { return __Intimacy; } set { __Intimacy = value; Has_Intimacy = true; } }

        /// <summary>调查员默契度</summary>
        public string Remark { get; set; }

        /// <summary>备注</summary>
        public bool Has_PersonalStoryUnlock { get; private set; }
        private bool __PersonalStoryUnlock;
        public bool PersonalStoryUnlock { get { return __PersonalStoryUnlock; } set { __PersonalStoryUnlock = value; Has_PersonalStoryUnlock = true; } }

        /// <summary>调查员个人故事是否解锁</summary>
        public bool Has_IntimacyLv { get; private set; }
        private int __IntimacyLv;
        public int IntimacyLv { get { return __IntimacyLv; } set { __IntimacyLv = value; Has_IntimacyLv = true; } }

        /// <summary>调查员默契度等级</summary>
        public bool Has_IsNew { get; private set; }
        private bool __IsNew;
        public bool IsNew { get { return __IsNew; } set { __IsNew = value; Has_IsNew = true; } }

        public bool Has_HeartBestNumber { get; private set; }
        private int __HeartBestNumber;
        public int HeartBestNumber { get { return __HeartBestNumber; } set { __HeartBestNumber = value; Has_HeartBestNumber = true; } }

    }

    /// <summary>=================数据库存储 修改需要考虑兼容=================</summary>
    public partial class _DBCharacters : LiteNet.ISyncData
    {
        public _DBCharacters()
        {
            Characters = new List<global::ProtobufPacket._Character>();
        }
        public List<global::ProtobufPacket._Character> Characters { get; set; }

        public bool Has_SecretRunningId { get; private set; }
        private int __SecretRunningId;
        public int SecretRunningId { get { return __SecretRunningId; } set { __SecretRunningId = value; Has_SecretRunningId = true; } }

    }

    /// <summary> story enums</summary>
    public partial class _StoryEnum : LiteNet.ISyncData
    {
        public enum LevelType
        {
            Investigate = 0,
            Puzzle = 1,
            Ending = 2,
            Special = 3,
        }

        public enum LevelResult
        {
            None = 0,
            Succ = 1,
            Fail = 2,
            Quit = 3,
        }

        public enum LevelStatus
        {
            Status_None = 0,
            Finish = 1,
            /// <summary>已完成</summary>
            Quick = 2,
        }

        /// <summary>可快速通关</summary>
        public enum ChapterStatus
        {
            Ready = 0,
            Running = 1,
            Finished = 2,
        }

        public enum ChapterRank
        {
            N = -1,
            SP = 10,
            S = 20,
            A = 30,
            B = 40,
            C = 50,
            D = 60,
            E = 70,
        }

        public enum PuzzleThoughtState
        {
            Thinking = 0,
            Complete = 1,
            Perfect = 2,
        }

        public enum DropSubChannel
        {
            LevelSucc = 0,
            Custom = 1,
            DegreeOfCompletion = 2,
            BehaviorHugeSucc = 3,
            PuzzleCompletion = 4,
            ChapterEnding = 5,
        }

    }

    /// <summary> story level achievement</summary>
    public partial class _StoryLevelAchievement : LiteNet.ISyncData
    {
        public _StoryLevelAchievement()
        {
            SpecialClueCollection = new List<int>();
            CustomEventResultCollection = new List<int>();
            PuzzleBranchCollection = new List<string>();
            FinishedSceneEventIds = new List<int>();
            KnownSceneEventIds = new List<int>();
            lastLevelResult = -1;
            SceneEventDatas = new List<global::ProtobufPacket._SceneeventAchieveData>();
            PerceptUnuseSceneEventIds = new List<int>();
            SavePointIds = new List<int>();
            GameplayRunningDatas = new List<global::ProtobufPacket._GameplayRunningData>();
            SpecialClues = new List<global::ProtobufPacket._SpecialClue>();
        }
        public bool Has_LevelId { get; private set; }
        private int __LevelId;
        public int LevelId { get { return __LevelId; } set { __LevelId = value; Has_LevelId = true; } }

        /// <summary> 关卡id</summary>
        public List<int> SpecialClueCollection { get; set; }

        /// <summary>
        /// <para> 收集到特殊线索</para>
        /// <para>repeated string FinishedSceneEventCollection = 3;   // 完成的SceneEvent(场景事件)，废弃后面去掉</para>
        /// <para>repeated string KnownSceneEventCollection = 4;      // 已知的SceneEvent(场景事件)，废弃后面去掉</para>
        /// </summary>
        public List<int> CustomEventResultCollection { get; set; }

        /// <summary> 达成的自定义结果</summary>
        public bool Has_DegreeOfCompletion { get; private set; }
        private int __DegreeOfCompletion;
        public int DegreeOfCompletion { get { return __DegreeOfCompletion; } set { __DegreeOfCompletion = value; Has_DegreeOfCompletion = true; } }

        /// <summary> 完成度(0-100)</summary>
        public bool Has_PuzzleCompletion { get; private set; }
        private int __PuzzleCompletion;
        public int PuzzleCompletion { get { return __PuzzleCompletion; } set { __PuzzleCompletion = value; Has_PuzzleCompletion = true; } }

        /// <summary> 推理完成度(0-thinking, 1-complete, 2-perfect)</summary>
        public List<string> PuzzleBranchCollection { get; set; }

        /// <summary> 推理选择的分支以及结论选择集合, [brancName]_[conclusionIndex]</summary>
        public List<int> FinishedSceneEventIds { get; set; }

        /// <summary> 完成的SceneEvent(场景事件)</summary>
        public List<int> KnownSceneEventIds { get; set; }

        /// <summary> 已知的SceneEvent(场景事件)</summary>
        public bool Has_passState { get; private set; }
        private int __passState;
        public int passState { get { return __passState; } set { __passState = value; Has_passState = true; } }

        /// <summary>是否首次通关，0没有打过，1首次通关，2非首次</summary>
        public bool Has_lastLevelResult { get; private set; }
        private int __lastLevelResult;
        public int lastLevelResult { get { return __lastLevelResult; } set { __lastLevelResult = value; Has_lastLevelResult = true; } }

        /// <summary>最后一次通关状态</summary>
        public List<global::ProtobufPacket._SceneeventAchieveData> SceneEventDatas { get; set; }

        /// <summary>行为的achieve数据</summary>
        public List<int> PerceptUnuseSceneEventIds { get; set; }

        /// <summary>
        /// <para>未使用过感知技能的行为id</para>
        /// <para>optional bool HasSavepoint = 15;                    //是否有保存点数据,废弃</para>
        /// </summary>
        public List<int> SavePointIds { get; set; }

        /// <summary> 已有的保存点id集合,只同步数据不做存储，保存点数据都在storyEx上</summary>
        public bool Has_FinishedNum { get; private set; }
        private int __FinishedNum;
        public int FinishedNum { get { return __FinishedNum; } set { __FinishedNum = value; Has_FinishedNum = true; } }

        /// <summary>通关累计次数</summary>
        public List<global::ProtobufPacket._GameplayRunningData> GameplayRunningDatas { get; set; }

        /// <summary>交互数据关联信息</summary>
        public List<global::ProtobufPacket._SpecialClue> SpecialClues { get; set; }

    }

    [SLua.CustomLuaClass]
    public partial class _SpecialClue : LiteNet.ISyncData
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

        public bool Has_Used { get; private set; }
        private bool __Used;
        public bool Used { get { return __Used; } set { __Used = value; Has_Used = true; } }

        public string ExtraInfo { get; set; }

        public bool Has_isActive { get; private set; }
        private bool __isActive;
        public bool isActive { get { return __isActive; } set { __isActive = value; Has_isActive = true; } }

    }

    [SLua.CustomLuaClass]
    public partial class _StoryChapterCheckpoint : LiteNet.ISyncData
    {
        public _StoryChapterCheckpoint()
        {
            UnlockIds = new List<int>();
        }
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

        public List<int> UnlockIds { get; set; }

    }

    [SLua.CustomLuaClass]
    public partial class _NpcStatus : LiteNet.ISyncData
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

        public bool Has_Status { get; private set; }
        private int __Status;
        public int Status { get { return __Status; } set { __Status = value; Has_Status = true; } }

        public bool Has_IsThisTime { get; private set; }
        private bool __IsThisTime;
        public bool IsThisTime { get { return __IsThisTime; } set { __IsThisTime = value; Has_IsThisTime = true; } }

    }

    /// <summary>
    /// <para> story level</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class _StoryLevel : LiteNet.ISyncData
    {
        public _StoryLevel()
        {
            SpecialClues = new List<global::ProtobufPacket._SpecialClue>();
            UsedSClueIds = new List<int>();
            Checkpoints = new List<global::ProtobufPacket._StoryChapterCheckpoint>();
            LastFinishSceneEventIds = new List<int>();
            KnownSceneEvents = new List<string>();
            FinishedSceneEvents = new List<string>();
            CustomEventResultIds = new List<int>();
            NpcStatus = new List<global::ProtobufPacket._NpcStatus>();
            UsedCardIds = new List<int>();
            KnownSceneEventIds = new List<int>();
            FinishedSceneEventIds = new List<int>();
            UnlockedPuzzleThoughtIds = new List<int>();
        }
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

        public bool Has_LevelType { get; private set; }
        private int __LevelType;
        public int LevelType { get { return __LevelType; } set { __LevelType = value; Has_LevelType = true; } }

        /// <summary>
        /// <para> _StoryEnum.LevelType</para>
        /// <para> common data fields</para>
        /// </summary>
        public bool Has_Result { get; private set; }
        private int __Result;
        public int Result { get { return __Result; } set { __Result = value; Has_Result = true; } }

        /// <summary> _StoryEnum.LevelResult</summary>
        public bool Has_Clues { get; private set; }
        private int __Clues;
        public int Clues { get { return __Clues; } set { __Clues = value; Has_Clues = true; } }

        public bool Has_ImportantEventsTriggered { get; private set; }
        private int __ImportantEventsTriggered;
        public int ImportantEventsTriggered { get { return __ImportantEventsTriggered; } set { __ImportantEventsTriggered = value; Has_ImportantEventsTriggered = true; } }

        public string Log { get; set; }

        public string BranchName { get; set; }

        public List<global::ProtobufPacket._SpecialClue> SpecialClues { get; set; }

        public List<int> UsedSClueIds { get; set; }

        /// <summary>废弃</summary>
        public List<global::ProtobufPacket._StoryChapterCheckpoint> Checkpoints { get; set; }

        public string GVariableJson { get; set; }

        /// <summary>废弃，后面去掉</summary>
        public bool Has_LevelStatus { get; private set; }
        private int __LevelStatus;
        public int LevelStatus { get { return __LevelStatus; } set { __LevelStatus = value; Has_LevelStatus = true; } }

        /// <summary>废弃，关卡状态</summary>
        public bool Has_syncFlag { get; private set; }
        private int __syncFlag;
        public int syncFlag { get { return __syncFlag; } set { __syncFlag = value; Has_syncFlag = true; } }

        /// <summary>同步数据标记</summary>
        public bool Has_SavepointVersion { get; private set; }
        private int __SavepointVersion;
        public int SavepointVersion { get { return __SavepointVersion; } set { __SavepointVersion = value; Has_SavepointVersion = true; } }

        /// <summary>保存点期号，默认0</summary>
        public List<int> LastFinishSceneEventIds { get; set; }

        /// <summary>
        /// <para>最后一次通关的行为数据</para>
        /// <para> investigate level</para>
        /// </summary>
        public List<string> KnownSceneEvents { get; set; }

        /// <summary>废弃，后面去掉</summary>
        public List<string> FinishedSceneEvents { get; set; }

        /// <summary>废弃，后面去掉</summary>
        public List<int> CustomEventResultIds { get; set; }

        /// <summary>废弃</summary>
        public List<global::ProtobufPacket._NpcStatus> NpcStatus { get; set; }

        public List<int> UsedCardIds { get; set; }

        public List<int> KnownSceneEventIds { get; set; }

        public List<int> FinishedSceneEventIds { get; set; }

        /// <summary>
        /// <para>repeated _SavePoint SavePoints = 28; //废弃，不用了</para>
        /// <para>optional bool HasSavepoint = 29; //是否有保存点数据，废弃，挪到levelachievement</para>
        /// <para> puzzle level</para>
        /// </summary>
        public List<int> UnlockedPuzzleThoughtIds { get; set; }

        /// <summary>废弃</summary>
        public string PuzzleBranch { get; set; }

        public bool Has_PuzzleConclusionIndex { get; private set; }
        private int __PuzzleConclusionIndex;
        public int PuzzleConclusionIndex { get { return __PuzzleConclusionIndex; } set { __PuzzleConclusionIndex = value; Has_PuzzleConclusionIndex = true; } }

        public bool Has_HiddenConclusionIndex { get; private set; }
        private int __HiddenConclusionIndex;
        public int HiddenConclusionIndex { get { return __HiddenConclusionIndex; } set { __HiddenConclusionIndex = value; Has_HiddenConclusionIndex = true; } }

        public bool Has_PuzzleBranchIndex { get; private set; }
        private int __PuzzleBranchIndex;
        public int PuzzleBranchIndex { get { return __PuzzleBranchIndex; } set { __PuzzleBranchIndex = value; Has_PuzzleBranchIndex = true; } }

    }

    /// <summary> story chapter ending</summary>
    public partial class _StoryChapterEnding : LiteNet.ISyncData
    {
        public _StoryChapterEnding()
        {
            InvestigateHistory = new List<global::ProtobufPacket._StoryLevel>();
            NpcStatus = new List<global::ProtobufPacket._NpcStatus>();
            SpecialClueIds = new List<int>();
            Conclusions = new List<global::ProtobufPacket._EndingConclusion>();
            ProgressIds = new List<int>();
        }
        public bool Has_Rank { get; private set; }
        private int __Rank;
        public int Rank { get { return __Rank; } set { __Rank = value; Has_Rank = true; } }

        /// <summary> _StoryEnum.ChapterRank</summary>
        public List<global::ProtobufPacket._StoryLevel> InvestigateHistory { get; set; }

        public List<global::ProtobufPacket._NpcStatus> NpcStatus { get; set; }

        public List<int> SpecialClueIds { get; set; }

        /// <summary>repeated string Objectives = 5;  //废弃</summary>
        public List<global::ProtobufPacket._EndingConclusion> Conclusions { get; set; }

        /// <summary>repeated _LevelSavePoint LevelSavePointHistory = 7; //保存点数据移动到_StoryChapterEndingEx，不随着同步包同步</summary>
        public List<int> ProgressIds { get; set; }

        /// <summary>进度顺序</summary>
        public bool Has_FinishLevelFlag { get; private set; }
        private int __FinishLevelFlag;
        public int FinishLevelFlag { get { return __FinishLevelFlag; } set { __FinishLevelFlag = value; Has_FinishLevelFlag = true; } }

    }

    public partial class _StoryChapterEndingEx : LiteNet.ISyncData
    {
        public _StoryChapterEndingEx()
        {
            LevelSavePointHistory = new List<global::ProtobufPacket._LevelSavePoint>();
        }
        public bool Has_ChapterId { get; private set; }
        private int __ChapterId;
        public int ChapterId { get { return __ChapterId; } set { __ChapterId = value; Has_ChapterId = true; } }

        public bool Has_Rank { get; private set; }
        private int __Rank;
        public int Rank { get { return __Rank; } set { __Rank = value; Has_Rank = true; } }

        public List<global::ProtobufPacket._LevelSavePoint> LevelSavePointHistory { get; set; }

    }

    public partial class _SceneEventHint : LiteNet.ISyncData
    {
        public _SceneEventHint()
        {
            UnlockedTags = new List<int>();
        }
        public string Id { get; set; }

        /// <summary>废弃</summary>
        public List<int> UnlockedTags { get; set; }

        public bool Has_UnlockTipsHint { get; private set; }
        private bool __UnlockTipsHint;
        public bool UnlockTipsHint { get { return __UnlockTipsHint; } set { __UnlockTipsHint = value; Has_UnlockTipsHint = true; } }

        public bool Has_tableId { get; private set; }
        private int __tableId;
        public int tableId { get { return __tableId; } set { __tableId = value; Has_tableId = true; } }

    }

    /// <summary> story level scene event hint</summary>
    public partial class _StoryLevelSceneEventHint : LiteNet.ISyncData
    {
        public _StoryLevelSceneEventHint()
        {
            Hints = new List<global::ProtobufPacket._SceneEventHint>();
        }
        public bool Has_LevelId { get; private set; }
        private int __LevelId;
        public int LevelId { get { return __LevelId; } set { __LevelId = value; Has_LevelId = true; } }

        public List<global::ProtobufPacket._SceneEventHint> Hints { get; set; }

    }

    /// <summary> story chapter</summary>
    public partial class _StoryChapter : LiteNet.ISyncData
    {
        public _StoryChapter()
        {
            CurrentProgress = new List<global::ProtobufPacket._StoryLevel>();
            CurrentProgressRemovedIds = new List<int>();
            LevelAchievements = new List<global::ProtobufPacket._StoryLevelAchievement>();
            Endings = new List<global::ProtobufPacket._StoryChapterEnding>();
            LevelSceneEventHints = new List<global::ProtobufPacket._StoryLevelSceneEventHint>();
            SelCharacterIds = new List<int>();
            ProgressIds = new List<int>();
            SpecialLevelIds = new List<int>();
            SpecialLevels = new List<global::ProtobufPacket._StoryLevel>();
        }
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

        public bool Has_Status { get; private set; }
        private int __Status;
        public int Status { get { return __Status; } set { __Status = value; Has_Status = true; } }

        /// <summary> _StoryEnum.ChapterStatus</summary>
        public bool Has_Rank { get; private set; }
        private int __Rank;
        public int Rank { get { return __Rank; } set { __Rank = value; Has_Rank = true; } }

        /// <summary> _StoryEnum.ChapterRank</summary>
        public List<global::ProtobufPacket._StoryLevel> CurrentProgress { get; set; }

        public List<int> CurrentProgressRemovedIds { get; set; }

        public List<global::ProtobufPacket._StoryLevelAchievement> LevelAchievements { get; set; }

        public List<global::ProtobufPacket._StoryChapterEnding> Endings { get; set; }

        public List<global::ProtobufPacket._StoryLevelSceneEventHint> LevelSceneEventHints { get; set; }

        public List<int> SelCharacterIds { get; set; }

        /// <summary>结局图选择过的主角</summary>
        public bool Has_IsUnlock { get; private set; }
        private bool __IsUnlock;
        public bool IsUnlock { get { return __IsUnlock; } set { __IsUnlock = value; Has_IsUnlock = true; } }

        /// <summary>是否解锁</summary>
        public bool Has_PersonalAwardFlag { get; private set; }
        private int __PersonalAwardFlag;
        public int PersonalAwardFlag { get { return __PersonalAwardFlag; } set { __PersonalAwardFlag = value; Has_PersonalAwardFlag = true; } }

        /// <summary>
        /// <para>个人故事章节奖励领取标记</para>
        /// <para>repeated _LevelSavePoint LevelSavePoint = 12; //关卡保存点数据，废弃，移动到StoryEx中</para>
        /// </summary>
        public List<int> ProgressIds { get; set; }

        /// <summary>进度顺序</summary>
        public bool Has_IsNewRed { get; private set; }
        private bool __IsNewRed;
        public bool IsNewRed { get { return __IsNewRed; } set { __IsNewRed = value; Has_IsNewRed = true; } }

        /// <summary>是否是新解锁章节</summary>
        public bool Has_IsShowPassStateRed { get; private set; }
        private bool __IsShowPassStateRed;
        public bool IsShowPassStateRed { get { return __IsShowPassStateRed; } set { __IsShowPassStateRed = value; Has_IsShowPassStateRed = true; } }

        /// <summary>是否显示首次通关红点</summary>
        public bool Has_ClearProgressDirtyFlag { get; private set; }
        private bool __ClearProgressDirtyFlag;
        public bool ClearProgressDirtyFlag { get { return __ClearProgressDirtyFlag; } set { __ClearProgressDirtyFlag = value; Has_ClearProgressDirtyFlag = true; } }

        /// <summary>是否清除当前进度标记</summary>
        public List<int> SpecialLevelIds { get; set; }

        /// <summary>特殊关卡标记，已解锁或者已完成会在这个列表里</summary>
        public List<global::ProtobufPacket._StoryLevel> SpecialLevels { get; set; }

    }

    /// <summary> story line</summary>
    public partial class _StoryLine : LiteNet.ISyncData
    {
        public _StoryLine()
        {
            Chapters = new List<global::ProtobufPacket._StoryChapter>();
        }
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

        public List<global::ProtobufPacket._StoryChapter> Chapters { get; set; }

    }

    public partial class _Story : LiteNet.ISyncData
    {
        public _Story()
        {
            StoryLines = new List<global::ProtobufPacket._StoryLine>();
            CustomRewardGranted = new List<int>();
        }
        public List<global::ProtobufPacket._StoryLine> StoryLines { get; set; }

        public List<int> CustomRewardGranted { get; set; }

        /// <summary> 已发自定义奖励id, 防止重复</summary>
        public bool Has_HugeSuccAwardCount { get; private set; }
        private int __HugeSuccAwardCount;
        public int HugeSuccAwardCount { get { return __HugeSuccAwardCount; } set { __HugeSuccAwardCount = value; Has_HugeSuccAwardCount = true; } }

        /// <summary>大成功奖励今日获取次数</summary>
        public bool Has_PerceptionCount { get; private set; }
        private int __PerceptionCount;
        public int PerceptionCount { get { return __PerceptionCount; } set { __PerceptionCount = value; Has_PerceptionCount = true; } }

    }

    public partial class _StoryEx : LiteNet.ISyncData
    {
        public _StoryEx()
        {
            LevelSavePoint = new List<global::ProtobufPacket._LevelSavePoint>();
            StoryChapterEndingEx = new List<global::ProtobufPacket._StoryChapterEndingEx>();
        }
        public List<global::ProtobufPacket._LevelSavePoint> LevelSavePoint { get; set; }

        /// <summary> 保存点额外数据</summary>
        public List<global::ProtobufPacket._StoryChapterEndingEx> StoryChapterEndingEx { get; set; }

    }

    public partial class _DBStory : LiteNet.ISyncData
    {
        public _DBStory()
        {
            CardIds = new List<int>();
        }
        public global::ProtobufPacket._Story Story { get; set; }

        /// <summary>以下都为runningLevel数据，重连后数据恢复</summary>
        public bool Has_LastRunLevelId { get; private set; }
        private int __LastRunLevelId;
        public int LastRunLevelId { get { return __LastRunLevelId; } set { __LastRunLevelId = value; Has_LastRunLevelId = true; } }

        public bool Has_LastSeed { get; private set; }
        private int __LastSeed;
        public int LastSeed { get { return __LastSeed; } set { __LastSeed = value; Has_LastSeed = true; } }

        public bool Has_LastInGuide { get; private set; }
        private int __LastInGuide;
        public int LastInGuide { get { return __LastInGuide; } set { __LastInGuide = value; Has_LastInGuide = true; } }

        public bool Has_SavePointId { get; private set; }
        private int __SavePointId;
        public int SavePointId { get { return __SavePointId; } set { __SavePointId = value; Has_SavePointId = true; } }

        public List<int> CardIds { get; set; }

        /// <summary>阵容 调查中会用到，断线重连时如果在调查中会恢复</summary>
        public bool Has_secretRunningId { get; private set; }
        private int __secretRunningId;
        public int secretRunningId { get { return __secretRunningId; } set { __secretRunningId = value; Has_secretRunningId = true; } }

        /// <summary>秘闻运行id(属于调查员功能，转存到DBCharacter)</summary>
        public bool Has_StartTime { get; private set; }
        private long __StartTime;
        public long StartTime { get { return __StartTime; } set { __StartTime = value; Has_StartTime = true; } }

        /// <summary>关卡开始时间</summary>
        public global::ProtobufPacket._StoryEx StoryEx { get; set; }

    }

    /// <summary>story chapter conclusion</summary>
    public partial class _EndingConclusion : LiteNet.ISyncData
    {
        public bool Has_thoughtId { get; private set; }
        private int __thoughtId;
        public int thoughtId { get { return __thoughtId; } set { __thoughtId = value; Has_thoughtId = true; } }

        public bool Has_selectedIndex { get; private set; }
        private int __selectedIndex;
        public int selectedIndex { get { return __selectedIndex; } set { __selectedIndex = value; Has_selectedIndex = true; } }

    }

    /// <summary>废弃</summary>
    public partial class _SavePointContext : LiteNet.ISyncData
    {
        public bool Has_Seed { get; private set; }
        private int __Seed;
        public int Seed { get { return __Seed; } set { __Seed = value; Has_Seed = true; } }

        public bool Has_RandCount { get; private set; }
        private int __RandCount;
        public int RandCount { get { return __RandCount; } set { __RandCount = value; Has_RandCount = true; } }

    }

    /// <summary>调查中产生的运行时保存点数据</summary>
    [SLua.CustomLuaClass]
    public partial class _SavePointInvRuntimeData : LiteNet.ISyncData
    {
        public _SavePointInvRuntimeData()
        {
            NpcStatus = new List<global::ProtobufPacket._NpcStatus>();
            Checkpoints = new List<global::ProtobufPacket._StoryChapterCheckpoint>();
            SpecialClues = new List<global::ProtobufPacket._SpecialClue>();
        }
        public bool Has_ClueNum { get; private set; }
        private int __ClueNum;
        public int ClueNum { get { return __ClueNum; } set { __ClueNum = value; Has_ClueNum = true; } }

        /// <summary>报告数量</summary>
        public bool Has_ForwardMinutes { get; private set; }
        private int __ForwardMinutes;
        public int ForwardMinutes { get { return __ForwardMinutes; } set { __ForwardMinutes = value; Has_ForwardMinutes = true; } }

        /// <summary>推进时间</summary>
        public bool Has_ConfidenceDelta { get; private set; }
        private int __ConfidenceDelta;
        public int ConfidenceDelta { get { return __ConfidenceDelta; } set { __ConfidenceDelta = value; Has_ConfidenceDelta = true; } }

        /// <summary>信心值剩余</summary>
        public List<global::ProtobufPacket._NpcStatus> NpcStatus { get; set; }

        /// <summary>npc状态</summary>
        public List<global::ProtobufPacket._StoryChapterCheckpoint> Checkpoints { get; set; }

        /// <summary>检查点</summary>
        public List<global::ProtobufPacket._SpecialClue> SpecialClues { get; set; }

        /// <summary>线索</summary>
        public bool Has_HideAwardCount { get; private set; }
        private int __HideAwardCount;
        public int HideAwardCount { get { return __HideAwardCount; } set { __HideAwardCount = value; Has_HideAwardCount = true; } }

        /// <summary>隐藏奖励数量</summary>
        public bool Has_HideAwardCountHugeSucc { get; private set; }
        private int __HideAwardCountHugeSucc;
        public int HideAwardCountHugeSucc { get { return __HideAwardCountHugeSucc; } set { __HideAwardCountHugeSucc = value; Has_HideAwardCountHugeSucc = true; } }

        /// <summary>隐藏大成功奖励数量</summary>
        public bool Has_BehaviorHugeSuccCount { get; private set; }
        private int __BehaviorHugeSuccCount;
        public int BehaviorHugeSuccCount { get { return __BehaviorHugeSuccCount; } set { __BehaviorHugeSuccCount = value; Has_BehaviorHugeSuccCount = true; } }

        /// <summary>大成功奖励次数</summary>
        public bool Has_ActionPoint { get; private set; }
        private int __ActionPoint;
        public int ActionPoint { get { return __ActionPoint; } set { __ActionPoint = value; Has_ActionPoint = true; } }

        /// <summary>回合行动点</summary>
        public bool Has_PerceptionUsedCount { get; private set; }
        private int __PerceptionUsedCount;
        public int PerceptionUsedCount { get { return __PerceptionUsedCount; } set { __PerceptionUsedCount = value; Has_PerceptionUsedCount = true; } }

    }

    /// <summary>行为保存点数据</summary>
    [SLua.CustomLuaClass]
    public partial class _SavePointSceneEvent : LiteNet.ISyncData
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

        /// <summary>sceneevent id</summary>
        public bool Has_StartTime { get; private set; }
        private int __StartTime;
        public int StartTime { get { return __StartTime; } set { __StartTime = value; Has_StartTime = true; } }

        /// <summary>开始时间</summary>
        public bool Has_TimeLeft { get; private set; }
        private int __TimeLeft;
        public int TimeLeft { get { return __TimeLeft; } set { __TimeLeft = value; Has_TimeLeft = true; } }

        /// <summary>
        /// <para>剩余时间</para>
        /// <para>optional int32 ExecuteCardId = 4; //记录使用的卡数据</para>
        /// <para>optional int32 State = 5; //状态</para>
        /// <para>optional int32 CalcResult = 6; //计算结果</para>
        /// </summary>
        public bool Has_StateFlag { get; private set; }
        private int __StateFlag;
        public int StateFlag { get { return __StateFlag; } set { __StateFlag = value; Has_StateFlag = true; } }

    }

    /// <summary>废弃</summary>
    public partial class _SavePointLineup : LiteNet.ISyncData
    {
        public _SavePointLineup()
        {
            SelectedCards = new List<int>();
        }
        public List<int> SelectedCards { get; set; }

    }

    /// <summary>场景对象</summary>
    [SLua.CustomLuaClass]
    public partial class _SavePointSceneObject : LiteNet.ISyncData
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

        /// <summary>场景对象id</summary>
        public bool Has_State { get; private set; }
        private int __State;
        public int State { get { return __State; } set { __State = value; Has_State = true; } }

    }

    /// <summary>保存点</summary>
    [SLua.CustomLuaClass]
    public partial class _SavePoint : LiteNet.ISyncData
    {
        public _SavePoint()
        {
            SceneEvents = new List<global::ProtobufPacket._SavePointSceneEvent>();
            SectionList = new List<int>();
            SceneObjects = new List<global::ProtobufPacket._SavePointSceneObject>();
            curLastCameraId = -1;
        }
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

        /// <summary>savePoint唯一标识，id等于行为sceneEvent的id</summary>
        public List<global::ProtobufPacket._SavePointSceneEvent> SceneEvents { get; set; }

        /// <summary>
        /// <para>行为记录</para>
        /// <para>optional _SavePointLineup Lineup = 3; //废弃，阵容</para>
        /// </summary>
        public global::ProtobufPacket._SavePointInvRuntimeData RuntimeData { get; set; }

        /// <summary>
        /// <para>运行数据</para>
        /// <para>optional _SavePointContext Context = 5; //废弃，Context</para>
        /// <para>repeated int32 SceneEventIds = 6; //行为记录id列表，具体数据从storyChapter中拿，废弃</para>
        /// </summary>
        public bool Has_RandCount { get; private set; }
        private int __RandCount;
        public int RandCount { get { return __RandCount; } set { __RandCount = value; Has_RandCount = true; } }

        /// <summary>随机次数</summary>
        public List<int> SectionList { get; set; }

        /// <summary>执行的段落id，恢复的时候先根据行为恢复，再根据此列表记录id回复</summary>
        public bool Has_hasException { get; private set; }
        private bool __hasException;
        public bool hasException { get { return __hasException; } set { __hasException = value; Has_hasException = true; } }

        /// <summary>
        /// <para>是否是异常保存点标记</para>
        /// <para>客户端表现</para>
        /// </summary>
        public List<global::ProtobufPacket._SavePointSceneObject> SceneObjects { get; set; }

        /// <summary>场景对象</summary>
        public bool Has_CamPosX { get; private set; }
        private float __CamPosX;
        public float CamPosX { get { return __CamPosX; } set { __CamPosX = value; Has_CamPosX = true; } }

        /// <summary>相机横坐标</summary>
        public bool Has_CamPosY { get; private set; }
        private float __CamPosY;
        public float CamPosY { get { return __CamPosY; } set { __CamPosY = value; Has_CamPosY = true; } }

        /// <summary>相机纵坐标</summary>
        public bool Has_CamOrth { get; private set; }
        private float __CamOrth;
        public float CamOrth { get { return __CamOrth; } set { __CamOrth = value; Has_CamOrth = true; } }

        /// <summary>相机正交值</summary>
        public bool Has_curSceneNodeId { get; private set; }
        private int __curSceneNodeId;
        public int curSceneNodeId { get { return __curSceneNodeId; } set { __curSceneNodeId = value; Has_curSceneNodeId = true; } }

        /// <summary>当前环境id</summary>
        public string sceneOper { get; set; }

        /// <summary>当前环境特殊指令集合，仅存需要恢复的场景行为</summary>
        public bool Has_curLastCameraId { get; private set; }
        private int __curLastCameraId;
        public int curLastCameraId { get { return __curLastCameraId; } set { __curLastCameraId = value; Has_curLastCameraId = true; } }

    }

    [SLua.CustomLuaClass]
    public partial class _LevelSavePoint : LiteNet.ISyncData
    {
        public _LevelSavePoint()
        {
            SavePoints = new List<global::ProtobufPacket._SavePoint>();
        }
        public bool Has_LevelId { get; private set; }
        private int __LevelId;
        public int LevelId { get { return __LevelId; } set { __LevelId = value; Has_LevelId = true; } }

        /// <summary>关卡的id</summary>
        public List<global::ProtobufPacket._SavePoint> SavePoints { get; set; }

        /// <summary>
        /// <para>关卡保存点数据</para>
        /// <para>repeated int32 SelectedCards = 3; //选择卡牌,废弃</para>
        /// </summary>
        public bool Has_Seed { get; private set; }
        private int __Seed;
        public int Seed { get { return __Seed; } set { __Seed = value; Has_Seed = true; } }

    }

    /// <summary>行为关联数据</summary>
    public partial class _SceneeventAchieveData : LiteNet.ISyncData
    {
        public _SceneeventAchieveData()
        {
            npcStatus = new List<global::ProtobufPacket._NpcStatus>();
        }
        public bool Has_SceneEventId { get; private set; }
        private int __SceneEventId;
        public int SceneEventId { get { return __SceneEventId; } set { __SceneEventId = value; Has_SceneEventId = true; } }

        /// <summary>行为id</summary>
        public List<global::ProtobufPacket._NpcStatus> npcStatus { get; set; }

        /// <summary>在此行为改变的npc状态</summary>
        public bool Has_startTime { get; private set; }
        private int __startTime;
        public int startTime { get { return __startTime; } set { __startTime = value; Has_startTime = true; } }

        /// <summary>
        /// <para>开始时间</para>
        /// <para>optional int32 state = 4; //状态</para>
        /// <para>optional int32 calcResult = 5; //计算结果</para>
        /// </summary>
        public bool Has_PassPersonalityId { get; private set; }
        private int __PassPersonalityId;
        public int PassPersonalityId { get { return __PassPersonalityId; } set { __PassPersonalityId = value; Has_PassPersonalityId = true; } }

        /// <summary>记录通过性格判定的性格id，个人故事需求</summary>
        public bool Has_isActive { get; private set; }
        private bool __isActive;
        public bool isActive { get { return __isActive; } set { __isActive = value; Has_isActive = true; } }

    }

    /// <summary>
    /// <para>调查指令数据</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class _STORY_ACTION : LiteNet.ISyncData
    {
        public _STORY_ACTION()
        {
            intParams = new List<int>();
        }
        public int ActionId { get; set; }

        /// <summary>动作表id（地址）</summary>
        public bool Has_ActionCode { get; private set; }
        private int __ActionCode;
        public int ActionCode { get { return __ActionCode; } set { __ActionCode = value; Has_ActionCode = true; } }

        /// <summary>指令码</summary>
        public List<int> intParams { get; set; }

    }

    /// <summary>
    /// <para>调查段落数据</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class _STORY_SECTION : LiteNet.ISyncData
    {
        public _STORY_SECTION()
        {
            ActionList = new List<global::ProtobufPacket._STORY_ACTION>();
            RelateGameplayId = -1;
        }
        public int SectionId { get; set; }

        /// <summary>段落id</summary>
        public int EventId { get; set; }

        /// <summary>事件id</summary>
        public List<global::ProtobufPacket._STORY_ACTION> ActionList { get; set; }

        /// <summary>指令列表</summary>
        public bool Has_RelateGameplayId { get; private set; }
        private int __RelateGameplayId;
        public int RelateGameplayId { get { return __RelateGameplayId; } set { __RelateGameplayId = value; Has_RelateGameplayId = true; } }

    }

    /// <summary>
    /// <para>调查实例数据</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class _STORY_INST : LiteNet.ISyncData
    {
        public _STORY_INST()
        {
            SectionList = new List<global::ProtobufPacket._STORY_SECTION>();
        }
        public int StoryId { get; set; }

        /// <summary>调查id</summary>
        public List<global::ProtobufPacket._STORY_SECTION> SectionList { get; set; }

    }

    /// <summary>行为关联数据</summary>
    public partial class _GameplayRunningData : LiteNet.ISyncData
    {
        public _GameplayRunningData()
        {
            SectionList = new List<global::ProtobufPacket._STORY_SECTION>();
        }
        public bool Has_GameplayId { get; private set; }
        private int __GameplayId;
        public int GameplayId { get { return __GameplayId; } set { __GameplayId = value; Has_GameplayId = true; } }

        /// <summary>
        /// <para>交互id</para>
        /// <para>optional int32 SceneNodeId = 2[default = -1]; //最终环境id，废弃</para>
        /// <para>repeated _NpcStatus NpcStatus = 3; //npc状态，废弃</para>
        /// <para>repeated _StoryChapterCheckpoint Checkpoints = 4; //检查点，废弃</para>
        /// <para>repeated _SpecialClue SpecialClues = 5; //线索,废弃</para>
        /// </summary>
        public List<global::ProtobufPacket._STORY_SECTION> SectionList { get; set; }

    }

    /// <summary>约会</summary>
    public partial class _Appointment : LiteNet.ISyncData
    {
        public _Appointment()
        {
            SelectionIndex = new List<int>();
        }
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

        /// <summary>约会Id</summary>
        public bool Has_State { get; private set; }
        private int __State;
        public int State { get { return __State; } set { __State = value; Has_State = true; } }

        /// <summary>约会状态</summary>
        public bool Has_bNew { get; private set; }
        private bool __bNew;
        public bool bNew { get { return __bNew; } set { __bNew = value; Has_bNew = true; } }

        /// <summary>是否是新获取约会</summary>
        public List<int> SelectionIndex { get; set; }

    }

    /// <summary>秘密关键字</summary>
    public partial class _SecretKeyword : LiteNet.ISyncData
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

        /// <summary>关键词id</summary>
        public bool Has_State { get; private set; }
        private int __State;
        public int State { get { return __State; } set { __State = value; Has_State = true; } }

    }

    /// <summary>秘密</summary>
    public partial class _Secret : LiteNet.ISyncData
    {
        public _Secret()
        {
            Keywords = new List<global::ProtobufPacket._SecretKeyword>();
        }
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

        /// <summary>秘密id</summary>
        public List<global::ProtobufPacket._SecretKeyword> Keywords { get; set; }

        /// <summary>关键词信息</summary>
        public bool Has_State { get; private set; }
        private int __State;
        public int State { get { return __State; } set { __State = value; Has_State = true; } }

        /// <summary>秘密状态，0未解开 1已解开</summary>
        public bool Has_IsLink { get; private set; }
        private bool __IsLink;
        public bool IsLink { get { return __IsLink; } set { __IsLink = value; Has_IsLink = true; } }

        /// <summary>是否已经关联</summary>
        public bool Has_AwardFlag { get; private set; }
        private int __AwardFlag;
        public int AwardFlag { get { return __AwardFlag; } set { __AwardFlag = value; Has_AwardFlag = true; } }

    }

    /// <summary>充值购买次数</summary>
    public partial class _RechargeShopInfo : LiteNet.ISyncData
    {
        public bool Has_ShopId { get; private set; }
        private int __ShopId;
        public int ShopId { get { return __ShopId; } set { __ShopId = value; Has_ShopId = true; } }

        public bool Has_ShopBuyNum { get; private set; }
        private int __ShopBuyNum;
        public int ShopBuyNum { get { return __ShopBuyNum; } set { __ShopBuyNum = value; Has_ShopBuyNum = true; } }

    }

    public partial class GC_SESSION : LiteNet.IMessage
    {
        public bool Has_session { get; private set; }
        private int __session;
        public int session { get { return __session; } set { __session = value; Has_session = true; } }

    }

    public partial class CG_LOGIN : LiteNet.IMessage
    {
        public enum LOGINTYPE
        {
            TEST = 0,
            /// <summary>非sdk登陆</summary>
            ONE = 1,
            /// <summary>sdk登陆</summary>
            MSDK = 2,
        }

        /// <summary>目前已经废弃了这种方式</summary>
        public enum BIOSTYPE
        {
            IOSJB = 1,
            ANDROID = 2,
            IOS = 3,
        }

        public bool Has_logintype { get; private set; }
        private int __logintype;
        public int logintype { get { return __logintype; } set { __logintype = value; Has_logintype = true; } }

        public bool Has_gameversion { get; private set; }
        private int __gameversion;
        public int gameversion { get { return __gameversion; } set { __gameversion = value; Has_gameversion = true; } }

        public bool Has_programversion { get; private set; }
        private int __programversion;
        public int programversion { get { return __programversion; } set { __programversion = value; Has_programversion = true; } }

        public bool Has_forceenter { get; private set; }
        private bool __forceenter;
        public bool forceenter { get { return __forceenter; } set { __forceenter = value; Has_forceenter = true; } }

        public bool Has_maxpacketid { get; private set; }
        private int __maxpacketid;
        public int maxpacketid { get { return __maxpacketid; } set { __maxpacketid = value; Has_maxpacketid = true; } }

        public string accountname { get; set; }

        public string token { get; set; }

        public bool Has_bios { get; private set; }
        private int __bios;
        public int bios { get { return __bios; } set { __bios = value; Has_bios = true; } }

        /// <summary>手机系统类型</summary>
        public string bimac { get; set; }

        public bool Has_rapidvalidatecode { get; private set; }
        private int __rapidvalidatecode;
        public int rapidvalidatecode { get { return __rapidvalidatecode; } set { __rapidvalidatecode = value; Has_rapidvalidatecode = true; } }

        public bool Has_autoselectroleguid { get; private set; }
        private ulong __autoselectroleguid;
        public ulong autoselectroleguid { get { return __autoselectroleguid; } set { __autoselectroleguid = value; Has_autoselectroleguid = true; } }

        public string onepushid { get; set; }

        public string accountactivation { get; set; }

        public bool Has_mediaid { get; private set; }
        private int __mediaid;
        public int mediaid { get { return __mediaid; } set { __mediaid = value; Has_mediaid = true; } }

        public string phonemodel { get; set; }

        public global::ProtobufPacket._MSDK msdk { get; set; }

        public bool Has_resversion { get; private set; }
        private int __resversion;
        public int resversion { get { return __resversion; } set { __resversion = value; Has_resversion = true; } }

        public bool Has_selectworldid { get; private set; }
        private int __selectworldid;
        public int selectworldid { get { return __selectworldid; } set { __selectworldid = value; Has_selectworldid = true; } }

        public bool Has_runninglevelid { get; private set; }
        private int __runninglevelid;
        public int runninglevelid { get { return __runninglevelid; } set { __runninglevelid = value; Has_runninglevelid = true; } }

        /// <summary>正在调查的关卡 断线重连</summary>
        public string uuid { get; set; }

        /// <summary>每台手机唯一uuid</summary>
        public bool Has_MemorySize { get; private set; }
        private long __MemorySize;
        public long MemorySize { get { return __MemorySize; } set { __MemorySize = value; Has_MemorySize = true; } }

    }

    /// <summary>
    /// <para>#client login result</para>
    /// <para>@GC</para>
    /// </summary>
    public partial class GC_LOGIN_RET : LiteNet.IMessage
    {
        public bool Has_result { get; private set; }
        private global::ProtobufPacket.RESULT __result;
        public global::ProtobufPacket.RESULT result { get { return __result; } set { __result = value; Has_result = true; } }

        public bool Has_validateprocessfailcode { get; private set; }
        private int __validateprocessfailcode;
        public int validateprocessfailcode { get { return __validateprocessfailcode; } set { __validateprocessfailcode = value; Has_validateprocessfailcode = true; } }

        public bool Has_validatefailcode { get; private set; }
        private int __validatefailcode;
        public int validatefailcode { get { return __validatefailcode; } set { __validatefailcode = value; Has_validatefailcode = true; } }

        public string validatefailmsg { get; set; }

        public bool Has_rapidvalidatecode { get; private set; }
        private int __rapidvalidatecode;
        public int rapidvalidatecode { get { return __rapidvalidatecode; } set { __rapidvalidatecode = value; Has_rapidvalidatecode = true; } }

        /// <summary>
        /// <para>optional string     platformrestrictnotice              = 6;</para>
        /// <para>optional _User       user                                = 7;</para>
        /// <para>optional string		noplaymsg							= 8;</para>
        /// </summary>
        public bool Has_openNumeralTime { get; private set; }
        private long __openNumeralTime;
        public long openNumeralTime { get { return __openNumeralTime; } set { __openNumeralTime = value; Has_openNumeralTime = true; } }

        /// <summary>
        /// <para>开服时间</para>
        /// <para>optional string     preName                     		= 10;//H5预创角名称</para>
        /// </summary>
        public string name { get; set; }

        /// <summary> 名字</summary>
        public bool Has_level { get; private set; }
        private int __level;
        public int level { get { return __level; } set { __level = value; Has_level = true; } }

        /// <summary> 等级</summary>
        public bool Has_exp { get; private set; }
        private int __exp;
        public int exp { get { return __exp; } set { __exp = value; Has_exp = true; } }

    }

    public partial class GC_USER_DATA : LiteNet.IMessage
    {
        public global::ProtobufPacket._User user { get; set; }

        public bool Has_openNumeralTime { get; private set; }
        private long __openNumeralTime;
        public long openNumeralTime { get { return __openNumeralTime; } set { __openNumeralTime = value; Has_openNumeralTime = true; } }

        /// <summary>开服时间</summary>
        public bool Has_serveranstime { get; private set; }
        private int __serveranstime;
        public int serveranstime { get { return __serveranstime; } set { __serveranstime = value; Has_serveranstime = true; } }

        /// <summary>服务器当前anstime</summary>
        public bool Has_isNonage { get; private set; }
        private int __isNonage;
        public int isNonage { get { return __isNonage; } set { __isNonage = value; Has_isNonage = true; } }

        /// <summary>防沉迷账号是否未成年</summary>
        public bool Has_firstLogin { get; private set; }
        private bool __firstLogin;
        public bool firstLogin { get { return __firstLogin; } set { __firstLogin = value; Has_firstLogin = true; } }

        /// <summary>是否第一次登录</summary>
        public bool Has_IsReceivePhoneAward { get; private set; }
        private bool __IsReceivePhoneAward;
        public bool IsReceivePhoneAward { get { return __IsReceivePhoneAward; } set { __IsReceivePhoneAward = value; Has_IsReceivePhoneAward = true; } }

        /// <summary>是否绑定手机</summary>
        public bool Has_lastLogoutTime { get; private set; }
        private long __lastLogoutTime;
        public long lastLogoutTime { get { return __lastLogoutTime; } set { __lastLogoutTime = value; Has_lastLogoutTime = true; } }

    }

    /// <summary>
    /// <para>#request heartbeat, this is a bit weird, server is actively sending heartbeat to client</para>
    /// <para>@XX</para>
    /// </summary>
    public partial class XX_REQUEST_HEARTBEAT : LiteNet.IMessage
    {
        public int ansi_time { get; set; }

    }

    /// <summary>
    /// <para>#response heartbeat</para>
    /// <para>@XX</para>
    /// </summary>
    public partial class XX_RESPONSE_HEARTBEAT : LiteNet.IMessage
    {
    }

    /// <summary>
    /// <para>#Gm command str</para>
    /// <para>@CG</para>
    /// </summary>
    public partial class CG_GMCMDSTR : LiteNet.IMessage
    {
        public string cmdstr { get; set; }

    }

    /// <summary>
    /// <para>#notice from server</para>
    /// <para>@GC</para>
    /// </summary>
    public partial class GC_NOTICE : LiteNet.IMessage
    {
        public string notice { get; set; }

        /// <summary>notice的内容</summary>
        public bool Has_filterRepeat { get; private set; }
        private int __filterRepeat;
        public int filterRepeat { get { return __filterRepeat; } set { __filterRepeat = value; Has_filterRepeat = true; } }

    }

    /// <summary>
    /// <para>#rolling notice from server</para>
    /// <para>@GC</para>
    /// </summary>
    public partial class GC_ROLLING_NOTICE : LiteNet.IMessage
    {
        public global::ProtobufPacket._DBNotice Notice { get; set; }

    }

    /// <summary>
    /// <para>#login queue status</para>
    /// <para>@GC</para>
    /// </summary>
    public partial class GC_LOGIN_QUEUE_STATUS : LiteNet.IMessage
    {
        public enum STATUS
        {
            BEGIN = 0,
            UPDATE = 1,
            END = 2,
        }

        public int status { get; set; }

        public int index { get; set; }

        public bool Has_timeForEach { get; private set; }
        private float __timeForEach;
        public float timeForEach { get { return __timeForEach; } set { __timeForEach = value; Has_timeForEach = true; } }

    }

    /// <summary>
    /// <para>#Server Syn Attr</para>
    /// <para>@GC</para>
    /// </summary>
    public partial class GC_SYN_ATTR : LiteNet.IMessage
    {
        public bool Has_GoldCoin { get; private set; }
        private long __GoldCoin;
        public long GoldCoin { get { return __GoldCoin; } set { __GoldCoin = value; Has_GoldCoin = true; } }

        /// <summary>金币</summary>
        public bool Has_Diamond { get; private set; }
        private long __Diamond;
        public long Diamond { get { return __Diamond; } set { __Diamond = value; Has_Diamond = true; } }

        /// <summary>元宝</summary>
        public bool Has_Stamina { get; private set; }
        private int __Stamina;
        public int Stamina { get { return __Stamina; } set { __Stamina = value; Has_Stamina = true; } }

        /// <summary>体力</summary>
        public bool Has_BindYuanBao { get; private set; }
        private long __BindYuanBao;
        public long BindYuanBao { get { return __BindYuanBao; } set { __BindYuanBao = value; Has_BindYuanBao = true; } }

        /// <summary>绑定元宝</summary>
        public bool Has_Confidence { get; private set; }
        private int __Confidence;
        public int Confidence { get { return __Confidence; } set { __Confidence = value; Has_Confidence = true; } }

        /// <summary>信心</summary>
        public bool Has_Exp { get; private set; }
        private int __Exp;
        public int Exp { get { return __Exp; } set { __Exp = value; Has_Exp = true; } }

        /// <summary>经验</summary>
        public bool Has_Level { get; private set; }
        private int __Level;
        public int Level { get { return __Level; } set { __Level = value; Has_Level = true; } }

        /// <summary>等级</summary>
        public bool Has_GoldBuyTimes { get; private set; }
        private int __GoldBuyTimes;
        public int GoldBuyTimes { get { return __GoldBuyTimes; } set { __GoldBuyTimes = value; Has_GoldBuyTimes = true; } }

        /// <summary>金币购买次数</summary>
        public bool Has_StaminaBuyTimes { get; private set; }
        private int __StaminaBuyTimes;
        public int StaminaBuyTimes { get { return __StaminaBuyTimes; } set { __StaminaBuyTimes = value; Has_StaminaBuyTimes = true; } }

        /// <summary>体力购买次数</summary>
        public bool Has_GoldCoinDebt { get; private set; }
        private long __GoldCoinDebt;
        public long GoldCoinDebt { get { return __GoldCoinDebt; } set { __GoldCoinDebt = value; Has_GoldCoinDebt = true; } }

        /// <summary>玩家欠系统金币</summary>
        public bool Has_DiamondDebt { get; private set; }
        private long __DiamondDebt;
        public long DiamondDebt { get { return __DiamondDebt; } set { __DiamondDebt = value; Has_DiamondDebt = true; } }

        /// <summary>玩家欠系统元宝</summary>
        public bool Has_TotalCash { get; private set; }
        private long __TotalCash;
        public long TotalCash { get { return __TotalCash; } set { __TotalCash = value; Has_TotalCash = true; } }

    }

    /// <summary>
    /// <para>#create user</para>
    /// <para>@CG</para>
    /// </summary>
    public partial class CG_CREATE_USER : LiteNet.IMessage
    {
        public CG_CREATE_USER()
        {
            dyeColorItem = new List<int>();
        }
        public string name { get; set; }

        public int sex { get; set; }

        public List<int> dyeColorItem { get; set; }

        public int skin { get; set; }

    }

    /// <summary>
    /// <para>#create user ret</para>
    /// <para>@GC</para>
    /// </summary>
    public partial class GC_CREATE_USER_RET : LiteNet.IMessage
    {
        public global::ProtobufPacket.RESULT result { get; set; }

        public global::ProtobufPacket._User user { get; set; }

    }

    /// <summary>server send item to client</summary>
    public partial class GC_ITEM_UPDATE : LiteNet.IMessage
    {
        public GC_ITEM_UPDATE()
        {
            packindex = new List<int>();
            item = new List<global::ProtobufPacket._ITEM>();
        }
        public List<int> packindex { get; set; }

        /// <summary>背包索引</summary>
        public List<global::ProtobufPacket._ITEM> item { get; set; }

        /// <summary>物品结构</summary>
        public bool fullsync { get; set; }

    }

    /// <summary>client send use item</summary>
    public partial class CG_ITEM_USE : LiteNet.IMessage
    {
        public CG_ITEM_USE()
        {
            itemSele = new List<int>();
        }
        public ulong itemguid { get; set; }

        /// <summary>guid</summary>
        public int itemNum { get; set; }

        /// <summary>num</summary>
        public List<int> itemSele { get; set; }

    }

    public partial class GC_DROP_LIST : LiteNet.IMessage
    {
        public global::ProtobufPacket._DROP_LIST drop { get; set; }

        /// <summary>掉落列表</summary>
        public int dropchannel { get; set; }

        /// <summary>掉落途径，服务器根据功能填充</summary>
        public int dropsubchannel { get; set; }

        /// <summary>掉落途径子ID，主要用来区分某类掉落的具体标识</summary>
        public string extraMsg { get; set; }

    }

    /// <summary>
    /// <para>#Enter Scene</para>
    /// <para>@GC</para>
    /// </summary>
    public partial class GC_ENTER_CONTAINER : LiteNet.IMessage
    {
        public GC_ENTER_CONTAINER()
        {
            sceneid = -1;
            isInYard = false;
        }
        public int containerinstcount { get; set; }

        public int curcontainerinst { get; set; }

        public int containerplayercount { get; set; }

        public bool Has_isInBattle { get; private set; }
        private bool __isInBattle;
        public bool isInBattle { get { return __isInBattle; } set { __isInBattle = value; Has_isInBattle = true; } }

        public bool Has_containerType { get; private set; }
        private int __containerType;
        public int containerType { get { return __containerType; } set { __containerType = value; Has_containerType = true; } }

        public bool Has_sceneid { get; private set; }
        private int __sceneid;
        public int sceneid { get { return __sceneid; } set { __sceneid = value; Has_sceneid = true; } }

        public bool Has_isInYard { get; private set; }
        private bool __isInYard;
        public bool isInYard { get { return __isInYard; } set { __isInYard = value; Has_isInYard = true; } }

    }

    public partial class GC_MAIL : LiteNet.IMessage
    {
        public GC_MAIL()
        {
            isNew = false;
            mails = new List<global::ProtobufPacket._MailNew>();
        }
        public bool Has_isNew { get; private set; }
        private bool __isNew;
        public bool isNew { get { return __isNew; } set { __isNew = value; Has_isNew = true; } }

        /// <summary>repeated _Mail  mails = 2; 废弃</summary>
        public List<global::ProtobufPacket._MailNew> mails { get; set; }

    }

    public partial class CG_MAIL_OPERATION : LiteNet.IMessage
    {
        public CG_MAIL_OPERATION()
        {
            OperationType = 2;
        }
        public enum OPTYPE
        {
            OP_GETITEM = 1,
            /// <summary>提取</summary>
            OP_SETREAD = 2,
            /// <summary>标记已读</summary>
            OP_GETALLITEM = 3,
            /// <summary>提取全部附件</summary>
            OP_DELALL = 4,
            /// <summary>一键删除</summary>
            OP_DEL = 5,
        }

        /// <summary>删除一个</summary>
        public bool Has_OperationType { get; private set; }
        private int __OperationType;
        public int OperationType { get { return __OperationType; } set { __OperationType = value; Has_OperationType = true; } }

        /// <summary>操作类型</summary>
        public bool Has_MailGuid { get; private set; }
        private ulong __MailGuid;
        public ulong MailGuid { get { return __MailGuid; } set { __MailGuid = value; Has_MailGuid = true; } }

    }

    public partial class GC_MAIL_OPERATION : LiteNet.IMessage
    {
        public GC_MAIL_OPERATION()
        {
            OperationType = 2;
            MailGuids = new List<ulong>();
        }
        public enum OPTYPE
        {
            OP_GETITEM = 1,
            /// <summary>提取</summary>
            OP_SETREAD = 2,
            /// <summary>标记已读</summary>
            OP_DEL = 3,
        }

        /// <summary>删除</summary>
        public bool Has_OperationType { get; private set; }
        private int __OperationType;
        public int OperationType { get { return __OperationType; } set { __OperationType = value; Has_OperationType = true; } }

        /// <summary>操作类型</summary>
        public List<ulong> MailGuids { get; set; }

    }

    /// <summary>
    /// <para>GD、DG packet  define</para>
    /// <para></para>
    /// <para>GameServer Send Validate Request To DBAgent</para>
    /// </summary>
    public partial class GD_VALIDATE : LiteNet.IMessage
    {
        public int WorldId { get; set; }

        /// <summary>世界号</summary>
        public int GameVersion { get; set; }

        /// <summary>主版本号</summary>
        public int ProgramVersion { get; set; }

        /// <summary>程序版本号</summary>
        public int InternalVersion { get; set; }

        /// <summary>内部版本号</summary>
        public int DBVersion { get; set; }

    }

    /// <summary>DBAgent Send Validate Result To GameServer</summary>
    public partial class DG_VALIDATE_RET : LiteNet.IMessage
    {
        public bool ValidateRet { get; set; }

    }

    /// <summary>GameServer Load StartUp Data</summary>
    public partial class GD_LOAD_STARTUPDATA : LiteNet.IMessage
    {
        public global::ProtobufPacket._GDGPacketCheckData checkdata { get; set; }

    }

    /// <summary>GameServer Load StartUp Data Result</summary>
    public partial class DG_LOAD_STARTUPDATA_RESULT : LiteNet.IMessage
    {
        public DG_LOAD_STARTUPDATA_RESULT()
        {
            guidtype = new List<uint>();
            guidcarry = new List<uint>();
            guidserial = new List<uint>();
            worlddatakey = new List<string>();
            worlddataval = new List<long>();
            accounts = new List<string>();
            guids = new List<long>();
        }
        public global::ProtobufPacket._GDGPacketCheckData checkdata { get; set; }

        /// <summary>消息包验证数据</summary>
        public int loadresult { get; set; }

        /// <summary>加载结果</summary>
        public List<uint> guidtype { get; set; }

        /// <summary>guid类型</summary>
        public List<uint> guidcarry { get; set; }

        /// <summary>guid进位</summary>
        public List<uint> guidserial { get; set; }

        /// <summary>guid序列</summary>
        public List<string> worlddatakey { get; set; }

        public List<long> worlddataval { get; set; }

        public int pagesize { get; set; }

        /// <summary>分页数量</summary>
        public List<string> accounts { get; set; }

        /// <summary>account</summary>
        public int pageindex { get; set; }

        /// <summary>当前页</summary>
        public List<long> guids { get; set; }

    }

    public partial class DG_RET_RANDOMNAMES : LiteNet.IMessage
    {
        public DG_RET_RANDOMNAMES()
        {
            names = new List<string>();
            sexs = new List<int>();
        }
        public global::ProtobufPacket._GDGPacketCheckData checkdata { get; set; }

        /// <summary>消息包验证数据</summary>
        public List<string> names { get; set; }

        /// <summary>随机名字</summary>
        public List<int> sexs { get; set; }

    }

    /// <summary>Create Player</summary>
    public partial class GD_CREATE_PLAYER : LiteNet.IMessage
    {
        public global::ProtobufPacket._GDGPacketCheckData checkdata { get; set; }

        /// <summary>消息包验证数据</summary>
        public int playerid { get; set; }

        /// <summary>net player id</summary>
        public byte[] playerbasedata { get; set; }

        /// <summary>玩家基础数据</summary>
        public int playerbasedatasize { get; set; }

        /// <summary>玩家基础数据大小</summary>
        public bool shouldcheckactivationcode { get; set; }

        public string activationcode { get; set; }

        public int gameserverroutineid { get; set; }

        public ulong u64param1 { get; set; }

    }

    /// <summary>Create Player Reslt</summary>
    public partial class DG_CREATE_PLAYER_RESULT : LiteNet.IMessage
    {
        public global::ProtobufPacket._GDGPacketCheckData checkdata { get; set; }

        /// <summary>消息包验证数据</summary>
        public int playerid { get; set; }

        /// <summary>net player id</summary>
        public int createresult { get; set; }

        /// <summary>创建结果</summary>
        public byte[] playerbasedata { get; set; }

        /// <summary>玩家基础数据</summary>
        public bool Has_playerbasedatasize { get; private set; }
        private int __playerbasedatasize;
        public int playerbasedatasize { get { return __playerbasedatasize; } set { __playerbasedatasize = value; Has_playerbasedatasize = true; } }

        /// <summary>玩家基础数据大小</summary>
        public string playername { get; set; }

        public int gameserverroutineid { get; set; }

        public ulong u64param1 { get; set; }

        public ulong existplayerguid { get; set; }

    }

    /// <summary>Save Player</summary>
    public partial class GD_SAVE_PLAYER : LiteNet.IMessage
    {
        public global::ProtobufPacket._GDGPacketCheckData checkdata { get; set; }

        /// <summary>消息包验证数据</summary>
        public byte[] playerfulldata { get; set; }

        /// <summary>全部玩家数据</summary>
        public int playerfulldatasize { get; set; }

        /// <summary>全部玩家数据大小</summary>
        public int serialnumber { get; set; }

        /// <summary>序列号</summary>
        public int gameserverroutineid { get; set; }

        public ulong u64param1 { get; set; }

    }

    /// <summary>Load Player</summary>
    public partial class GD_LOAD_PLAYER : LiteNet.IMessage
    {
        public global::ProtobufPacket._GDGPacketCheckData checkdata { get; set; }

        /// <summary>消息包验证数据</summary>
        public int serialnumber { get; set; }

        /// <summary>序列号</summary>
        public ulong playerguid { get; set; }

    }

    /// <summary>Load Player Result</summary>
    public partial class DG_LOAD_PLAYER_RESULT : LiteNet.IMessage
    {
        public global::ProtobufPacket._GDGPacketCheckData checkdata { get; set; }

        /// <summary>消息包验证数据</summary>
        public int loadresult { get; set; }

        /// <summary>加载结果</summary>
        public byte[] playerfulldata { get; set; }

        /// <summary>全部玩家数据</summary>
        public bool Has_playerfulldatasize { get; private set; }
        private int __playerfulldatasize;
        public int playerfulldatasize { get { return __playerfulldatasize; } set { __playerfulldatasize = value; Has_playerfulldatasize = true; } }

        /// <summary>全部玩家数据长度</summary>
        public int serialnumber { get; set; }

        /// <summary>序列号</summary>
        public ulong playerguid { get; set; }

    }

    /// <summary>Load Routine CommonData</summary>
    public partial class GD_LOAD_ROUTINECOMMONDATA : LiteNet.IMessage
    {
        public global::ProtobufPacket._GDGPacketCheckData checkdata { get; set; }

        /// <summary>消息包验证数据</summary>
        public int routineid { get; set; }

    }

    /// <summary>Load Routine CommonData Result</summary>
    public partial class DG_LOAD_ROUTINECOMMONDATA_RESULT : LiteNet.IMessage
    {
        public DG_LOAD_ROUTINECOMMONDATA_RESULT()
        {
            int32data = new List<int>();
            int64data = new List<long>();
            uint64data = new List<ulong>();
        }
        public global::ProtobufPacket._GDGPacketCheckData checkdata { get; set; }

        /// <summary>消息包验证数据</summary>
        public int loadresult { get; set; }

        /// <summary>是否加载成功</summary>
        public int routineid { get; set; }

        /// <summary>routine 的ID</summary>
        public List<int> int32data { get; set; }

        /// <summary>int32数据</summary>
        public List<long> int64data { get; set; }

        /// <summary>int64数据</summary>
        public List<ulong> uint64data { get; set; }

        /// <summary>uint64数据</summary>
        public string chardata1 { get; set; }

        /// <summary>字符串1</summary>
        public string chardata2 { get; set; }

        /// <summary>字符串2</summary>
        public string chardata3 { get; set; }

        /// <summary>字符串3</summary>
        public string chardata4 { get; set; }

        /// <summary>字符串4</summary>
        public byte[] buycountdata { get; set; }

        public int buycountdatasize { get; set; }

        public byte[] rsbuycountdata { get; set; }

        public int rsbuycountdatasize { get; set; }

    }

    /// <summary>Save Routine CommonData Record</summary>
    public partial class GD_SAVE_ROUTINECOMMONDATA : LiteNet.IMessage
    {
        public GD_SAVE_ROUTINECOMMONDATA()
        {
            int32data = new List<int>();
            int64data = new List<long>();
            uint64data = new List<ulong>();
        }
        public global::ProtobufPacket._GDGPacketCheckData checkdata { get; set; }

        /// <summary>消息包验证数据</summary>
        public int routineid { get; set; }

        /// <summary>routine 的ID</summary>
        public List<int> int32data { get; set; }

        /// <summary>int32数据</summary>
        public List<long> int64data { get; set; }

        /// <summary>int64数据</summary>
        public List<ulong> uint64data { get; set; }

        /// <summary>uint64数据</summary>
        public string chardata1 { get; set; }

        /// <summary>字符串1</summary>
        public string chardata2 { get; set; }

        /// <summary>字符串2</summary>
        public string chardata3 { get; set; }

        /// <summary>字符串3</summary>
        public string chardata4 { get; set; }

        /// <summary>字符串4</summary>
        public byte[] buycountdata { get; set; }

        public int buycountdatasize { get; set; }

        public byte[] rsbuycountdata { get; set; }

        public int rsbuycountdatasize { get; set; }

    }

    /// <summary>Save Guid</summary>
    public partial class GD_SAVE_GUID : LiteNet.IMessage
    {
        public global::ProtobufPacket._GDGPacketCheckData checkdata { get; set; }

        /// <summary>消息包验证数据</summary>
        public uint type { get; set; }

        /// <summary>guid 类型</summary>
        public uint carry { get; set; }

        /// <summary>guid 进位</summary>
        public uint serial { get; set; }

    }

    public partial class GD_RELOAD : LiteNet.IMessage
    {
        public enum TYPE
        {
            CONFIG = 0,
            TABLE = 1,
            LUA = 2,
        }

        public global::ProtobufPacket._GDGPacketCheckData checkdata { get; set; }

        /// <summary>消息包验证数据</summary>
        public int type { get; set; }

        /// <summary>重载类型</summary>
        public string param1 { get; set; }

        /// <summary>参数1</summary>
        public bool Has_param2 { get; private set; }
        private int __param2;
        public int param2 { get { return __param2; } set { __param2 = value; Has_param2 = true; } }

    }

    public partial class GD_LOAD_PLAYERGUID : LiteNet.IMessage
    {
        public global::ProtobufPacket._GDGPacketCheckData checkdata { get; set; }

        /// <summary>消息包验证数据</summary>
        public string playername { get; set; }

        public ulong param1 { get; set; }

    }

    public partial class DG_LOAD_PLAYERGUID_RETSULT : LiteNet.IMessage
    {
        public global::ProtobufPacket._GDGPacketCheckData checkdata { get; set; }

        /// <summary>消息包验证数据</summary>
        public int loadresult { get; set; }

        public string playername { get; set; }

        public ulong param1 { get; set; }

        public ulong playerguid { get; set; }

    }

    /// <summary>Create Player</summary>
    public partial class GD_CREATE_PLAYER2 : LiteNet.IMessage
    {
        public global::ProtobufPacket._GDGPacketCheckData checkdata { get; set; }

        /// <summary>消息包验证数据</summary>
        public int playerid { get; set; }

        /// <summary>net player id</summary>
        public global::ProtobufPacket._DBBasePlayer basePlayer { get; set; }

        /// <summary>玩家基础数据</summary>
        public bool shouldcheckactivationcode { get; set; }

        public string activationcode { get; set; }

        public int gameserverroutineid { get; set; }

        public global::ProtobufPacket._DBPlayerPiece playerPiece { get; set; }

        public bool Has_param1 { get; private set; }
        private ulong __param1;
        public ulong param1 { get { return __param1; } set { __param1 = value; Has_param1 = true; } }

    }

    /// <summary>Create Player Reslt</summary>
    public partial class DG_CREATE_PLAYER_RESULT2 : LiteNet.IMessage
    {
        public global::ProtobufPacket._GDGPacketCheckData checkdata { get; set; }

        /// <summary>消息包验证数据</summary>
        public int playerid { get; set; }

        /// <summary>net player id</summary>
        public global::ProtobufPacket._DBResult result { get; set; }

        /// <summary>创建结果</summary>
        public global::ProtobufPacket._DBBasePlayer basePlayer { get; set; }

        /// <summary>玩家基础数据</summary>
        public string playername { get; set; }

        public int gameserverroutineid { get; set; }

        public ulong existplayerguid { get; set; }

        public global::ProtobufPacket._DBPlayerPiece playerPiece { get; set; }

        public bool Has_param1 { get; private set; }
        private ulong __param1;
        public ulong param1 { get { return __param1; } set { __param1 = value; Has_param1 = true; } }

    }

    /// <summary>Save Player</summary>
    public partial class GD_SAVE_PLAYER2 : LiteNet.IMessage
    {
        public global::ProtobufPacket._GDGPacketCheckData checkdata { get; set; }

        /// <summary>
        /// <para>消息包验证数据</para>
        /// <para>optional _DBFullPlayer fullPlayer = 2;		//玩家基础数据</para>
        /// </summary>
        public int serialnumber { get; set; }

        /// <summary>序列号</summary>
        public int gameserverroutineid { get; set; }

    }

    /// <summary>Load Player</summary>
    public partial class GD_LOAD_PLAYER2 : LiteNet.IMessage
    {
        public global::ProtobufPacket._GDGPacketCheckData checkdata { get; set; }

        /// <summary>消息包验证数据</summary>
        public int serialnumber { get; set; }

        /// <summary>序列号</summary>
        public ulong playerguid { get; set; }

    }

    /// <summary>Load Player Result</summary>
    public partial class DG_LOAD_PLAYER_RESULT2 : LiteNet.IMessage
    {
        public global::ProtobufPacket._GDGPacketCheckData checkdata { get; set; }

        /// <summary>消息包验证数据</summary>
        public global::ProtobufPacket._DBResult result { get; set; }

        /// <summary>
        /// <para>加载结果</para>
        /// <para>optional _DBFullPlayer fullPlayer = 3;		//玩家数据</para>
        /// </summary>
        public int serialnumber { get; set; }

        /// <summary>序列号</summary>
        public ulong playerguid { get; set; }

    }

    /// <summary>GameServer Send Validate Request To HttpAgent</summary>
    public partial class GH_VALIDATE : LiteNet.IMessage
    {
        public int WorldId { get; set; }

        /// <summary>世界号</summary>
        public int GameVersion { get; set; }

        /// <summary>主版本号</summary>
        public int ProgramVersion { get; set; }

        /// <summary>程序版本号</summary>
        public int InternalVersion { get; set; }

        /// <summary>内部版本号</summary>
        public int DBVersion { get; set; }

    }

    /// <summary>HttpAgent Send Validate Result To GameServer</summary>
    public partial class HG_VALIDATE_RET : LiteNet.IMessage
    {
        public bool ValidateRet { get; set; }

    }

    public partial class GH_COMMON_HTTP_REQUEST : LiteNet.IMessage
    {
        public int RequestType { get; set; }

        public string RequestUrl { get; set; }

        public ulong GuidParam1 { get; set; }

        public ulong GuidParam2 { get; set; }

        public long int64Param1 { get; set; }

        public long int64Param2 { get; set; }

        public int int32Param1 { get; set; }

        public int int32Param2 { get; set; }

    }

    public partial class HG_COMMON_HTTP_RESPONSE : LiteNet.IMessage
    {
        public int RequestType { get; set; }

        public string ResponseBody { get; set; }

        public ulong GuidParam1 { get; set; }

        public ulong GuidParam2 { get; set; }

        public long int64Param1 { get; set; }

        public long int64Param2 { get; set; }

        public int int32Param1 { get; set; }

        public int int32Param2 { get; set; }

        public int ResultCode { get; set; }

    }

    public partial class HG_ONESDK_RECHARGE_ORDER : LiteNet.IMessage
    {
        public long connid { get; set; }

        public global::ProtobufPacket._RECHARGEORDER order { get; set; }

    }

    public partial class GH_ONESDK_RECHARGE_ORDER_RET : LiteNet.IMessage
    {
        public int success { get; set; }

        public long connid { get; set; }

        public global::ProtobufPacket._RECHARGEORDER order { get; set; }

    }

    public partial class GH_VALIDATE_ACCOUNT : LiteNet.IMessage
    {
        public int PlayerId { get; set; }

        public int ValidateType { get; set; }

        public string UserIdentity { get; set; }

        public string Token { get; set; }

        public int BIos { get; set; }

        public int BIplatformid { get; set; }

        public string BIplatform { get; set; }

        public string BImac { get; set; }

        public int RapidValidateCode { get; set; }

        public ulong AutoSelectRoleGuid { get; set; }

        public string IP { get; set; }

        public long RequestTime { get; set; }

        public string OnePushId { get; set; }

        public bool shouldcheckactivation { get; set; }

        public string accountactivation { get; set; }

        public int mediaid { get; set; }

        public string phonemodel { get; set; }

        public global::ProtobufPacket._MSDK msdk { get; set; }

        public string biuuid { get; set; }

        public bool Has_memorySize { get; private set; }
        private long __memorySize;
        public long memorySize { get { return __memorySize; } set { __memorySize = value; Has_memorySize = true; } }

    }

    public partial class HG_VALIDATE_ACCOUNT_RET : LiteNet.IMessage
    {
        public int RetCode { get; set; }

        public int SDKCode { get; set; }

        public string SDKMsg { get; set; }

        public int PlayerId { get; set; }

        public int ValidateType { get; set; }

        public string UserIdentity { get; set; }

        public int BIos { get; set; }

        public int BIplatformid { get; set; }

        public string BIplatform { get; set; }

        public string BImac { get; set; }

        public string Token { get; set; }

        public int RapidValidateCode { get; set; }

        public ulong AutoSelectRoleGuid { get; set; }

        public string IP { get; set; }

        public long RequestTime { get; set; }

        public string OnePushId { get; set; }

        public bool shouldcheckactivation { get; set; }

        public string accountactivation { get; set; }

        public int mediaid { get; set; }

        public string phonemodel { get; set; }

        public global::ProtobufPacket._MSDK msdk { get; set; }

        public string biuuid { get; set; }

        public bool Has_memorySize { get; private set; }
        private long __memorySize;
        public long memorySize { get { return __memorySize; } set { __memorySize = value; Has_memorySize = true; } }

    }

    public partial class GH_RELOAD : LiteNet.IMessage
    {
        public enum TYPE
        {
            CONFIG = 0,
            TABLE = 1,
            LUA = 2,
        }

        public int type { get; set; }

        /// <summary>重载类型</summary>
        public string param1 { get; set; }

        /// <summary>参数1</summary>
        public bool Has_param2 { get; private set; }
        private int __param2;
        public int param2 { get { return __param2; } set { __param2 = value; Has_param2 = true; } }

    }

    public partial class HG_IWPLAY_ORDER : LiteNet.IMessage
    {
        public long connid { get; set; }

        public global::ProtobufPacket._IWPLAYORDER order { get; set; }

    }

    public partial class GH_IWPLAY_ORDER_RET : LiteNet.IMessage
    {
        public int ret { get; set; }

        public long connid { get; set; }

        public global::ProtobufPacket._IWPLAYORDER order { get; set; }

    }

    /// <summary>DBError 监控</summary>
    public partial class DG_MONITOR_DBERROR : LiteNet.IMessage
    {
        public global::ProtobufPacket._GDGPacketCheckData checkdata { get; set; }

        /// <summary>消息包验证数据</summary>
        public uint errorcode { get; set; }

        public string errormsg { get; set; }

    }

    /// <summary>Check Player NewName</summary>
    public partial class GD_CHECK_PLAYERNEWNAME : LiteNet.IMessage
    {
        public global::ProtobufPacket._GDGPacketCheckData checkdata { get; set; }

        /// <summary>消息包验证数据</summary>
        public ulong playerguid { get; set; }

        /// <summary>玩家guid</summary>
        public string newname { get; set; }

    }

    /// <summary>Check Player NewName Result</summary>
    public partial class DG_CHECK_PLAYERNEWNAME_RESULT : LiteNet.IMessage
    {
        public global::ProtobufPacket._GDGPacketCheckData checkdata { get; set; }

        /// <summary>消息包验证数据</summary>
        public int checkresult { get; set; }

        /// <summary>检查结果</summary>
        public ulong playerguid { get; set; }

        /// <summary>玩家guid</summary>
        public string newname { get; set; }

        /// <summary>玩家新名字</summary>
        public int newnamecount { get; set; }

    }

    public partial class GD_TRANSPORT_TO_DBAGENT : LiteNet.IMessage
    {
        public global::ProtobufPacket._GDGPacketCheckData checkdata { get; set; }

        /// <summary>消息包验证数据</summary>
        public int RoutineID { get; set; }

        /// <summary>需要发送的RoutineID</summary>
        public string MessageName { get; set; }

        /// <summary>消息名</summary>
        public byte[] MessageBuf { get; set; }

    }

    public partial class DG_TRANSPORT_TO_GAMESERVER : LiteNet.IMessage
    {
        public global::ProtobufPacket._GDGPacketCheckData checkdata { get; set; }

        /// <summary>消息包验证数据</summary>
        public int Send { get; set; }

        /// <summary>消息发送方式</summary>
        public int RoutineID { get; set; }

        /// <summary>需要发送的RoutineID</summary>
        public ulong PlayerGuid { get; set; }

        /// <summary>需要发送的玩家Guid</summary>
        public int SceneClassID { get; set; }

        /// <summary>需要发送的场景类ID</summary>
        public int SceneID_ClassID { get; set; }

        /// <summary>需要发送的场景ID ClassID</summary>
        public int SceneID_InstID { get; set; }

        /// <summary>需要发送的场景ID InstID</summary>
        public string MessageName { get; set; }

        /// <summary>消息名</summary>
        public byte[] MessageBuf { get; set; }

    }

    public partial class GH_TRANSPORT_TO_HTTPAGENT : LiteNet.IMessage
    {
        public int RoutineID { get; set; }

        /// <summary>需要发送的RoutineID</summary>
        public string MessageName { get; set; }

        /// <summary>消息名</summary>
        public byte[] MessageBuf { get; set; }

    }

    public partial class HG_TRANSPORT_TO_GAMESERVER : LiteNet.IMessage
    {
        public int Send { get; set; }

        /// <summary>消息发送方式</summary>
        public int RoutineID { get; set; }

        /// <summary>需要发送的RoutineID</summary>
        public ulong PlayerGuid { get; set; }

        /// <summary>需要发送的玩家Guid</summary>
        public int SceneClassID { get; set; }

        /// <summary>需要发送的场景类ID</summary>
        public int SceneID_ClassID { get; set; }

        /// <summary>需要发送的场景ID ClassID</summary>
        public int SceneID_InstID { get; set; }

        /// <summary>需要发送的场景ID InstID</summary>
        public string MessageName { get; set; }

        /// <summary>消息名</summary>
        public byte[] MessageBuf { get; set; }

    }

    /// <summary>
    /// <para> 同步GameConfig</para>
    /// <para> 注意: 客户端使用反射解析, 第一个下划线之前的名称用来做ini文件的分段名</para>
    /// </summary>
    public partial class GC_SYNC_GAMECONFIG : LiteNet.IMessage
    {
        /// <summary> 命运相关功能是否开启</summary>
        public bool Has_Fate_IsOpenFate { get; private set; }
        private bool __Fate_IsOpenFate;
        public bool Fate_IsOpenFate { get { return __Fate_IsOpenFate; } set { __Fate_IsOpenFate = value; Has_Fate_IsOpenFate = true; } }

        /// <summary> 故事相关功能是否开启</summary>
        public bool Has_Story_IsOpenStory { get; private set; }
        private bool __Story_IsOpenStory;
        public bool Story_IsOpenStory { get { return __Story_IsOpenStory; } set { __Story_IsOpenStory = value; Has_Story_IsOpenStory = true; } }

        /// <summary> 调查, 事件关卡属性计算参数</summary>
        public bool Has_Investigate_BehaviorCalc_A1 { get; private set; }
        private float __Investigate_BehaviorCalc_A1;
        public float Investigate_BehaviorCalc_A1 { get { return __Investigate_BehaviorCalc_A1; } set { __Investigate_BehaviorCalc_A1 = value; Has_Investigate_BehaviorCalc_A1 = true; } }

        public bool Has_Investigate_BehaviorCalc_A2 { get; private set; }
        private float __Investigate_BehaviorCalc_A2;
        public float Investigate_BehaviorCalc_A2 { get { return __Investigate_BehaviorCalc_A2; } set { __Investigate_BehaviorCalc_A2 = value; Has_Investigate_BehaviorCalc_A2 = true; } }

        public bool Has_Investigate_BehaviorCalc_A3 { get; private set; }
        private float __Investigate_BehaviorCalc_A3;
        public float Investigate_BehaviorCalc_A3 { get { return __Investigate_BehaviorCalc_A3; } set { __Investigate_BehaviorCalc_A3 = value; Has_Investigate_BehaviorCalc_A3 = true; } }

        public bool Has_Investigate_BehaviorCalc_B1 { get; private set; }
        private float __Investigate_BehaviorCalc_B1;
        public float Investigate_BehaviorCalc_B1 { get { return __Investigate_BehaviorCalc_B1; } set { __Investigate_BehaviorCalc_B1 = value; Has_Investigate_BehaviorCalc_B1 = true; } }

        public bool Has_Investigate_BehaviorCalc_B2 { get; private set; }
        private float __Investigate_BehaviorCalc_B2;
        public float Investigate_BehaviorCalc_B2 { get { return __Investigate_BehaviorCalc_B2; } set { __Investigate_BehaviorCalc_B2 = value; Has_Investigate_BehaviorCalc_B2 = true; } }

        public bool Has_Investigate_BehaviorCalc_B3 { get; private set; }
        private float __Investigate_BehaviorCalc_B3;
        public float Investigate_BehaviorCalc_B3 { get { return __Investigate_BehaviorCalc_B3; } set { __Investigate_BehaviorCalc_B3 = value; Has_Investigate_BehaviorCalc_B3 = true; } }

        public bool Has_Investigate_BehaviorCalc_C1 { get; private set; }
        private float __Investigate_BehaviorCalc_C1;
        public float Investigate_BehaviorCalc_C1 { get { return __Investigate_BehaviorCalc_C1; } set { __Investigate_BehaviorCalc_C1 = value; Has_Investigate_BehaviorCalc_C1 = true; } }

        public bool Has_Investigate_BehaviorCalc_C2 { get; private set; }
        private float __Investigate_BehaviorCalc_C2;
        public float Investigate_BehaviorCalc_C2 { get { return __Investigate_BehaviorCalc_C2; } set { __Investigate_BehaviorCalc_C2 = value; Has_Investigate_BehaviorCalc_C2 = true; } }

        public bool Has_Investigate_BehaviorCalc_D1 { get; private set; }
        private float __Investigate_BehaviorCalc_D1;
        public float Investigate_BehaviorCalc_D1 { get { return __Investigate_BehaviorCalc_D1; } set { __Investigate_BehaviorCalc_D1 = value; Has_Investigate_BehaviorCalc_D1 = true; } }

        public bool Has_Investigate_BehaviorCalc_D2 { get; private set; }
        private float __Investigate_BehaviorCalc_D2;
        public float Investigate_BehaviorCalc_D2 { get { return __Investigate_BehaviorCalc_D2; } set { __Investigate_BehaviorCalc_D2 = value; Has_Investigate_BehaviorCalc_D2 = true; } }

        public bool Has_Investigate_AllowReuseCardInInvestigate { get; private set; }
        private float __Investigate_AllowReuseCardInInvestigate;
        public float Investigate_AllowReuseCardInInvestigate { get { return __Investigate_AllowReuseCardInInvestigate; } set { __Investigate_AllowReuseCardInInvestigate = value; Has_Investigate_AllowReuseCardInInvestigate = true; } }

        /// <summary>网店订单-任务</summary>
        public bool Has_Mission_IsOpenMission { get; private set; }
        private bool __Mission_IsOpenMission;
        public bool Mission_IsOpenMission { get { return __Mission_IsOpenMission; } set { __Mission_IsOpenMission = value; Has_Mission_IsOpenMission = true; } }

        public bool Has_Mission_ReputationPerSegLv { get; private set; }
        private int __Mission_ReputationPerSegLv;
        public int Mission_ReputationPerSegLv { get { return __Mission_ReputationPerSegLv; } set { __Mission_ReputationPerSegLv = value; Has_Mission_ReputationPerSegLv = true; } }

        /// <summary>传闻</summary>
        public bool Has_Rumor_IsOpenRumor { get; private set; }
        private bool __Rumor_IsOpenRumor;
        public bool Rumor_IsOpenRumor { get { return __Rumor_IsOpenRumor; } set { __Rumor_IsOpenRumor = value; Has_Rumor_IsOpenRumor = true; } }

        public bool Has_Rumor_RumorReduceTime { get; private set; }
        private int __Rumor_RumorReduceTime;
        public int Rumor_RumorReduceTime { get { return __Rumor_RumorReduceTime; } set { __Rumor_RumorReduceTime = value; Has_Rumor_RumorReduceTime = true; } }

        public bool Has_Rumor_RumorReduceStamina { get; private set; }
        private int __Rumor_RumorReduceStamina;
        public int Rumor_RumorReduceStamina { get { return __Rumor_RumorReduceStamina; } set { __Rumor_RumorReduceStamina = value; Has_Rumor_RumorReduceStamina = true; } }

        public bool Has_Rumor_RumorHotValue { get; private set; }
        private int __Rumor_RumorHotValue;
        public int Rumor_RumorHotValue { get { return __Rumor_RumorHotValue; } set { __Rumor_RumorHotValue = value; Has_Rumor_RumorHotValue = true; } }

        public bool Has_Rumor_RumorHotterValue { get; private set; }
        private int __Rumor_RumorHotterValue;
        public int Rumor_RumorHotterValue { get { return __Rumor_RumorHotterValue; } set { __Rumor_RumorHotterValue = value; Has_Rumor_RumorHotterValue = true; } }

        public bool Has_Rumor_RumorHottestValue { get; private set; }
        private int __Rumor_RumorHottestValue;
        public int Rumor_RumorHottestValue { get { return __Rumor_RumorHottestValue; } set { __Rumor_RumorHottestValue = value; Has_Rumor_RumorHottestValue = true; } }

        public bool Has_Rumor_RumorBurstPreviewId { get; private set; }
        private int __Rumor_RumorBurstPreviewId;
        public int Rumor_RumorBurstPreviewId { get { return __Rumor_RumorBurstPreviewId; } set { __Rumor_RumorBurstPreviewId = value; Has_Rumor_RumorBurstPreviewId = true; } }

        public bool Has_Rumor_RumorBurstDropId { get; private set; }
        private int __Rumor_RumorBurstDropId;
        public int Rumor_RumorBurstDropId { get { return __Rumor_RumorBurstDropId; } set { __Rumor_RumorBurstDropId = value; Has_Rumor_RumorBurstDropId = true; } }

    }

    public partial class CO_VALIDATE : LiteNet.IMessage
    {
        public bool Has_WorldId { get; private set; }
        private int __WorldId;
        public int WorldId { get { return __WorldId; } set { __WorldId = value; Has_WorldId = true; } }

        /// <summary> 世界号</summary>
        public bool Has_GameVersion { get; private set; }
        private int __GameVersion;
        public int GameVersion { get { return __GameVersion; } set { __GameVersion = value; Has_GameVersion = true; } }

        /// <summary> 主版本号</summary>
        public bool Has_ProgramVersion { get; private set; }
        private int __ProgramVersion;
        public int ProgramVersion { get { return __ProgramVersion; } set { __ProgramVersion = value; Has_ProgramVersion = true; } }

        /// <summary> 程序版本号</summary>
        public bool Has_InternalVersion { get; private set; }
        private int __InternalVersion;
        public int InternalVersion { get { return __InternalVersion; } set { __InternalVersion = value; Has_InternalVersion = true; } }

        /// <summary> 内部版本号</summary>
        public bool Has_DBVersion { get; private set; }
        private int __DBVersion;
        public int DBVersion { get { return __DBVersion; } set { __DBVersion = value; Has_DBVersion = true; } }

        /// <summary> DB版本号</summary>
        public bool Has_AnsiTimeSencond { get; private set; }
        private long __AnsiTimeSencond;
        public long AnsiTimeSencond { get { return __AnsiTimeSencond; } set { __AnsiTimeSencond = value; Has_AnsiTimeSencond = true; } }

        /// <summary> 当前AnsiTime秒数</summary>
        public bool Has_WorldType { get; private set; }
        private int __WorldType;
        public int WorldType { get { return __WorldType; } set { __WorldType = value; Has_WorldType = true; } }

        /// <summary>类型</summary>
        public bool Has_ValidType { get; private set; }
        private int __ValidType;
        public int ValidType { get { return __ValidType; } set { __ValidType = value; Has_ValidType = true; } }

        /// <summary>消息包类型</summary>
        public bool Has_Load { get; private set; }
        private int __Load;
        public int Load { get { return __Load; } set { __Load = value; Has_Load = true; } }

    }

    public partial class OC_VALIDATE_RET : LiteNet.IMessage
    {
        public bool Has_ValidateRet { get; private set; }
        private bool __ValidateRet;
        public bool ValidateRet { get { return __ValidateRet; } set { __ValidateRet = value; Has_ValidateRet = true; } }

        /// <summary> 验证结果</summary>
        public bool Has_WorldId { get; private set; }
        private int __WorldId;
        public int WorldId { get { return __WorldId; } set { __WorldId = value; Has_WorldId = true; } }

    }

    public partial class CO_TRANSPORT_TO_ORIGINWORLD : LiteNet.IMessage
    {
        public bool Has_Send { get; private set; }
        private int __Send;
        public int Send { get { return __Send; } set { __Send = value; Has_Send = true; } }

        /// <summary> 消息发送方式</summary>
        public bool Has_RoutineID { get; private set; }
        private int __RoutineID;
        public int RoutineID { get { return __RoutineID; } set { __RoutineID = value; Has_RoutineID = true; } }

        /// <summary> 需要发送的RoutineID</summary>
        public bool Has_PlayerGuid { get; private set; }
        private ulong __PlayerGuid;
        public ulong PlayerGuid { get { return __PlayerGuid; } set { __PlayerGuid = value; Has_PlayerGuid = true; } }

        /// <summary> 需要发送的玩家Guid</summary>
        public bool Has_SceneClassID { get; private set; }
        private int __SceneClassID;
        public int SceneClassID { get { return __SceneClassID; } set { __SceneClassID = value; Has_SceneClassID = true; } }

        /// <summary> 需要发送的场景类ID</summary>
        public bool Has_SceneID_ClassID { get; private set; }
        private int __SceneID_ClassID;
        public int SceneID_ClassID { get { return __SceneID_ClassID; } set { __SceneID_ClassID = value; Has_SceneID_ClassID = true; } }

        /// <summary> 需要发送的场景ID ClassID</summary>
        public bool Has_SceneID_InstID { get; private set; }
        private int __SceneID_InstID;
        public int SceneID_InstID { get { return __SceneID_InstID; } set { __SceneID_InstID = value; Has_SceneID_InstID = true; } }

        /// <summary> 需要发送的场景ID InstID</summary>
        public string MessageName { get; set; }

        /// <summary> 消息名</summary>
        public byte[] MessageBuf { get; set; }

    }

    public partial class OC_TRANSPORT_TO_CROSS : LiteNet.IMessage
    {
        public bool Has_Trains { get; private set; }
        private int __Trains;
        public int Trains { get { return __Trains; } set { __Trains = value; Has_Trains = true; } }

        /// <summary> 消息传输方式</summary>
        public bool Has_Sender { get; private set; }
        private uint __Sender;
        public uint Sender { get { return __Sender; } set { __Sender = value; Has_Sender = true; } }

        /// <summary> 发送者世界号</summary>
        public bool Has_Receiver { get; private set; }
        private uint __Receiver;
        public uint Receiver { get { return __Receiver; } set { __Receiver = value; Has_Receiver = true; } }

        /// <summary> 接受者世界号</summary>
        public bool Has_Send { get; private set; }
        private int __Send;
        public int Send { get { return __Send; } set { __Send = value; Has_Send = true; } }

        /// <summary> 消息发送方式</summary>
        public bool Has_RoutineID { get; private set; }
        private int __RoutineID;
        public int RoutineID { get { return __RoutineID; } set { __RoutineID = value; Has_RoutineID = true; } }

        /// <summary> 需要发送的RoutineID</summary>
        public bool Has_PlayerGuid { get; private set; }
        private ulong __PlayerGuid;
        public ulong PlayerGuid { get { return __PlayerGuid; } set { __PlayerGuid = value; Has_PlayerGuid = true; } }

        /// <summary> 需要发送的玩家Guid</summary>
        public bool Has_SceneClassID { get; private set; }
        private int __SceneClassID;
        public int SceneClassID { get { return __SceneClassID; } set { __SceneClassID = value; Has_SceneClassID = true; } }

        /// <summary> 需要发送的场景类ID</summary>
        public bool Has_SceneID_ClassID { get; private set; }
        private int __SceneID_ClassID;
        public int SceneID_ClassID { get { return __SceneID_ClassID; } set { __SceneID_ClassID = value; Has_SceneID_ClassID = true; } }

        /// <summary> 需要发送的场景ID ClassID</summary>
        public bool Has_SceneID_InstID { get; private set; }
        private int __SceneID_InstID;
        public int SceneID_InstID { get { return __SceneID_InstID; } set { __SceneID_InstID = value; Has_SceneID_InstID = true; } }

        /// <summary> 需要发送的场景ID InstID</summary>
        public string MessageName { get; set; }

        /// <summary> 消息名</summary>
        public byte[] MessageBuf { get; set; }

    }

    public partial class GC_ITEM_USE_END : LiteNet.IMessage
    {
    }

    public partial class CG_ITEM_SELL : LiteNet.IMessage
    {
        public int packtype { get; set; }

        public ulong itemguid { get; set; }

        public int itemNum { get; set; }

    }

    /// <summary>
    /// <para>请求改名</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_REQ_CHANGENAME : LiteNet.IMessage
    {
        public string name { get; set; }

    }

    /// <summary>
    /// <para>改命返回结果</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class GC_RET_CHANGENAME : LiteNet.IMessage
    {
        public int result { get; set; }

        /// <summary>结果</summary>
        public bool Has_guid { get; private set; }
        private ulong __guid;
        public ulong guid { get { return __guid; } set { __guid = value; Has_guid = true; } }

        /// <summary>改名玩家的guid</summary>
        public string name { get; set; }

        /// <summary>返回的名字结果</summary>
        public bool Has_lastChangeNameTime { get; private set; }
        private long __lastChangeNameTime;
        public long lastChangeNameTime { get { return __lastChangeNameTime; } set { __lastChangeNameTime = value; Has_lastChangeNameTime = true; } }

    }

    /// <summary>通用提示一个弹框，点击确定后，客户端根据ret类型执行指定的客户端逻辑</summary>
    public partial class GC_ERR_TIPS : LiteNet.IMessage
    {
        public global::ProtobufPacket.RESULT ret { get; set; }

        public string extraMsg { get; set; }

    }

    public partial class GC_MAIL_GET_ITEM : LiteNet.IMessage
    {
    }

    public partial class GC_SYNC_CARD : LiteNet.IMessage
    {
        public global::ProtobufPacket._DBCards CardBag { get; set; }

        public bool Has_IsAll { get; private set; }
        private bool __IsAll;
        public bool IsAll { get { return __IsAll; } set { __IsAll = value; Has_IsAll = true; } }

    }

    /// <summary>命运线信息同步</summary>
    public partial class GC_SYNC_CHARACTER : LiteNet.IMessage
    {
        public GC_SYNC_CHARACTER()
        {
            Characters = new List<global::ProtobufPacket._Character>();
        }
        public List<global::ProtobufPacket._Character> Characters { get; set; }

    }

    public partial class GC_SYNC_FATELINE : LiteNet.IMessage
    {
        public global::ProtobufPacket._FateLine FateLine { get; set; }

    }

    /// <summary>
    /// <para>命运线激活</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_FATELINE_ACTIVE : LiteNet.IMessage
    {
        public bool Has_FateLineId { get; private set; }
        private int __FateLineId;
        public int FateLineId { get { return __FateLineId; } set { __FateLineId = value; Has_FateLineId = true; } }

    }

    public partial class GC_FATELINE_ACTIVE : LiteNet.IMessage
    {
        public bool Has_Ret { get; private set; }
        private int __Ret;
        public int Ret { get { return __Ret; } set { __Ret = value; Has_Ret = true; } }

        /// <summary>1-成功</summary>
        public bool Has_FateLineId { get; private set; }
        private int __FateLineId;
        public int FateLineId { get { return __FateLineId; } set { __FateLineId = value; Has_FateLineId = true; } }

    }

    /// <summary>命运线切换</summary>
    public partial class CG_FATELINE_SELECT : LiteNet.IMessage
    {
        public bool Has_CharacterId { get; private set; }
        private int __CharacterId;
        public int CharacterId { get { return __CharacterId; } set { __CharacterId = value; Has_CharacterId = true; } }

        /// <summary>调查员Id</summary>
        public bool Has_FateLineId { get; private set; }
        private int __FateLineId;
        public int FateLineId { get { return __FateLineId; } set { __FateLineId = value; Has_FateLineId = true; } }

    }

    /// <summary>命运线切换</summary>
    public partial class GC_FATELINE_SELECT : LiteNet.IMessage
    {
        public bool Has_CharacterId { get; private set; }
        private int __CharacterId;
        public int CharacterId { get { return __CharacterId; } set { __CharacterId = value; Has_CharacterId = true; } }

        /// <summary>调查员Id</summary>
        public bool Has_FateLineId { get; private set; }
        private int __FateLineId;
        public int FateLineId { get { return __FateLineId; } set { __FateLineId = value; Has_FateLineId = true; } }

    }

    /// <summary>人格完善奖励</summary>
    public partial class CG_FATELINE_AWARD : LiteNet.IMessage
    {
        public bool Has_FateLineId { get; private set; }
        private int __FateLineId;
        public int FateLineId { get { return __FateLineId; } set { __FateLineId = value; Has_FateLineId = true; } }

        /// <summary>命运线</summary>
        public bool Has_Level { get; private set; }
        private int __Level;
        public int Level { get { return __Level; } set { __Level = value; Has_Level = true; } }

    }

    /// <summary>人格完善奖励</summary>
    public partial class GC_FATELINE_AWARD : LiteNet.IMessage
    {
        public bool Has_FateLineId { get; private set; }
        private int __FateLineId;
        public int FateLineId { get { return __FateLineId; } set { __FateLineId = value; Has_FateLineId = true; } }

        /// <summary>命运线</summary>
        public bool Has_AwardFlag { get; private set; }
        private int __AwardFlag;
        public int AwardFlag { get { return __AwardFlag; } set { __AwardFlag = value; Has_AwardFlag = true; } }

    }

    /// <summary>性格升级</summary>
    public partial class CG_PERSONALITY_LEVELUP : LiteNet.IMessage
    {
        public bool Has_FateLineId { get; private set; }
        private int __FateLineId;
        public int FateLineId { get { return __FateLineId; } set { __FateLineId = value; Has_FateLineId = true; } }

        public bool Has_PersonalityId { get; private set; }
        private int __PersonalityId;
        public int PersonalityId { get { return __PersonalityId; } set { __PersonalityId = value; Has_PersonalityId = true; } }

    }

    /// <summary>性格升级</summary>
    public partial class GC_PERSONALITY_LEVELUP : LiteNet.IMessage
    {
        public bool Has_Ret { get; private set; }
        private int __Ret;
        public int Ret { get { return __Ret; } set { __Ret = value; Has_Ret = true; } }

        public bool Has_FateLineId { get; private set; }
        private int __FateLineId;
        public int FateLineId { get { return __FateLineId; } set { __FateLineId = value; Has_FateLineId = true; } }

        public bool Has_PersonalityId { get; private set; }
        private int __PersonalityId;
        public int PersonalityId { get { return __PersonalityId; } set { __PersonalityId = value; Has_PersonalityId = true; } }

        public bool Has_Level { get; private set; }
        private int __Level;
        public int Level { get { return __Level; } set { __Level = value; Has_Level = true; } }

    }

    /// <summary>性格加点</summary>
    public partial class CG_PERSONALITY_ADD : LiteNet.IMessage
    {
        public bool Has_FateLineId { get; private set; }
        private int __FateLineId;
        public int FateLineId { get { return __FateLineId; } set { __FateLineId = value; Has_FateLineId = true; } }

        public bool Has_PersonalityId { get; private set; }
        private int __PersonalityId;
        public int PersonalityId { get { return __PersonalityId; } set { __PersonalityId = value; Has_PersonalityId = true; } }

        /// <summary>性格Id</summary>
        public bool Has_ItemNum { get; private set; }
        private int __ItemNum;
        public int ItemNum { get { return __ItemNum; } set { __ItemNum = value; Has_ItemNum = true; } }

    }

    /// <summary>性格加点</summary>
    public partial class GC_PERSONALITY_ADD : LiteNet.IMessage
    {
        public bool Has_FateLineId { get; private set; }
        private int __FateLineId;
        public int FateLineId { get { return __FateLineId; } set { __FateLineId = value; Has_FateLineId = true; } }

        public bool Has_PersonalityId { get; private set; }
        private int __PersonalityId;
        public int PersonalityId { get { return __PersonalityId; } set { __PersonalityId = value; Has_PersonalityId = true; } }

        /// <summary>性格Id</summary>
        public bool Has_PersonalityValue { get; private set; }
        private int __PersonalityValue;
        public int PersonalityValue { get { return __PersonalityValue; } set { __PersonalityValue = value; Has_PersonalityValue = true; } }

    }

    /// <summary>
    /// <para>换时装</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_DRESSUP : LiteNet.IMessage
    {
        public bool Has_FateLineId { get; private set; }
        private int __FateLineId;
        public int FateLineId { get { return __FateLineId; } set { __FateLineId = value; Has_FateLineId = true; } }

        /// <summary>命运线Id</summary>
        public global::ProtobufPacket._DressInfo DressInfo { get; set; }

    }

    public partial class GC_DRESSUP : LiteNet.IMessage
    {
        public bool Has_FateLineId { get; private set; }
        private int __FateLineId;
        public int FateLineId { get { return __FateLineId; } set { __FateLineId = value; Has_FateLineId = true; } }

        /// <summary>命运线Id</summary>
        public global::ProtobufPacket._DressInfo DressInfo { get; set; }

    }

    /// <summary>解锁时装</summary>
    public partial class CG_SKIN_UNLOCK : LiteNet.IMessage
    {
        public bool Has_SkinId { get; private set; }
        private int __SkinId;
        public int SkinId { get { return __SkinId; } set { __SkinId = value; Has_SkinId = true; } }

        public bool Has_FateLineId { get; private set; }
        private int __FateLineId;
        public int FateLineId { get { return __FateLineId; } set { __FateLineId = value; Has_FateLineId = true; } }

    }

    public partial class GC_SKIN_UNLOCK : LiteNet.IMessage
    {
        public bool Has_SkinId { get; private set; }
        private int __SkinId;
        public int SkinId { get { return __SkinId; } set { __SkinId = value; Has_SkinId = true; } }

        public bool Has_FateLineId { get; private set; }
        private int __FateLineId;
        public int FateLineId { get { return __FateLineId; } set { __FateLineId = value; Has_FateLineId = true; } }

    }

    /// <summary>解锁挂饰/动作</summary>
    public partial class CG_DRESS_UNLOCK : LiteNet.IMessage
    {
        public bool Has_DressId { get; private set; }
        private int __DressId;
        public int DressId { get { return __DressId; } set { __DressId = value; Has_DressId = true; } }

        public bool Has_FateLineId { get; private set; }
        private int __FateLineId;
        public int FateLineId { get { return __FateLineId; } set { __FateLineId = value; Has_FateLineId = true; } }

    }

    /// <summary>解锁挂饰/动作</summary>
    public partial class GC_DRESS_UNLOCK : LiteNet.IMessage
    {
        public bool Has_DressId { get; private set; }
        private int __DressId;
        public int DressId { get { return __DressId; } set { __DressId = value; Has_DressId = true; } }

        public bool Has_FateLineId { get; private set; }
        private int __FateLineId;
        public int FateLineId { get { return __FateLineId; } set { __FateLineId = value; Has_FateLineId = true; } }

    }

    /// <summary>
    /// <para>答题（命运线内心对话）</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_QUESTION_ANSWER : LiteNet.IMessage
    {
        public bool Has_rpcid { get; private set; }
        private int __rpcid;
        public int rpcid { get { return __rpcid; } set { __rpcid = value; Has_rpcid = true; } }

        public bool Has_QuestionId { get; private set; }
        private int __QuestionId;
        public int QuestionId { get { return __QuestionId; } set { __QuestionId = value; Has_QuestionId = true; } }

        public bool Has_OptionId { get; private set; }
        private int __OptionId;
        public int OptionId { get { return __OptionId; } set { __OptionId = value; Has_OptionId = true; } }

        public bool Has_TypeId { get; private set; }
        private int __TypeId;
        public int TypeId { get { return __TypeId; } set { __TypeId = value; Has_TypeId = true; } }

        /// <summary>0 :命运 1：推理</summary>
        public bool Has_PId { get; private set; }
        private int __PId;
        public int PId { get { return __PId; } set { __PId = value; Has_PId = true; } }

    }

    /// <summary>@spec:lua</summary>
    [SLua.CustomLuaClass]
    public partial class GC_QUESTION_ANSWER : LiteNet.IMessage
    {
        public GC_QUESTION_ANSWER()
        {
            Monologues = new List<global::ProtobufPacket._Monologue>();
        }
        public bool Has_rpcid { get; private set; }
        private int __rpcid;
        public int rpcid { get { return __rpcid; } set { __rpcid = value; Has_rpcid = true; } }

        public bool Has_QuestionId { get; private set; }
        private int __QuestionId;
        public int QuestionId { get { return __QuestionId; } set { __QuestionId = value; Has_QuestionId = true; } }

        public bool Has_OptionId { get; private set; }
        private int __OptionId;
        public int OptionId { get { return __OptionId; } set { __OptionId = value; Has_OptionId = true; } }

        public List<global::ProtobufPacket._Monologue> Monologues { get; set; }

    }

    /// <summary>解锁独白</summary>
    public partial class CG_MONOLOGUE_UNLOCK : LiteNet.IMessage
    {
        public bool Has_FateLineId { get; private set; }
        private int __FateLineId;
        public int FateLineId { get { return __FateLineId; } set { __FateLineId = value; Has_FateLineId = true; } }

        public bool Has_MonologueId { get; private set; }
        private int __MonologueId;
        public int MonologueId { get { return __MonologueId; } set { __MonologueId = value; Has_MonologueId = true; } }

    }

    public partial class GC_MONOLOGUE_UNLOCK : LiteNet.IMessage
    {
        public bool Has_FateLineId { get; private set; }
        private int __FateLineId;
        public int FateLineId { get { return __FateLineId; } set { __FateLineId = value; Has_FateLineId = true; } }

        public global::ProtobufPacket._Monologue Monologue { get; set; }

    }

    /// <summary> 同步故事</summary>
    public partial class GC_SYNC_STORY : LiteNet.IMessage
    {
        public global::ProtobufPacket._Story Story { get; set; }

    }

    /// <summary> 开始关卡</summary>
    public partial class CG_STORY_LEVEL_START : LiteNet.IMessage
    {
        public CG_STORY_LEVEL_START()
        {
            CardIds = new List<int>();
        }
        public bool Has_rpcid { get; private set; }
        private int __rpcid;
        public int rpcid { get { return __rpcid; } set { __rpcid = value; Has_rpcid = true; } }

        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

        public List<int> CardIds { get; set; }

        public bool Has_SavePointId { get; private set; }
        private int __SavePointId;
        public int SavePointId { get { return __SavePointId; } set { __SavePointId = value; Has_SavePointId = true; } }

    }

    /// <summary> 开始关卡</summary>
    public partial class GC_STORY_LEVEL_START : LiteNet.IMessage
    {
        public bool Has_rpcid { get; private set; }
        private int __rpcid;
        public int rpcid { get { return __rpcid; } set { __rpcid = value; Has_rpcid = true; } }

        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

        public bool Has_RSeed { get; private set; }
        private int __RSeed;
        public int RSeed { get { return __RSeed; } set { __RSeed = value; Has_RSeed = true; } }

        public bool Has_Result { get; private set; }
        private global::ProtobufPacket.RESULT __Result;
        public global::ProtobufPacket.RESULT Result { get { return __Result; } set { __Result = value; Has_Result = true; } }

        public global::ProtobufPacket._SavePoint SavePointInfo { get; set; }

    }

    /// <summary>
    /// <para> 完成关卡</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_STORY_LEVEL_FINISH : LiteNet.IMessage
    {
        public CG_STORY_LEVEL_FINISH()
        {
            CustomRewardIds = new List<int>();
            switchRoleIds = new List<int>();
            AlbumIds = new List<int>();
            PerceptUsedSceneEventIds = new List<int>();
        }
        public bool Has_rpcid { get; private set; }
        private int __rpcid;
        public int rpcid { get { return __rpcid; } set { __rpcid = value; Has_rpcid = true; } }

        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

        public bool Has_LevelResult { get; private set; }
        private int __LevelResult;
        public int LevelResult { get { return __LevelResult; } set { __LevelResult = value; Has_LevelResult = true; } }

        /// <summary> _StoryEnum.LevelResult</summary>
        public bool Has_ConfidenceDelta { get; private set; }
        private int __ConfidenceDelta;
        public int ConfidenceDelta { get { return __ConfidenceDelta; } set { __ConfidenceDelta = value; Has_ConfidenceDelta = true; } }

        public List<int> CustomRewardIds { get; set; }

        /// <summary>废弃</summary>
        public bool Has_BehaviorHugeSuccCount { get; private set; }
        private int __BehaviorHugeSuccCount;
        public int BehaviorHugeSuccCount { get { return __BehaviorHugeSuccCount; } set { __BehaviorHugeSuccCount = value; Has_BehaviorHugeSuccCount = true; } }

        /// <summary>废弃</summary>
        public bool Has_isSpec { get; private set; }
        private bool __isSpec;
        public bool isSpec { get { return __isSpec; } set { __isSpec = value; Has_isSpec = true; } }

        /// <summary>是否为特殊失败</summary>
        public global::ProtobufPacket._STORY_INST StoryData { get; set; }

        /// <summary>同步调查数据</summary>
        public List<int> switchRoleIds { get; set; }

        /// <summary>收集的男主id //废弃</summary>
        public List<int> AlbumIds { get; set; }

        /// <summary>收集到的相册 //废弃</summary>
        public global::ProtobufPacket._LevelSavePoint SavePoints { get; set; }

        /// <summary>保存点</summary>
        public bool Has_PerceptUsedCount { get; private set; }
        private int __PerceptUsedCount;
        public int PerceptUsedCount { get { return __PerceptUsedCount; } set { __PerceptUsedCount = value; Has_PerceptUsedCount = true; } }

        /// <summary>本次使用的感知次数</summary>
        public List<int> PerceptUsedSceneEventIds { get; set; }

        /// <summary>本次使用的隐藏行为id</summary>
        public global::ProtobufPacket._StoryLevel LevelData { get; set; }

    }

    /// <summary> 完成关卡</summary>
    public partial class GC_STORY_LEVEL_FINISH : LiteNet.IMessage
    {
        public bool Has_rpcid { get; private set; }
        private int __rpcid;
        public int rpcid { get { return __rpcid; } set { __rpcid = value; Has_rpcid = true; } }

        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

        public bool Has_Result { get; private set; }
        private global::ProtobufPacket.RESULT __Result;
        public global::ProtobufPacket.RESULT Result { get { return __Result; } set { __Result = value; Has_Result = true; } }

        public bool Has_LevelResult { get; private set; }
        private int __LevelResult;
        public int LevelResult { get { return __LevelResult; } set { __LevelResult = value; Has_LevelResult = true; } }

    }

    /// <summary> 解锁隐藏的tag提示，废弃</summary>
    public partial class CG_UNLOCK_SCENEEVENT_HINT : LiteNet.IMessage
    {
        public CG_UNLOCK_SCENEEVENT_HINT()
        {
            TagIds = new List<int>();
        }
        public bool Has_LevelId { get; private set; }
        private int __LevelId;
        public int LevelId { get { return __LevelId; } set { __LevelId = value; Has_LevelId = true; } }

        public string SceneEventId { get; set; }

        /// <summary>废弃</summary>
        public List<int> TagIds { get; set; }

        public bool Has_EventId { get; private set; }
        private int __EventId;
        public int EventId { get { return __EventId; } set { __EventId = value; Has_EventId = true; } }

    }

    /// <summary> 关卡时间回溯</summary>
    public partial class CG_STORY_CHAPTER_REWIND : LiteNet.IMessage
    {
        public bool Has_rpcid { get; private set; }
        private int __rpcid;
        public int rpcid { get { return __rpcid; } set { __rpcid = value; Has_rpcid = true; } }

        public bool Has_ChapterId { get; private set; }
        private int __ChapterId;
        public int ChapterId { get { return __ChapterId; } set { __ChapterId = value; Has_ChapterId = true; } }

        public bool Has_RewindToLevelId { get; private set; }
        private int __RewindToLevelId;
        public int RewindToLevelId { get { return __RewindToLevelId; } set { __RewindToLevelId = value; Has_RewindToLevelId = true; } }

    }

    /// <summary> 关卡时间回溯</summary>
    public partial class GC_STORY_CHAPTER_REWIND : LiteNet.IMessage
    {
        public bool Has_rpcid { get; private set; }
        private int __rpcid;
        public int rpcid { get { return __rpcid; } set { __rpcid = value; Has_rpcid = true; } }

        public bool Has_Result { get; private set; }
        private global::ProtobufPacket.RESULT __Result;
        public global::ProtobufPacket.RESULT Result { get { return __Result; } set { __Result = value; Has_Result = true; } }

        public bool Has_LevelId { get; private set; }
        private int __LevelId;
        public int LevelId { get { return __LevelId; } set { __LevelId = value; Has_LevelId = true; } }

    }

    /// <summary> 章节结算</summary>
    public partial class CG_STORY_CHAPTER_RESOLVE_ENDING : LiteNet.IMessage
    {
        public CG_STORY_CHAPTER_RESOLVE_ENDING()
        {
            Objectives = new List<string>();
        }
        public bool Has_rpcid { get; private set; }
        private int __rpcid;
        public int rpcid { get { return __rpcid; } set { __rpcid = value; Has_rpcid = true; } }

        public bool Has_ChapterId { get; private set; }
        private int __ChapterId;
        public int ChapterId { get { return __ChapterId; } set { __ChapterId = value; Has_ChapterId = true; } }

        public List<string> Objectives { get; set; }

    }

    /// <summary> 章节结算</summary>
    public partial class GC_STORY_CHAPTER_RESOLVE_ENDING : LiteNet.IMessage
    {
        public bool Has_rpcid { get; private set; }
        private int __rpcid;
        public int rpcid { get { return __rpcid; } set { __rpcid = value; Has_rpcid = true; } }

        public bool Has_Result { get; private set; }
        private global::ProtobufPacket.RESULT __Result;
        public global::ProtobufPacket.RESULT Result { get { return __Result; } set { __Result = value; Has_Result = true; } }

        public bool Has_ChapterId { get; private set; }
        private int __ChapterId;
        public int ChapterId { get { return __ChapterId; } set { __ChapterId = value; Has_ChapterId = true; } }

    }

    /// <summary> 选择结局</summary>
    public partial class CG_STORY_CHAPTER_SELECT_ENDING : LiteNet.IMessage
    {
        public bool Has_rpcid { get; private set; }
        private int __rpcid;
        public int rpcid { get { return __rpcid; } set { __rpcid = value; Has_rpcid = true; } }

        public bool Has_ChapterId { get; private set; }
        private int __ChapterId;
        public int ChapterId { get { return __ChapterId; } set { __ChapterId = value; Has_ChapterId = true; } }

        public bool Has_Rank { get; private set; }
        private int __Rank;
        public int Rank { get { return __Rank; } set { __Rank = value; Has_Rank = true; } }

    }

    /// <summary> 选择结局</summary>
    public partial class GC_STORY_CHAPTER_SELECT_ENDING : LiteNet.IMessage
    {
        public bool Has_rpcid { get; private set; }
        private int __rpcid;
        public int rpcid { get { return __rpcid; } set { __rpcid = value; Has_rpcid = true; } }

        public bool Has_Result { get; private set; }
        private global::ProtobufPacket.RESULT __Result;
        public global::ProtobufPacket.RESULT Result { get { return __Result; } set { __Result = value; Has_Result = true; } }

        public bool Has_ChapterId { get; private set; }
        private int __ChapterId;
        public int ChapterId { get { return __ChapterId; } set { __ChapterId = value; Has_ChapterId = true; } }

        public bool Has_Rank { get; private set; }
        private int __Rank;
        public int Rank { get { return __Rank; } set { __Rank = value; Has_Rank = true; } }

    }

    /// <summary>卡升级</summary>
    public partial class CG_CARD_LEVELUP : LiteNet.IMessage
    {
        public CG_CARD_LEVELUP()
        {
            ItemId = new List<int>();
            ItemCount = new List<int>();
        }
        public bool Has_CardId { get; private set; }
        private int __CardId;
        public int CardId { get { return __CardId; } set { __CardId = value; Has_CardId = true; } }

        public List<int> ItemId { get; set; }

        public List<int> ItemCount { get; set; }

        public bool Has_IsDirect { get; private set; }
        private bool __IsDirect;
        public bool IsDirect { get { return __IsDirect; } set { __IsDirect = value; Has_IsDirect = true; } }

    }

    /// <summary>
    /// <para>卡合成</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_CARD_MAKE : LiteNet.IMessage
    {
        public bool Has_CardId { get; private set; }
        private int __CardId;
        public int CardId { get { return __CardId; } set { __CardId = value; Has_CardId = true; } }

        public bool Has_MakeCount { get; private set; }
        private int __MakeCount;
        public int MakeCount { get { return __MakeCount; } set { __MakeCount = value; Has_MakeCount = true; } }

    }

    /// <summary>卡合成</summary>
    public partial class GC_CARD_MAKE : LiteNet.IMessage
    {
        public bool Has_CardId { get; private set; }
        private int __CardId;
        public int CardId { get { return __CardId; } set { __CardId = value; Has_CardId = true; } }

        public bool Has_CardCount { get; private set; }
        private int __CardCount;
        public int CardCount { get { return __CardCount; } set { __CardCount = value; Has_CardCount = true; } }

        /// <summary>合成卡的数量</summary>
        public bool Has_CardTicketCount { get; private set; }
        private int __CardTicketCount;
        public int CardTicketCount { get { return __CardTicketCount; } set { __CardTicketCount = value; Has_CardTicketCount = true; } }

    }

    /// <summary>
    /// <para>卡转化</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_CARD_RESOLVE : LiteNet.IMessage
    {
        public CG_CARD_RESOLVE()
        {
            CardId = new List<int>();
            CardCount = new List<int>();
        }
        public List<int> CardId { get; set; }

        public List<int> CardCount { get; set; }

    }

    public partial class GC_CARD_RESOLVE : LiteNet.IMessage
    {
        public GC_CARD_RESOLVE()
        {
            ItemId = new List<int>();
            ItemCount = new List<int>();
        }
        public List<int> ItemId { get; set; }

        public List<int> ItemCount { get; set; }

    }

    /// <summary>主属性UI形象卡选择</summary>
    public partial class CG_VISUAL_CARD : LiteNet.IMessage
    {
        public bool Has_CardId { get; private set; }
        private int __CardId;
        public int CardId { get { return __CardId; } set { __CardId = value; Has_CardId = true; } }

    }

    public partial class GC_VISUAL_CARD : LiteNet.IMessage
    {
        public bool Has_CardId { get; private set; }
        private int __CardId;
        public int CardId { get { return __CardId; } set { __CardId = value; Has_CardId = true; } }

    }

    /// <summary>签名</summary>
    public partial class CG_SIGNATURE : LiteNet.IMessage
    {
        public string Signature { get; set; }

    }

    public partial class GC_SIGNATURE : LiteNet.IMessage
    {
        public string Signature { get; set; }

        public bool Has_AntiRet { get; private set; }
        private int __AntiRet;
        public int AntiRet { get { return __AntiRet; } set { __AntiRet = value; Has_AntiRet = true; } }

    }

    /// <summary>卡牌等级提升回包</summary>
    public partial class GC_CARD_LEVELUP : LiteNet.IMessage
    {
        public bool Has_CardId { get; private set; }
        private int __CardId;
        public int CardId { get { return __CardId; } set { __CardId = value; Has_CardId = true; } }

        public bool Has_Level { get; private set; }
        private int __Level;
        public int Level { get { return __Level; } set { __Level = value; Has_Level = true; } }

        public bool Has_Exp { get; private set; }
        private int __Exp;
        public int Exp { get { return __Exp; } set { __Exp = value; Has_Exp = true; } }

        public bool Has_LastLevelUpTime { get; private set; }
        private int __LastLevelUpTime;
        public int LastLevelUpTime { get { return __LastLevelUpTime; } set { __LastLevelUpTime = value; Has_LastLevelUpTime = true; } }

        public bool Has_LevelUpCount { get; private set; }
        private int __LevelUpCount;
        public int LevelUpCount { get { return __LevelUpCount; } set { __LevelUpCount = value; Has_LevelUpCount = true; } }

        public bool Has_IsDirect { get; private set; }
        private bool __IsDirect;
        public bool IsDirect { get { return __IsDirect; } set { __IsDirect = value; Has_IsDirect = true; } }

    }

    /// <summary>
    /// <para>卡牌档案解锁</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_CARD_FILE_UNLOCK : LiteNet.IMessage
    {
        public bool Has_CardId { get; private set; }
        private int __CardId;
        public int CardId { get { return __CardId; } set { __CardId = value; Has_CardId = true; } }

        public bool Has_FileLevel { get; private set; }
        private int __FileLevel;
        public int FileLevel { get { return __FileLevel; } set { __FileLevel = value; Has_FileLevel = true; } }

    }

    /// <summary>
    /// <para>卡牌档案分析</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_CARD_FILE_AWARD : LiteNet.IMessage
    {
        public bool Has_CardId { get; private set; }
        private int __CardId;
        public int CardId { get { return __CardId; } set { __CardId = value; Has_CardId = true; } }

        public bool Has_FileLevel { get; private set; }
        private int __FileLevel;
        public int FileLevel { get { return __FileLevel; } set { __FileLevel = value; Has_FileLevel = true; } }

    }

    /// <summary>卡牌档案分析</summary>
    public partial class GC_CARD_FILE_AWARD : LiteNet.IMessage
    {
        public bool Has_CardId { get; private set; }
        private int __CardId;
        public int CardId { get { return __CardId; } set { __CardId = value; Has_CardId = true; } }

        public bool Has_FileLevel { get; private set; }
        private int __FileLevel;
        public int FileLevel { get { return __FileLevel; } set { __FileLevel = value; Has_FileLevel = true; } }

    }

    /// <summary>
    /// <para>卡牌强化</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_CARD_ENHANCE : LiteNet.IMessage
    {
        public bool Has_CardId { get; private set; }
        private int __CardId;
        public int CardId { get { return __CardId; } set { __CardId = value; Has_CardId = true; } }

    }

    public partial class CG_BUY_GOLD : LiteNet.IMessage
    {
        public bool Has_BuyTimes { get; private set; }
        private int __BuyTimes;
        public int BuyTimes { get { return __BuyTimes; } set { __BuyTimes = value; Has_BuyTimes = true; } }

    }

    public partial class CG_BUY_STAMINA : LiteNet.IMessage
    {
        public bool Has_BuyTimes { get; private set; }
        private int __BuyTimes;
        public int BuyTimes { get { return __BuyTimes; } set { __BuyTimes = value; Has_BuyTimes = true; } }

    }

    public partial class GC_SYNC_QUESTION_ANSWER : LiteNet.IMessage
    {
        public GC_SYNC_QUESTION_ANSWER()
        {
            QuestionIds = new List<int>();
        }
        public List<int> QuestionIds { get; set; }

    }

    public partial class GC_SYNC_MISSION : LiteNet.IMessage
    {
        public GC_SYNC_MISSION()
        {
            History = new List<global::ProtobufPacket._DBMission>();
            Daily = new List<global::ProtobufPacket._DBMission>();
        }
        public bool Has_Reputation { get; private set; }
        private int __Reputation;
        public int Reputation { get { return __Reputation; } set { __Reputation = value; Has_Reputation = true; } }

        /// <summary>知名度</summary>
        public global::ProtobufPacket._DBMission Main { get; set; }

        /// <summary>当前主任务</summary>
        public List<global::ProtobufPacket._DBMission> History { get; set; }

        /// <summary>完成过的任务</summary>
        public List<global::ProtobufPacket._DBMission> Daily { get; set; }

    }

    /// <summary>
    /// <para>接任务</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_MISSION_ACCEPT : LiteNet.IMessage
    {
        public bool Has_MisId { get; private set; }
        private int __MisId;
        public int MisId { get { return __MisId; } set { __MisId = value; Has_MisId = true; } }

    }

    public partial class GC_MISSION_ACCEPT : LiteNet.IMessage
    {
        public global::ProtobufPacket._DBMission Mission { get; set; }

    }

    /// <summary>
    /// <para>交任务</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_MISSION_COMMIT : LiteNet.IMessage
    {
        public bool Has_MisId { get; private set; }
        private int __MisId;
        public int MisId { get { return __MisId; } set { __MisId = value; Has_MisId = true; } }

    }

    public partial class GC_MISSION_COMMIT : LiteNet.IMessage
    {
        public global::ProtobufPacket._DBMission Mission { get; set; }

    }

    /// <summary>
    /// <para>做任务</para>
    /// <para>信件任务-回信</para>
    /// <para>物品任务-交付物品</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_MISSION_DO : LiteNet.IMessage
    {
        public bool Has_MisId { get; private set; }
        private int __MisId;
        public int MisId { get { return __MisId; } set { __MisId = value; Has_MisId = true; } }

        public bool Has_Param { get; private set; }
        private int __Param;
        public int Param { get { return __Param; } set { __Param = value; Has_Param = true; } }

    }

    public partial class GC_MISSION_DO : LiteNet.IMessage
    {
        public global::ProtobufPacket._DBMission Mission { get; set; }

    }

    /// <summary>联系人备注</summary>
    public partial class CG_CONTACTS_REMARK : LiteNet.IMessage
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

        public string Remark { get; set; }

    }

    public partial class GC_CONTACTS_REMARK : LiteNet.IMessage
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

        public string Remark { get; set; }

        public bool Has_AntiRet { get; private set; }
        private int __AntiRet;
        public int AntiRet { get { return __AntiRet; } set { __AntiRet = value; Has_AntiRet = true; } }

    }

    public partial class GC_UPDATE_CHARACTER : LiteNet.IMessage
    {
        public global::ProtobufPacket._Character Character { get; set; }

        public bool Has_opType { get; private set; }
        private int __opType;
        public int opType { get { return __opType; } set { __opType = value; Has_opType = true; } }

    }

    /// <summary>传闻</summary>
    public partial class GC_SYNC_RUMOR : LiteNet.IMessage
    {
        public GC_SYNC_RUMOR()
        {
            Rumors = new List<global::ProtobufPacket._DBRumor>();
        }
        public List<global::ProtobufPacket._DBRumor> Rumors { get; set; }

        public bool Has_BurstNumToday { get; private set; }
        private int __BurstNumToday;
        public int BurstNumToday { get { return __BurstNumToday; } set { __BurstNumToday = value; Has_BurstNumToday = true; } }

        /// <summary>当日突发传闻数</summary>
        public bool Has_BurstNumReduceToday { get; private set; }
        private int __BurstNumReduceToday;
        public int BurstNumReduceToday { get { return __BurstNumReduceToday; } set { __BurstNumReduceToday = value; Has_BurstNumReduceToday = true; } }

        /// <summary>当日已解决突发传闻数</summary>
        public bool Has_BurstNumAward { get; private set; }
        private int __BurstNumAward;
        public int BurstNumAward { get { return __BurstNumAward; } set { __BurstNumAward = value; Has_BurstNumAward = true; } }

        /// <summary>待领取奖励（解决突发传闻额外奖励）</summary>
        public bool Has_FinishedReduceNum { get; private set; }
        private int __FinishedReduceNum;
        public int FinishedReduceNum { get { return __FinishedReduceNum; } set { __FinishedReduceNum = value; Has_FinishedReduceNum = true; } }

        /// <summary>已减少舆论次数</summary>
        public bool Has_StopReduceFlag { get; private set; }
        private bool __StopReduceFlag;
        public bool StopReduceFlag { get { return __StopReduceFlag; } set { __StopReduceFlag = value; Has_StopReduceFlag = true; } }

        /// <summary>已停止连续减少舆论标记</summary>
        public bool Has_IsStopNoEnergy { get; private set; }
        private bool __IsStopNoEnergy;
        public bool IsStopNoEnergy { get { return __IsStopNoEnergy; } set { __IsStopNoEnergy = value; Has_IsStopNoEnergy = true; } }

    }

    /// <summary>
    /// <para>传闻挂机 减少舆论（控评）</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_RUMOR_REDUCE : LiteNet.IMessage
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

        public bool Has_MultiNum { get; private set; }
        private int __MultiNum;
        public int MultiNum { get { return __MultiNum; } set { __MultiNum = value; Has_MultiNum = true; } }

    }

    public partial class GC_RUMOR_REDUCE : LiteNet.IMessage
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

        public bool Has_OverTime { get; private set; }
        private long __OverTime;
        public long OverTime { get { return __OverTime; } set { __OverTime = value; Has_OverTime = true; } }

    }

    /// <summary>
    /// <para>领取挂机奖励</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_RUMOR_REDUCE_AWARD : LiteNet.IMessage
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

    }

    /// <summary>
    /// <para>领取解决突发传闻奖励</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_RUMOR_BURST_AWARD : LiteNet.IMessage
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

    }

    /// <summary>
    /// <para>传闻重置关卡</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_RUMOR_RESET : LiteNet.IMessage
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

    }

    public partial class GC_RUMOR_RESET : LiteNet.IMessage
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

    }

    public partial class GC_SYNC_VCHAT : LiteNet.IMessage
    {
        public global::ProtobufPacket._DBVChats VChats { get; set; }

    }

    public partial class GC_UPDATE_VCHAT : LiteNet.IMessage
    {
        public global::ProtobufPacket._DBVChat VChat { get; set; }

    }

    /// <summary>@spec:lua</summary>
    [SLua.CustomLuaClass]
    public partial class CG_VCHAT_OPTION : LiteNet.IMessage
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

        public bool Has_Option { get; private set; }
        private int __Option;
        public int Option { get { return __Option; } set { __Option = value; Has_Option = true; } }

    }

    /// <summary>
    /// <para>充值-人民币购买钻石</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_RECHARGE_DIAMOND : LiteNet.IMessage
    {
        public int shopId { get; set; }

    }

    /// <summary>充值结果-人民币购买钻石</summary>
    public partial class GC_RECHARGE_DIAMOND : LiteNet.IMessage
    {
        public int shopId { get; set; }

        /// <summary>钻石商店ID</summary>
        public bool Has_Result { get; private set; }
        private global::ProtobufPacket.RESULT __Result;
        public global::ProtobufPacket.RESULT Result { get { return __Result; } set { __Result = value; Has_Result = true; } }

        /// <summary>充值结果</summary>
        public bool Has_regular { get; private set; }
        private long __regular;
        public long regular { get { return __regular; } set { __regular = value; Has_regular = true; } }

        /// <summary>常规增加数量</summary>
        public bool Has_firstPay { get; private set; }
        private long __firstPay;
        public long firstPay { get { return __firstPay; } set { __firstPay = value; Has_firstPay = true; } }

        /// <summary>首充增加数量</summary>
        public bool Has_extra { get; private set; }
        private long __extra;
        public long extra { get { return __extra; } set { __extra = value; Has_extra = true; } }

        /// <summary>额外奖励数量</summary>
        public bool Has_monthCardSurplusDay { get; private set; }
        private int __monthCardSurplusDay;
        public int monthCardSurplusDay { get { return __monthCardSurplusDay; } set { __monthCardSurplusDay = value; Has_monthCardSurplusDay = true; } }

        /// <summary>月卡剩余天数</summary>
        public bool Has_overrun { get; private set; }
        private long __overrun;
        public long overrun { get { return __overrun; } set { __overrun = value; Has_overrun = true; } }

        /// <summary>超过购买限度补偿的数量</summary>
        public bool Has_buyNum { get; private set; }
        private int __buyNum;
        public int buyNum { get { return __buyNum; } set { __buyNum = value; Has_buyNum = true; } }

    }

    /// <summary> 同步GameConfig</summary>
    public partial class GC_AUTO_SYNC_GAMECONFIG : LiteNet.IMessage
    {
        public string jsonstr { get; set; }

    }

    /// <summary>@spec:lua</summary>
    [SLua.CustomLuaClass]
    public partial class CG_VCHAT_LASTMSG : LiteNet.IMessage
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

        public bool Has_MsgId { get; private set; }
        private int __MsgId;
        public int MsgId { get { return __MsgId; } set { __MsgId = value; Has_MsgId = true; } }

        /// <summary>更新显示的最后一条msg</summary>
        public bool Has_IsFinish { get; private set; }
        private bool __IsFinish;
        public bool IsFinish { get { return __IsFinish; } set { __IsFinish = value; Has_IsFinish = true; } }

    }

    /// <summary>@spec:lua</summary>
    [SLua.CustomLuaClass]
    public partial class CG_VCHAT_VOICE : LiteNet.IMessage
    {
        public bool Has_VoiceId { get; private set; }
        private int __VoiceId;
        public int VoiceId { get { return __VoiceId; } set { __VoiceId = value; Has_VoiceId = true; } }

    }

    /// <summary>
    /// <para>朋友圈-发送朋友圈</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_CIRCLE_CREATE : LiteNet.IMessage
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

        public bool Has_AtTargetId { get; private set; }
        private int __AtTargetId;
        public int AtTargetId { get { return __AtTargetId; } set { __AtTargetId = value; Has_AtTargetId = true; } }

    }

    public partial class GC_CIRCLE_CREATE : LiteNet.IMessage
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

        public bool Has_PushTime { get; private set; }
        private long __PushTime;
        public long PushTime { get { return __PushTime; } set { __PushTime = value; Has_PushTime = true; } }

        public bool Has_AtTargetId { get; private set; }
        private int __AtTargetId;
        public int AtTargetId { get { return __AtTargetId; } set { __AtTargetId = value; Has_AtTargetId = true; } }

    }

    /// <summary>
    /// <para>朋友圈-评论朋友圈</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_CIRCLE_REPLY : LiteNet.IMessage
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

        public bool Has_ReplyId { get; private set; }
        private int __ReplyId;
        public int ReplyId { get { return __ReplyId; } set { __ReplyId = value; Has_ReplyId = true; } }

    }

    public partial class GC_CIRCLE_REPLY : LiteNet.IMessage
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

        public bool Has_ReplyId { get; private set; }
        private int __ReplyId;
        public int ReplyId { get { return __ReplyId; } set { __ReplyId = value; Has_ReplyId = true; } }

    }

    public partial class GC_SYNC_CIRCLE : LiteNet.IMessage
    {
        public GC_SYNC_CIRCLE()
        {
            Circles = new List<global::ProtobufPacket._DBCircle>();
        }
        public List<global::ProtobufPacket._DBCircle> Circles { get; set; }

    }

    public partial class GC_UPDATE_CIRCLE : LiteNet.IMessage
    {
        public GC_UPDATE_CIRCLE()
        {
            Circles = new List<global::ProtobufPacket._DBCircle>();
        }
        public List<global::ProtobufPacket._DBCircle> Circles { get; set; }

    }

    public partial class GC_SYNC_FATE_AUTOACTIVE : LiteNet.IMessage
    {
        public GC_SYNC_FATE_AUTOACTIVE()
        {
            FateIds = new List<int>();
        }
        public List<int> FateIds { get; set; }

    }

    /// <summary>好友列表--</summary>
    public partial class GC_SYNC_FRIEND : LiteNet.IMessage
    {
        public GC_SYNC_FRIEND()
        {
            Friend = new List<global::ProtobufPacket._DBFriend>();
        }
        public List<global::ProtobufPacket._DBFriend> Friend { get; set; }

        public bool Has_GetNum { get; private set; }
        private int __GetNum;
        public int GetNum { get { return __GetNum; } set { __GetNum = value; Has_GetNum = true; } }

        public bool Has_GiveNum { get; private set; }
        private int __GiveNum;
        public int GiveNum { get { return __GiveNum; } set { __GiveNum = value; Has_GiveNum = true; } }

    }

    /// <summary>好友申请列表</summary>
    public partial class GC_APPLY_FRIEND : LiteNet.IMessage
    {
        public GC_APPLY_FRIEND()
        {
            Friend = new List<global::ProtobufPacket._DBFriend>();
        }
        public List<global::ProtobufPacket._DBFriend> Friend { get; set; }

    }

    /// <summary>
    /// <para>接受</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_ACCEPT_FRIEND : LiteNet.IMessage
    {
        public bool Has_FriendId { get; private set; }
        private long __FriendId;
        public long FriendId { get { return __FriendId; } set { __FriendId = value; Has_FriendId = true; } }

    }

    /// <summary>
    /// <para>删除</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_DEL_FRIEND : LiteNet.IMessage
    {
        public bool Has_FriendId { get; private set; }
        private long __FriendId;
        public long FriendId { get { return __FriendId; } set { __FriendId = value; Has_FriendId = true; } }

    }

    /// <summary>
    /// <para>拒绝-忽略</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_REFUSE_FRIEND : LiteNet.IMessage
    {
        public bool Has_FriendId { get; private set; }
        private long __FriendId;
        public long FriendId { get { return __FriendId; } set { __FriendId = value; Has_FriendId = true; } }

    }

    /// <summary>
    /// <para>推荐刷新</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_RECMMEND_UPDATA_FRIEND : LiteNet.IMessage
    {
        public bool Has_fid { get; private set; }
        private int __fid;
        public int fid { get { return __fid; } set { __fid = value; Has_fid = true; } }

    }

    /// <summary>推荐</summary>
    public partial class GC_RECMMEND_FRIEND : LiteNet.IMessage
    {
        public GC_RECMMEND_FRIEND()
        {
            Friend = new List<global::ProtobufPacket._DBFriend>();
        }
        public List<global::ProtobufPacket._DBFriend> Friend { get; set; }

    }

    /// <summary>
    /// <para>搜索刷新</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_SEARCH_FRIEND : LiteNet.IMessage
    {
        public bool Has_IsName { get; private set; }
        private int __IsName;
        public int IsName { get { return __IsName; } set { __IsName = value; Has_IsName = true; } }

        public string name { get; set; }

        public bool Has_Guid { get; private set; }
        private ulong __Guid;
        public ulong Guid { get { return __Guid; } set { __Guid = value; Has_Guid = true; } }

    }

    /// <summary>搜索</summary>
    public partial class GC_SEARCH_FRIEND : LiteNet.IMessage
    {
        public GC_SEARCH_FRIEND()
        {
            Friend = new List<global::ProtobufPacket._DBFriend>();
        }
        public List<global::ProtobufPacket._DBFriend> Friend { get; set; }

    }

    /// <summary>
    /// <para>详情</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_PARTICULARS_FRIEND : LiteNet.IMessage
    {
        public bool Has_FriendId { get; private set; }
        private long __FriendId;
        public long FriendId { get { return __FriendId; } set { __FriendId = value; Has_FriendId = true; } }

    }

    /// <summary>详情信息</summary>
    public partial class GC_PARTICULARS_FRIEND : LiteNet.IMessage
    {
        public bool Has_level { get; private set; }
        private int __level;
        public int level { get { return __level; } set { __level = value; Has_level = true; } }

        public string name { get; set; }

        public string signature { get; set; }

        public bool Has_Characters { get; private set; }
        private int __Characters;
        public int Characters { get { return __Characters; } set { __Characters = value; Has_Characters = true; } }

        public bool Has_cards { get; private set; }
        private int __cards;
        public int cards { get { return __cards; } set { __cards = value; Has_cards = true; } }

        public bool Has_createTime { get; private set; }
        private long __createTime;
        public long createTime { get { return __createTime; } set { __createTime = value; Has_createTime = true; } }

        public bool Has_cardId { get; private set; }
        private int __cardId;
        public int cardId { get { return __cardId; } set { __cardId = value; Has_cardId = true; } }

        public bool Has_events { get; private set; }
        private int __events;
        public int events { get { return __events; } set { __events = value; Has_events = true; } }

        public bool Has_chaptersId { get; private set; }
        private int __chaptersId;
        public int chaptersId { get { return __chaptersId; } set { __chaptersId = value; Has_chaptersId = true; } }

        public bool Has_isFace { get; private set; }
        private bool __isFace;
        public bool isFace { get { return __isFace; } set { __isFace = value; Has_isFace = true; } }

        public bool Has_cardstar { get; private set; }
        private int __cardstar;
        public int cardstar { get { return __cardstar; } set { __cardstar = value; Has_cardstar = true; } }

        public bool Has_darkevents { get; private set; }
        private int __darkevents;
        public int darkevents { get { return __darkevents; } set { __darkevents = value; Has_darkevents = true; } }

        public bool Has_darkchaptersId { get; private set; }
        private int __darkchaptersId;
        public int darkchaptersId { get { return __darkchaptersId; } set { __darkchaptersId = value; Has_darkchaptersId = true; } }

        public bool Has_titleId { get; private set; }
        private int __titleId;
        public int titleId { get { return __titleId; } set { __titleId = value; Has_titleId = true; } }

        public bool Has_frameId { get; private set; }
        private int __frameId;
        public int frameId { get { return __frameId; } set { __frameId = value; Has_frameId = true; } }

        public string guid { get; set; }

    }

    /// <summary>
    /// <para>搜索-申请</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_SEARCH_ADD_FRIEND : LiteNet.IMessage
    {
        public bool Has_FriendId { get; private set; }
        private long __FriendId;
        public long FriendId { get { return __FriendId; } set { __FriendId = value; Has_FriendId = true; } }

        public string FriendName { get; set; }

        public bool Has_FriendLevel { get; private set; }
        private int __FriendLevel;
        public int FriendLevel { get { return __FriendLevel; } set { __FriendLevel = value; Has_FriendLevel = true; } }

    }

    /// <summary>删除</summary>
    public partial class GC_DEL_FRIEND : LiteNet.IMessage
    {
        public bool Has_FriendId { get; private set; }
        private long __FriendId;
        public long FriendId { get { return __FriendId; } set { __FriendId = value; Has_FriendId = true; } }

    }

    /// <summary>
    /// <para>抽卡</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_DRAW_CARD : LiteNet.IMessage
    {
        public enum DRAWTYPE
        {
            NOMAL = 0,
            /// <summary>普通抽卡</summary>
            ADVANCE = 1,
            ADVANCEUP = 2,
            ACTIVITY = 3,
            OPTIONALCARD = 4,
        }

        public bool Has_DrawType { get; private set; }
        private int __DrawType;
        public int DrawType { get { return __DrawType; } set { __DrawType = value; Has_DrawType = true; } }

        public bool Has_IsMulti { get; private set; }
        private bool __IsMulti;
        public bool IsMulti { get { return __IsMulti; } set { __IsMulti = value; Has_IsMulti = true; } }

    }

    public partial class GC_DRAW_CARD : LiteNet.IMessage
    {
        public GC_DRAW_CARD()
        {
            CardIds = new List<int>();
            IsCardRepeated = new List<bool>();
            DrawCardCounts = new List<global::ProtobufPacket._DrawCard>();
        }
        public bool Has_DrawType { get; private set; }
        private int __DrawType;
        public int DrawType { get { return __DrawType; } set { __DrawType = value; Has_DrawType = true; } }

        public List<int> CardIds { get; set; }

        /// <summary>抽到的卡</summary>
        public List<bool> IsCardRepeated { get; set; }

        /// <summary>是否重复卡</summary>
        public global::ProtobufPacket._DROP_LIST DropInfo { get; set; }

        /// <summary>额外奖励</summary>
        public global::ProtobufPacket._DBDrawCard DrawInfo { get; set; }

        public List<global::ProtobufPacket._DrawCard> DrawCardCounts { get; set; }

    }

    /// <summary>
    /// <para>领取抽卡累计N次的奖励</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_DRAW_CARD_AWARD : LiteNet.IMessage
    {
    }

    public partial class GC_SYNC_DRAW_CARD : LiteNet.IMessage
    {
        public global::ProtobufPacket._DBDrawCard DrawInfo { get; set; }

    }

    /// <summary>商店-限购</summary>
    public partial class GC_SYNC_SHOP : LiteNet.IMessage
    {
        public global::ProtobufPacket._DBCommonShop Info { get; set; }

    }

    /// <summary>
    /// <para>商店-购买</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_SHOP_BUY : LiteNet.IMessage
    {
        public bool Has_GoodsId { get; private set; }
        private int __GoodsId;
        public int GoodsId { get { return __GoodsId; } set { __GoodsId = value; Has_GoodsId = true; } }

        public bool Has_BuyNum { get; private set; }
        private int __BuyNum;
        public int BuyNum { get { return __BuyNum; } set { __BuyNum = value; Has_BuyNum = true; } }

    }

    /// <summary>@spec:lua</summary>
    [SLua.CustomLuaClass]
    public partial class GC_SHOP_BUY : LiteNet.IMessage
    {
        public bool Has_GoodsId { get; private set; }
        private int __GoodsId;
        public int GoodsId { get { return __GoodsId; } set { __GoodsId = value; Has_GoodsId = true; } }

        public bool Has_BuyTimes { get; private set; }
        private int __BuyTimes;
        public int BuyTimes { get { return __BuyTimes; } set { __BuyTimes = value; Has_BuyTimes = true; } }

    }

    public partial class CG_LOG_REPORT : LiteNet.IMessage
    {
        public bool Has_LogType { get; private set; }
        private int __LogType;
        public int LogType { get { return __LogType; } set { __LogType = value; Has_LogType = true; } }

        public string Msg { get; set; }

        public string StackTrace { get; set; }

    }

    /// <summary>
    /// <para>抽卡-普通抽卡切换卡池</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_DRAW_CARD_SWITCH : LiteNet.IMessage
    {
        public bool Has_SwitchType { get; private set; }
        private int __SwitchType;
        public int SwitchType { get { return __SwitchType; } set { __SwitchType = value; Has_SwitchType = true; } }

    }

    public partial class GC_DRAW_CARD_SWITCH : LiteNet.IMessage
    {
        public bool Has_SwitchType { get; private set; }
        private int __SwitchType;
        public int SwitchType { get { return __SwitchType; } set { __SwitchType = value; Has_SwitchType = true; } }

    }

    /// <summary>
    /// <para>好友列表--</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_SYNC_FRIEND : LiteNet.IMessage
    {
    }

    /// <summary>
    /// <para>相册-收集信息</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class GC_SYNC_ALBUM : LiteNet.IMessage
    {
        public GC_SYNC_ALBUM()
        {
            Albums = new List<global::ProtobufPacket._DBAlbumCell>();
        }
        public List<global::ProtobufPacket._DBAlbumCell> Albums { get; set; }

        public global::ProtobufPacket._DBAlbum AlbumInfo { get; set; }

        public bool Has_IsAll { get; private set; }
        private bool __IsAll;
        public bool IsAll { get { return __IsAll; } set { __IsAll = value; Has_IsAll = true; } }

    }

    /// <summary>
    /// <para>相册-领取奖励</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_ALBUM_AWARD : LiteNet.IMessage
    {
        public bool Has_AlbumId { get; private set; }
        private int __AlbumId;
        public int AlbumId { get { return __AlbumId; } set { __AlbumId = value; Has_AlbumId = true; } }

    }

    /// <summary>相册-领取奖励</summary>
    public partial class GC_ALBUM_AWARD : LiteNet.IMessage
    {
        public bool Has_AlbumId { get; private set; }
        private int __AlbumId;
        public int AlbumId { get { return __AlbumId; } set { __AlbumId = value; Has_AlbumId = true; } }

    }

    /// <summary>同步缓存的历史滚屏消息</summary>
    public partial class GC_SYNC_ROLLING_NOTICE : LiteNet.IMessage
    {
        public GC_SYNC_ROLLING_NOTICE()
        {
            Notices = new List<global::ProtobufPacket._DBNotice>();
        }
        public List<global::ProtobufPacket._DBNotice> Notices { get; set; }

    }

    /// <summary>
    /// <para>卡牌升星</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_CARD_STAR_LEVELUP : LiteNet.IMessage
    {
        public bool Has_CardId { get; private set; }
        private int __CardId;
        public int CardId { get { return __CardId; } set { __CardId = value; Has_CardId = true; } }

    }

    /// <summary>卡牌升星</summary>
    public partial class GC_CARD_STAR_LEVELUP : LiteNet.IMessage
    {
        public bool Has_CardId { get; private set; }
        private int __CardId;
        public int CardId { get { return __CardId; } set { __CardId = value; Has_CardId = true; } }

        public bool Has_Star { get; private set; }
        private int __Star;
        public int Star { get { return __Star; } set { __Star = value; Has_Star = true; } }

        public bool Has_IsAdvanceFace { get; private set; }
        private bool __IsAdvanceFace;
        public bool IsAdvanceFace { get { return __IsAdvanceFace; } set { __IsAdvanceFace = value; Has_IsAdvanceFace = true; } }

    }

    /// <summary>城市任务 S - C</summary>
    public partial class GC_SYNC_CITYWORK : LiteNet.IMessage
    {
        public GC_SYNC_CITYWORK()
        {
            cityWorkData = new List<global::ProtobufPacket._DBCityWorkData>();
        }
        public List<global::ProtobufPacket._DBCityWorkData> cityWorkData { get; set; }

    }

    /// <summary>
    /// <para>城市接取任务 c - s</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_CITYWORK_RECEIVE_TASK : LiteNet.IMessage
    {
        public CG_CITYWORK_RECEIVE_TASK()
        {
            cardid = new List<int>();
        }
        public bool Has_cityId { get; private set; }
        private int __cityId;
        public int cityId { get { return __cityId; } set { __cityId = value; Has_cityId = true; } }

        public bool Has_taskId { get; private set; }
        private int __taskId;
        public int taskId { get { return __taskId; } set { __taskId = value; Has_taskId = true; } }

        public List<int> cardid { get; set; }

        /// <summary>提交的cardid</summary>
        public bool Has_taskIdx { get; private set; }
        private int __taskIdx;
        public int taskIdx { get { return __taskIdx; } set { __taskIdx = value; Has_taskIdx = true; } }

        /// <summary>任务id可以重复，单用taskid无法区分任务 加上任务索引</summary>
        public bool Has_timeId { get; private set; }
        private int __timeId;
        public int timeId { get { return __timeId; } set { __timeId = value; Has_timeId = true; } }

    }

    public partial class GC_CITYWORK_RECEIVE_TASK : LiteNet.IMessage
    {
        public bool Has_cityId { get; private set; }
        private int __cityId;
        public int cityId { get { return __cityId; } set { __cityId = value; Has_cityId = true; } }

        public global::ProtobufPacket._DBCityTaskData taskData { get; set; }

        public bool Has_getGift { get; private set; }
        private int __getGift;
        public int getGift { get { return __getGift; } set { __getGift = value; Has_getGift = true; } }

        public bool Has_taskIdx { get; private set; }
        private int __taskIdx;
        public int taskIdx { get { return __taskIdx; } set { __taskIdx = value; Has_taskIdx = true; } }

    }

    /// <summary>
    /// <para>领取城市任务</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_CITYWORK_GET_TASK : LiteNet.IMessage
    {
        public bool Has_cityId { get; private set; }
        private int __cityId;
        public int cityId { get { return __cityId; } set { __cityId = value; Has_cityId = true; } }

        public bool Has_taskId { get; private set; }
        private int __taskId;
        public int taskId { get { return __taskId; } set { __taskId = value; Has_taskId = true; } }

        public bool Has_taskIdx { get; private set; }
        private int __taskIdx;
        public int taskIdx { get { return __taskIdx; } set { __taskIdx = value; Has_taskIdx = true; } }

    }

    public partial class GC_CITYWORK_GET_TASK : LiteNet.IMessage
    {
        public bool Has_cityId { get; private set; }
        private int __cityId;
        public int cityId { get { return __cityId; } set { __cityId = value; Has_cityId = true; } }

        public bool Has_taskId { get; private set; }
        private int __taskId;
        public int taskId { get { return __taskId; } set { __taskId = value; Has_taskId = true; } }

        public bool Has_oldTaskId { get; private set; }
        private int __oldTaskId;
        public int oldTaskId { get { return __oldTaskId; } set { __oldTaskId = value; Has_oldTaskId = true; } }

        public bool Has_taskIdx { get; private set; }
        private int __taskIdx;
        public int taskIdx { get { return __taskIdx; } set { __taskIdx = value; Has_taskIdx = true; } }

    }

    /// <summary>NPC 好感度</summary>
    public partial class GC_SYNC_NPC : LiteNet.IMessage
    {
        public GC_SYNC_NPC()
        {
            Infos = new List<global::ProtobufPacket._DBNPC>();
        }
        public List<global::ProtobufPacket._DBNPC> Infos { get; set; }

    }

    /// <summary>任务系统</summary>
    public partial class GC_SYNC_TASK : LiteNet.IMessage
    {
        public GC_SYNC_TASK()
        {
            taskList = new List<global::ProtobufPacket._TaskData>();
            awardList = new List<global::ProtobufPacket._TaskEvenyAwardData>();
            taskGroupVersionList = new List<global::ProtobufPacket._TaskGroupVersionData>();
        }
        public enum TASKTYPE
        {
            DAY = 0,
            WEEK = 1,
            MAIN = 2,
            TIMELIMIT = 3,
        }

        public bool Has_dayValue { get; private set; }
        private int __dayValue;
        public int dayValue { get { return __dayValue; } set { __dayValue = value; Has_dayValue = true; } }

        public bool Has_weekValue { get; private set; }
        private int __weekValue;
        public int weekValue { get { return __weekValue; } set { __weekValue = value; Has_weekValue = true; } }

        public bool Has_mainValue { get; private set; }
        private int __mainValue;
        public int mainValue { get { return __mainValue; } set { __mainValue = value; Has_mainValue = true; } }

        public List<global::ProtobufPacket._TaskData> taskList { get; set; }

        public List<global::ProtobufPacket._TaskEvenyAwardData> awardList { get; set; }

        public bool Has_timeLimitValue { get; private set; }
        private int __timeLimitValue;
        public int timeLimitValue { get { return __timeLimitValue; } set { __timeLimitValue = value; Has_timeLimitValue = true; } }

        public List<global::ProtobufPacket._TaskGroupVersionData> taskGroupVersionList { get; set; }

        /// <summary>任务组信息列表</summary>
        public bool Has_issend { get; private set; }
        private bool __issend;
        public bool issend { get { return __issend; } set { __issend = value; Has_issend = true; } }

    }

    /// <summary>
    /// <para>领取奖励任务</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_GET_TASK : LiteNet.IMessage
    {
        public CG_GET_TASK()
        {
            taskId = new List<int>();
        }
        public List<int> taskId { get; set; }

    }

    /// <summary>领取奖励任务</summary>
    public partial class GC_GET_TASK : LiteNet.IMessage
    {
        public GC_GET_TASK()
        {
            taskId = new List<int>();
            taskList = new List<global::ProtobufPacket._TaskData>();
        }
        public List<int> taskId { get; set; }

        public List<global::ProtobufPacket._TaskData> taskList { get; set; }

        public bool Has_dayValue { get; private set; }
        private int __dayValue;
        public int dayValue { get { return __dayValue; } set { __dayValue = value; Has_dayValue = true; } }

        public bool Has_weekValue { get; private set; }
        private int __weekValue;
        public int weekValue { get { return __weekValue; } set { __weekValue = value; Has_weekValue = true; } }

        public bool Has_mainValue { get; private set; }
        private int __mainValue;
        public int mainValue { get { return __mainValue; } set { __mainValue = value; Has_mainValue = true; } }

    }

    /// <summary>
    /// <para>领取日常奖励任务</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_GET_EVERY_TASK : LiteNet.IMessage
    {
        public bool Has_awardId { get; private set; }
        private int __awardId;
        public int awardId { get { return __awardId; } set { __awardId = value; Has_awardId = true; } }

        public bool Has_everyType { get; private set; }
        private int __everyType;
        public int everyType { get { return __everyType; } set { __everyType = value; Has_everyType = true; } }

    }

    public partial class GC_GET_EVERY_TASK : LiteNet.IMessage
    {
        public bool Has_awardId { get; private set; }
        private int __awardId;
        public int awardId { get { return __awardId; } set { __awardId = value; Has_awardId = true; } }

        public bool Has_bGet { get; private set; }
        private bool __bGet;
        public bool bGet { get { return __bGet; } set { __bGet = value; Has_bGet = true; } }

    }

    /// <summary>
    /// <para>切换卡面</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_CARD_CHANGE_FACE : LiteNet.IMessage
    {
        public bool Has_CardId { get; private set; }
        private int __CardId;
        public int CardId { get { return __CardId; } set { __CardId = value; Has_CardId = true; } }

        public bool Has_IsAdvanceFace { get; private set; }
        private bool __IsAdvanceFace;
        public bool IsAdvanceFace { get { return __IsAdvanceFace; } set { __IsAdvanceFace = value; Has_IsAdvanceFace = true; } }

    }

    public partial class GC_CARD_CHANGE_FACE : LiteNet.IMessage
    {
        public bool Has_CardId { get; private set; }
        private int __CardId;
        public int CardId { get { return __CardId; } set { __CardId = value; Has_CardId = true; } }

        public bool Has_IsAdvanceFace { get; private set; }
        private bool __IsAdvanceFace;
        public bool IsAdvanceFace { get { return __IsAdvanceFace; } set { __IsAdvanceFace = value; Has_IsAdvanceFace = true; } }

    }

    /// <summary>
    /// <para>传闻减少舆论</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_RUMOR_SUB_TIME : LiteNet.IMessage
    {
        public bool Has_rumorid { get; private set; }
        private int __rumorid;
        public int rumorid { get { return __rumorid; } set { __rumorid = value; Has_rumorid = true; } }

        public bool Has_index { get; private set; }
        private int __index;
        public int index { get { return __index; } set { __index = value; Has_index = true; } }

    }

    public partial class GC_RUMOR_SUB_TIME : LiteNet.IMessage
    {
        public bool Has_rumorid { get; private set; }
        private int __rumorid;
        public int rumorid { get { return __rumorid; } set { __rumorid = value; Has_rumorid = true; } }

        public bool Has_subTimeNum { get; private set; }
        private int __subTimeNum;
        public int subTimeNum { get { return __subTimeNum; } set { __subTimeNum = value; Has_subTimeNum = true; } }

    }

    public partial class CG_PLOT_FINISH : LiteNet.IMessage
    {
        public bool Has_PlotId { get; private set; }
        private int __PlotId;
        public int PlotId { get { return __PlotId; } set { __PlotId = value; Has_PlotId = true; } }

    }

    /// <summary>
    /// <para>调查同步</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_STORY_START_ACTION : LiteNet.IMessage
    {
        public int StoryId { get; set; }

        /// <summary>调查id</summary>
        public int SectionId { get; set; }

        /// <summary>段落id</summary>
        public int ActionId { get; set; }

        /// <summary>动作表id（地址）</summary>
        public int ActionCode { get; set; }

    }

    /// <summary> 每日签到协议</summary>
    public partial class GC_SIGN_INFO : LiteNet.IMessage
    {
        public bool Has_totalSign { get; private set; }
        private int __totalSign;
        public int totalSign { get { return __totalSign; } set { __totalSign = value; Has_totalSign = true; } }

        /// <summary>每月的凌晨5点会清零</summary>
        public bool Has_isSign { get; private set; }
        private bool __isSign;
        public bool isSign { get { return __isSign; } set { __isSign = value; Has_isSign = true; } }

        public bool Has_signCount { get; private set; }
        private long __signCount;
        public long signCount { get { return __signCount; } set { __signCount = value; Has_signCount = true; } }

    }

    /// <summary>@spec:lua</summary>
    [SLua.CustomLuaClass]
    public partial class CG_SIGN : LiteNet.IMessage
    {
        public bool Has_isSign { get; private set; }
        private bool __isSign;
        public bool isSign { get { return __isSign; } set { __isSign = value; Has_isSign = true; } }

    }

    /// <summary>
    /// <para>交互</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_MAINCITY_INTERACTIVE : LiteNet.IMessage
    {
        public bool Has_archId { get; private set; }
        private int __archId;
        public int archId { get { return __archId; } set { __archId = value; Has_archId = true; } }

    }

    /// <summary>交互</summary>
    public partial class GC_MAINCITY_INTERACTIVE : LiteNet.IMessage
    {
        public bool Has_goldtime { get; private set; }
        private long __goldtime;
        public long goldtime { get { return __goldtime; } set { __goldtime = value; Has_goldtime = true; } }

        /// <summary>主界面金币收益时间</summary>
        public bool isClick { get; set; }

    }

    /// <summary>
    /// <para>cdkey兑换码</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_CDKEY_AWARD : LiteNet.IMessage
    {
        public string CDKey { get; set; }

    }

    /// <summary>cdkey兑换码</summary>
    public partial class GC_CDKEY_AWARD : LiteNet.IMessage
    {
        public string CDKey { get; set; }

        public bool Has_Ret { get; private set; }
        private int __Ret;
        public int Ret { get { return __Ret; } set { __Ret = value; Has_Ret = true; } }

    }

    /// <summary>
    /// <para>打开命运UI-已解锁的命运线,如果是自动激活，尝试激活并给命运卡</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_ACTIVE_FATE_AUTO : LiteNet.IMessage
    {
        public bool Has_CharacterId { get; private set; }
        private int __CharacterId;
        public int CharacterId { get { return __CharacterId; } set { __CharacterId = value; Has_CharacterId = true; } }

    }

    /// <summary>
    /// <para>体力领取</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_DAILY_STAMINA : LiteNet.IMessage
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

        public bool Has_IsBuy { get; private set; }
        private bool __IsBuy;
        public bool IsBuy { get { return __IsBuy; } set { __IsBuy = value; Has_IsBuy = true; } }

    }

    public partial class GC_DAILY_STAMINA : LiteNet.IMessage
    {
        public GC_DAILY_STAMINA()
        {
            Ids = new List<int>();
        }
        public List<int> Ids { get; set; }

        public bool Has_ServerTime { get; private set; }
        private int __ServerTime;
        public int ServerTime { get { return __ServerTime; } set { __ServerTime = value; Has_ServerTime = true; } }

    }

    /// <summary>雾城气泡</summary>
    public partial class GC_CITYWORK_BUBBLE : LiteNet.IMessage
    {
        public GC_CITYWORK_BUBBLE()
        {
            rumorid = new List<int>();
            rumorhot = new List<int>();
        }
        public List<int> rumorid { get; set; }

        public List<int> rumorhot { get; set; }

        public bool Has_isClick { get; private set; }
        private bool __isClick;
        public bool isClick { get { return __isClick; } set { __isClick = value; Has_isClick = true; } }

    }

    /// <summary>
    /// <para>气泡点击</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_CITYWORK_CLICKBUBBLE : LiteNet.IMessage
    {
        public bool Has_rumorid { get; private set; }
        private int __rumorid;
        public int rumorid { get { return __rumorid; } set { __rumorid = value; Has_rumorid = true; } }

    }

    /// <summary>
    /// <para>城市挂机打招呼开启传闻</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_CITYWORK_OPENRUMOR : LiteNet.IMessage
    {
        public bool Has_rumorid { get; private set; }
        private int __rumorid;
        public int rumorid { get { return __rumorid; } set { __rumorid = value; Has_rumorid = true; } }

    }

    /// <summary>开启功能</summary>
    public partial class GC_FUN_OPEN : LiteNet.IMessage
    {
        public GC_FUN_OPEN()
        {
            fundata = new List<global::ProtobufPacket._DBFunction>();
        }
        public List<global::ProtobufPacket._DBFunction> fundata { get; set; }

    }

    /// <summary>
    /// <para>NPC领取礼物</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_NPC_GETGIFT : LiteNet.IMessage
    {
        public bool Has_npcid { get; private set; }
        private int __npcid;
        public int npcid { get { return __npcid; } set { __npcid = value; Has_npcid = true; } }

    }

    /// <summary>推送状态更细</summary>
    public partial class GC_PUSH_STATE : LiteNet.IMessage
    {
        public bool Has_IsPushStamina { get; private set; }
        private bool __IsPushStamina;
        public bool IsPushStamina { get { return __IsPushStamina; } set { __IsPushStamina = value; Has_IsPushStamina = true; } }

        public bool Has_IsPushInlineShop { get; private set; }
        private bool __IsPushInlineShop;
        public bool IsPushInlineShop { get { return __IsPushInlineShop; } set { __IsPushInlineShop = value; Has_IsPushInlineShop = true; } }

        public bool Has_IsPushRumorHottes { get; private set; }
        private bool __IsPushRumorHottes;
        public bool IsPushRumorHottes { get { return __IsPushRumorHottes; } set { __IsPushRumorHottes = value; Has_IsPushRumorHottes = true; } }

        public bool Has_IsPushGetStamina { get; private set; }
        private bool __IsPushGetStamina;
        public bool IsPushGetStamina { get { return __IsPushGetStamina; } set { __IsPushGetStamina = value; Has_IsPushGetStamina = true; } }

        public bool Has_IsPushCityTask { get; private set; }
        private bool __IsPushCityTask;
        public bool IsPushCityTask { get { return __IsPushCityTask; } set { __IsPushCityTask = value; Has_IsPushCityTask = true; } }

        public bool Has_IsOpenNoDisturbing { get; private set; }
        private bool __IsOpenNoDisturbing;
        public bool IsOpenNoDisturbing { get { return __IsOpenNoDisturbing; } set { __IsOpenNoDisturbing = value; Has_IsOpenNoDisturbing = true; } }

    }

    /// <summary>
    /// <para>修改推送状态</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_CHANGE_PUSH_STATE : LiteNet.IMessage
    {
        public bool Has_IsPushStamina { get; private set; }
        private bool __IsPushStamina;
        public bool IsPushStamina { get { return __IsPushStamina; } set { __IsPushStamina = value; Has_IsPushStamina = true; } }

        public bool Has_IsPushInlineShop { get; private set; }
        private bool __IsPushInlineShop;
        public bool IsPushInlineShop { get { return __IsPushInlineShop; } set { __IsPushInlineShop = value; Has_IsPushInlineShop = true; } }

        public bool Has_IsPushRumorHottes { get; private set; }
        private bool __IsPushRumorHottes;
        public bool IsPushRumorHottes { get { return __IsPushRumorHottes; } set { __IsPushRumorHottes = value; Has_IsPushRumorHottes = true; } }

        public bool Has_IsPushGetStamina { get; private set; }
        private bool __IsPushGetStamina;
        public bool IsPushGetStamina { get { return __IsPushGetStamina; } set { __IsPushGetStamina = value; Has_IsPushGetStamina = true; } }

        public bool Has_IsPushCityTask { get; private set; }
        private bool __IsPushCityTask;
        public bool IsPushCityTask { get { return __IsPushCityTask; } set { __IsPushCityTask = value; Has_IsPushCityTask = true; } }

        public bool Has_IsOpenNoDisturbing { get; private set; }
        private bool __IsOpenNoDisturbing;
        public bool IsOpenNoDisturbing { get { return __IsOpenNoDisturbing; } set { __IsOpenNoDisturbing = value; Has_IsOpenNoDisturbing = true; } }

    }

    /// <summary>
    /// <para> 解锁章节</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_STORY_CHAPTER_UNLOCK : LiteNet.IMessage
    {
        public bool Has_ChapterId { get; private set; }
        private int __ChapterId;
        public int ChapterId { get { return __ChapterId; } set { __ChapterId = value; Has_ChapterId = true; } }

    }

    /// <summary> 解锁章节</summary>
    public partial class GC_STORY_CHAPTER_UNLOCK : LiteNet.IMessage
    {
        public bool Has_ChapterId { get; private set; }
        private int __ChapterId;
        public int ChapterId { get { return __ChapterId; } set { __ChapterId = value; Has_ChapterId = true; } }

        public bool Has_Result { get; private set; }
        private global::ProtobufPacket.RESULT __Result;
        public global::ProtobufPacket.RESULT Result { get { return __Result; } set { __Result = value; Has_Result = true; } }

    }

    /// <summary>
    /// <para> 解锁个人故事</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_PERSONAL_STORY_UNLOCK : LiteNet.IMessage
    {
        public bool Has_ChracterId { get; private set; }
        private int __ChracterId;
        public int ChracterId { get { return __ChracterId; } set { __ChracterId = value; Has_ChracterId = true; } }

    }

    /// <summary> 解锁个人故事</summary>
    public partial class GC_PERSONAL_STORY_UNLOCK : LiteNet.IMessage
    {
        public bool Has_ChracterId { get; private set; }
        private int __ChracterId;
        public int ChracterId { get { return __ChracterId; } set { __ChracterId = value; Has_ChracterId = true; } }

        public bool Has_Result { get; private set; }
        private global::ProtobufPacket.RESULT __Result;
        public global::ProtobufPacket.RESULT Result { get { return __Result; } set { __Result = value; Has_Result = true; } }

    }

    /// <summary>
    /// <para> 个人故事领取奖励</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_PERSONAL_STORY_GET_AWARD : LiteNet.IMessage
    {
        public bool Has_ChapterId { get; private set; }
        private int __ChapterId;
        public int ChapterId { get { return __ChapterId; } set { __ChapterId = value; Has_ChapterId = true; } }

        public bool Has_AwardIndex { get; private set; }
        private int __AwardIndex;
        public int AwardIndex { get { return __AwardIndex; } set { __AwardIndex = value; Has_AwardIndex = true; } }

    }

    /// <summary> 个人故事领取奖励</summary>
    public partial class GC_PERSONAL_STORY_GET_AWARD : LiteNet.IMessage
    {
        public bool Has_ChapterId { get; private set; }
        private int __ChapterId;
        public int ChapterId { get { return __ChapterId; } set { __ChapterId = value; Has_ChapterId = true; } }

        public bool Has_AwardIndex { get; private set; }
        private int __AwardIndex;
        public int AwardIndex { get { return __AwardIndex; } set { __AwardIndex = value; Has_AwardIndex = true; } }

        public bool Has_Result { get; private set; }
        private global::ProtobufPacket.RESULT __Result;
        public global::ProtobufPacket.RESULT Result { get { return __Result; } set { __Result = value; Has_Result = true; } }

    }

    /// <summary>
    /// <para> 新手引导存储</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_GUIDE_SAVE : LiteNet.IMessage
    {
        public bool Has_guideId { get; private set; }
        private int __guideId;
        public int guideId { get { return __guideId; } set { __guideId = value; Has_guideId = true; } }

    }

    /// <summary> 新手引导存储</summary>
    public partial class GC_GUIDE_SAVE : LiteNet.IMessage
    {
        public GC_GUIDE_SAVE()
        {
            guideId = new List<int>();
        }
        public List<int> guideId { get; set; }

    }

    /// <summary>
    /// <para> 获取福利-累积签到活动列表</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_ADD_SIGN_LIST : LiteNet.IMessage
    {
    }

    /// <summary> 获取福利-累积签到活动列表</summary>
    public partial class GC_ADD_SIGN_LIST : LiteNet.IMessage
    {
        public GC_ADD_SIGN_LIST()
        {
            addSignInfoList = new List<global::ProtobufPacket._FuliAddSign>();
        }
        public List<global::ProtobufPacket._FuliAddSign> addSignInfoList { get; set; }

    }

    /// <summary>
    /// <para> 领取福利-累积签到奖励</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_ADD_SIGN_GET_AWARD : LiteNet.IMessage
    {
        public bool Has_actId { get; private set; }
        private int __actId;
        public int actId { get { return __actId; } set { __actId = value; Has_actId = true; } }

        public bool Has_awardIndex { get; private set; }
        private int __awardIndex;
        public int awardIndex { get { return __awardIndex; } set { __awardIndex = value; Has_awardIndex = true; } }

    }

    /// <summary> 领取福利-累积签到奖励</summary>
    public partial class GC_ADD_SIGN_GET_AWARD : LiteNet.IMessage
    {
        public bool Has_actId { get; private set; }
        private int __actId;
        public int actId { get { return __actId; } set { __actId = value; Has_actId = true; } }

        public bool Has_awardIndex { get; private set; }
        private int __awardIndex;
        public int awardIndex { get { return __awardIndex; } set { __awardIndex = value; Has_awardIndex = true; } }

        /// <summary>领取奖励的id 对应AddSignAward表的小Id； id除以100的余数 也就是第N天的奖励</summary>
        public bool Has_result { get; private set; }
        private global::ProtobufPacket.RESULT __result;
        public global::ProtobufPacket.RESULT result { get { return __result; } set { __result = value; Has_result = true; } }

    }

    /// <summary>服务器踢人</summary>
    public partial class GC_KICK_REASON : LiteNet.IMessage
    {
        public bool Has_Reason { get; private set; }
        private int __Reason;
        public int Reason { get { return __Reason; } set { __Reason = value; Has_Reason = true; } }

    }

    /// <summary>
    /// <para> 获取称号列表</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_CHENGHAO_LIST : LiteNet.IMessage
    {
    }

    /// <summary> 获取称号列表</summary>
    public partial class GC_CHENGHAO_LIST : LiteNet.IMessage
    {
        public global::ProtobufPacket._Title titlelist { get; set; }

    }

    /// <summary>
    /// <para> 选择称号</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_SELECT_CHENGHAO : LiteNet.IMessage
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

    }

    /// <summary> 选择称号</summary>
    public partial class GC_SELECT_CHENGHAO : LiteNet.IMessage
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

        /// <summary>选择的称号ID</summary>
        public bool Has_Result { get; private set; }
        private global::ProtobufPacket.RESULT __Result;
        public global::ProtobufPacket.RESULT Result { get { return __Result; } set { __Result = value; Has_Result = true; } }

    }

    /// <summary>
    /// <para> 打开称号列表同步服务器  让服务器修改称号的状态 例如新</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_CHENGHAO : LiteNet.IMessage
    {
    }

    /// <summary> 告诉客户端玩家获取了新称号</summary>
    public partial class GC_CHENGHAO_NEW : LiteNet.IMessage
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

    }

    /// <summary>
    /// <para>问卷</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_SURVERY : LiteNet.IMessage
    {
        public bool Has_surveryId { get; private set; }
        private int __surveryId;
        public int surveryId { get { return __surveryId; } set { __surveryId = value; Has_surveryId = true; } }

    }

    /// <summary>问卷</summary>
    public partial class GC_SURVERY : LiteNet.IMessage
    {
        public bool Has_surveryId { get; private set; }
        private int __surveryId;
        public int surveryId { get { return __surveryId; } set { __surveryId = value; Has_surveryId = true; } }

        /// <summary>问卷id</summary>
        public string url { get; set; }

        /// <summary>问卷地址</summary>
        public bool Has_preId { get; private set; }
        private int __preId;
        public int preId { get { return __preId; } set { __preId = value; Has_preId = true; } }

    }

    /// <summary>问卷_列表</summary>
    public partial class GC_SURVERY_LIST : LiteNet.IMessage
    {
        public GC_SURVERY_LIST()
        {
            surveryname = new List<string>();
            surveryId = new List<int>();
            preIds = new List<int>();
        }
        public List<string> surveryname { get; set; }

        /// <summary>问卷列表</summary>
        public List<int> surveryId { get; set; }

        /// <summary>是否回答id</summary>
        public List<int> preIds { get; set; }

    }

    /// <summary>
    /// <para>赠送</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_GIVE_FRIEND : LiteNet.IMessage
    {
        public CG_GIVE_FRIEND()
        {
            friendId = new List<long>();
        }
        public List<long> friendId { get; set; }

        public bool Has_isOne { get; private set; }
        private bool __isOne;
        public bool isOne { get { return __isOne; } set { __isOne = value; Has_isOne = true; } }

    }

    /// <summary>赠送</summary>
    public partial class GC_GIVE_FRIEND : LiteNet.IMessage
    {
        public GC_GIVE_FRIEND()
        {
            friendgitfid = new List<long>();
            friendgiveid = new List<long>();
            friendgetid = new List<long>();
        }
        public List<long> friendgitfid { get; set; }

        public List<long> friendgiveid { get; set; }

        public List<long> friendgetid { get; set; }

        public bool Has_GetNum { get; private set; }
        private int __GetNum;
        public int GetNum { get { return __GetNum; } set { __GetNum = value; Has_GetNum = true; } }

        public bool Has_GiveNum { get; private set; }
        private int __GiveNum;
        public int GiveNum { get { return __GiveNum; } set { __GiveNum = value; Has_GiveNum = true; } }

    }

    /// <summary> 快速跳过关卡</summary>
    public partial class CG_STORY_QUICK_START : LiteNet.IMessage
    {
        public bool Has_LevelId { get; private set; }
        private int __LevelId;
        public int LevelId { get { return __LevelId; } set { __LevelId = value; Has_LevelId = true; } }

    }

    /// <summary> 快速跳过关卡</summary>
    public partial class GC_STORY_QUICK_START : LiteNet.IMessage
    {
        public bool Has_LevelId { get; private set; }
        private int __LevelId;
        public int LevelId { get { return __LevelId; } set { __LevelId = value; Has_LevelId = true; } }

        public bool Has_Result { get; private set; }
        private int __Result;
        public int Result { get { return __Result; } set { __Result = value; Has_Result = true; } }

    }

    /// <summary>
    /// <para>获取心动功能的基本信息</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_HEART_BEAT : LiteNet.IMessage
    {
    }

    public partial class GC_HEART_BEAT : LiteNet.IMessage
    {
        public global::ProtobufPacket._HeartBeat data { get; set; }

    }

    /// <summary>
    /// <para>心动功能使用物品获得次数</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_HEART_BEAT_USE_COUNT : LiteNet.IMessage
    {
    }

    public partial class GC_HEART_BEAT_USE_COUNT : LiteNet.IMessage
    {
        public bool Has_Result { get; private set; }
        private global::ProtobufPacket.RESULT __Result;
        public global::ProtobufPacket.RESULT Result { get { return __Result; } set { __Result = value; Has_Result = true; } }

    }

    /// <summary>
    /// <para>心动功能开始</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_HEART_BEAT_START : LiteNet.IMessage
    {
        public bool Has_HeartBeatId { get; private set; }
        private int __HeartBeatId;
        public int HeartBeatId { get { return __HeartBeatId; } set { __HeartBeatId = value; Has_HeartBeatId = true; } }

    }

    public partial class GC_HEART_BEAT_START : LiteNet.IMessage
    {
        public global::ProtobufPacket._HeartBeatProgress Progress { get; set; }

    }

    /// <summary>
    /// <para>进度保存</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_HEART_BEAT_PROGRESS : LiteNet.IMessage
    {
        public bool Has_HeartBeatId { get; private set; }
        private int __HeartBeatId;
        public int HeartBeatId { get { return __HeartBeatId; } set { __HeartBeatId = value; Has_HeartBeatId = true; } }

        /// <summary>玩家选择的地点</summary>
        public bool Has_QuesstionOrder { get; private set; }
        private int __QuesstionOrder;
        public int QuesstionOrder { get { return __QuesstionOrder; } set { __QuesstionOrder = value; Has_QuesstionOrder = true; } }

        /// <summary>回答的是第几个问题</summary>
        public bool Has_QuesstionNum { get; private set; }
        private int __QuesstionNum;
        public int QuesstionNum { get { return __QuesstionNum; } set { __QuesstionNum = value; Has_QuesstionNum = true; } }

        /// <summary>问题选择</summary>
        public bool Has_QuesstionState { get; private set; }
        private int __QuesstionState;
        public int QuesstionState { get { return __QuesstionState; } set { __QuesstionState = value; Has_QuesstionState = true; } }

    }

    /// <summary>
    /// <para>心动功能结束</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_HEART_BEAT_FNISH : LiteNet.IMessage
    {
        public CG_HEART_BEAT_FNISH()
        {
            QuestIdNum = new List<int>();
        }
        public bool Has_HeartBeatId { get; private set; }
        private int __HeartBeatId;
        public int HeartBeatId { get { return __HeartBeatId; } set { __HeartBeatId = value; Has_HeartBeatId = true; } }

        /// <summary>玩家选择的地点</summary>
        public List<int> QuestIdNum { get; set; }

    }

    public partial class GC_HEART_BEAT_FNISH : LiteNet.IMessage
    {
        public bool Has_Result { get; private set; }
        private global::ProtobufPacket.RESULT __Result;
        public global::ProtobufPacket.RESULT Result { get { return __Result; } set { __Result = value; Has_Result = true; } }

    }

    /// <summary>
    /// <para>获取礼物交互的基本信息</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_INTERFLOW : LiteNet.IMessage
    {
    }

    public partial class GC_INTERFLOW : LiteNet.IMessage
    {
        public global::ProtobufPacket._Interflow data { get; set; }

    }

    /// <summary>
    /// <para>礼物交互更换展示id</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_INTERFLOW_SELECT : LiteNet.IMessage
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

    }

    public partial class GC_INTERFLOW_SELECT : LiteNet.IMessage
    {
        public bool Has_Result { get; private set; }
        private global::ProtobufPacket.RESULT __Result;
        public global::ProtobufPacket.RESULT Result { get { return __Result; } set { __Result = value; Has_Result = true; } }

        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

    }

    /// <summary>
    /// <para>公众号-文章</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class GC_SYNC_ARTICLES : LiteNet.IMessage
    {
        public GC_SYNC_ARTICLES()
        {
            Articles = new List<global::ProtobufPacket._DBArticle>();
        }
        public List<global::ProtobufPacket._DBArticle> Articles { get; set; }

        public bool Has_IsAll { get; private set; }
        private bool __IsAll;
        public bool IsAll { get { return __IsAll; } set { __IsAll = value; Has_IsAll = true; } }

    }

    /// <summary>
    /// <para>公众号-文章阅读</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_ARTICLE_READ : LiteNet.IMessage
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

    }

    public partial class GC_ARTICLE_READ : LiteNet.IMessage
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

    }

    /// <summary>
    /// <para>公众号文章-转发</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_ARTICLE_FORWARD : LiteNet.IMessage
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

        /// <summary>公众号id</summary>
        public bool Has_Idx { get; private set; }
        private int __Idx;
        public int Idx { get { return __Idx; } set { __Idx = value; Has_Idx = true; } }

    }

    /// <summary>公众号文章-转发</summary>
    public partial class GC_ARTICLE_FORWARD : LiteNet.IMessage
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

        /// <summary>公众号id</summary>
        public bool Has_Idx { get; private set; }
        private int __Idx;
        public int Idx { get { return __Idx; } set { __Idx = value; Has_Idx = true; } }

    }

    /// <summary>分享游戏</summary>
    public partial class CG_SHARE_SUCC : LiteNet.IMessage
    {
    }

    /// <summary>
    /// <para>关键字QTE</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_SECRET_QTE : LiteNet.IMessage
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

    }

    /// <summary>
    /// <para>开启约会</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_APPOINTMENT_OPEN : LiteNet.IMessage
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

    }

    public partial class GC_APPOINTMENT_OPEN : LiteNet.IMessage
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

        /// <summary>id</summary>
        public bool Has_Result { get; private set; }
        private int __Result;
        public int Result { get { return __Result; } set { __Result = value; Has_Result = true; } }

        /// <summary>结果</summary>
        public global::ProtobufPacket._Appointment AppointmentInfo { get; set; }

    }

    /// <summary>
    /// <para>约会完成</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_APPOINTMENT_FINISH : LiteNet.IMessage
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

        /// <summary>id</summary>
        public bool Has_SelectIndex { get; private set; }
        private int __SelectIndex;
        public int SelectIndex { get { return __SelectIndex; } set { __SelectIndex = value; Has_SelectIndex = true; } }

    }

    public partial class GC_APPOINTMENT_FINISH : LiteNet.IMessage
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

        /// <summary>id</summary>
        public bool Has_Result { get; private set; }
        private int __Result;
        public int Result { get { return __Result; } set { __Result = value; Has_Result = true; } }

    }

    /// <summary>
    /// <para>秘密关联</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_SECRET_LINK : LiteNet.IMessage
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

    }

    public partial class GC_SECRET_LINK : LiteNet.IMessage
    {
        public bool Has_Result { get; private set; }
        private int __Result;
        public int Result { get { return __Result; } set { __Result = value; Has_Result = true; } }

    }

    /// <summary>
    /// <para>获取解密奖励</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_SECRET_GET_AWARD : LiteNet.IMessage
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

    }

    public partial class GC_SECRET_GET_AWARD : LiteNet.IMessage
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

        /// <summary>秘密id</summary>
        public bool Has_Result { get; private set; }
        private int __Result;
        public int Result { get { return __Result; } set { __Result = value; Has_Result = true; } }

    }

    /// <summary>
    /// <para>约会开始</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_APPOINTMENT_START : LiteNet.IMessage
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

    }

    public partial class GC_APPOINTMENT_START : LiteNet.IMessage
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

        /// <summary>约会Id</summary>
        public bool Has_Result { get; private set; }
        private int __Result;
        public int Result { get { return __Result; } set { __Result = value; Has_Result = true; } }

    }

    /// <summary>
    /// <para>礼物</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_OPENGIFT_START : LiteNet.IMessage
    {
        public bool Has_FateId { get; private set; }
        private int __FateId;
        public int FateId { get { return __FateId; } set { __FateId = value; Has_FateId = true; } }

        /// <summary>命运线Id</summary>
        public bool Has_GiftId { get; private set; }
        private int __GiftId;
        public int GiftId { get { return __GiftId; } set { __GiftId = value; Has_GiftId = true; } }

    }

    public partial class GC_OPENGIFT_START : LiteNet.IMessage
    {
        public bool Has_GiveCount { get; private set; }
        private int __GiveCount;
        public int GiveCount { get { return __GiveCount; } set { __GiveCount = value; Has_GiveCount = true; } }

        /// <summary>剩余赠送次数Id</summary>
        public bool Has_GiftId { get; private set; }
        private int __GiftId;
        public int GiftId { get { return __GiftId; } set { __GiftId = value; Has_GiftId = true; } }

    }

    /// <summary>
    /// <para>打开约会界面</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_APPOINTMENT_PANEL : LiteNet.IMessage
    {
        public bool Has_FateId { get; private set; }
        private int __FateId;
        public int FateId { get { return __FateId; } set { __FateId = value; Has_FateId = true; } }

    }

    public partial class GC_APPOINTMENT_PANEL : LiteNet.IMessage
    {
        public bool Has_Result { get; private set; }
        private int __Result;
        public int Result { get { return __Result; } set { __Result = value; Has_Result = true; } }

    }

    /// <summary>
    /// <para>撤销城市任务</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_CITYWORK_REVOCATION_TASK : LiteNet.IMessage
    {
        public bool Has_cityId { get; private set; }
        private int __cityId;
        public int cityId { get { return __cityId; } set { __cityId = value; Has_cityId = true; } }

        public bool Has_taskId { get; private set; }
        private int __taskId;
        public int taskId { get { return __taskId; } set { __taskId = value; Has_taskId = true; } }

        public bool Has_taskIdx { get; private set; }
        private int __taskIdx;
        public int taskIdx { get { return __taskIdx; } set { __taskIdx = value; Has_taskIdx = true; } }

    }

    /// <summary>
    /// <para>聊天话题手动解锁</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_VCHAT_UNLOCK : LiteNet.IMessage
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

    }

    public partial class GC_VCHAT_UNLOCK : LiteNet.IMessage
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

        public bool Has_Result { get; private set; }
        private int __Result;
        public int Result { get { return __Result; } set { __Result = value; Has_Result = true; } }

    }

    /// <summary>
    /// <para>卡牌的能力升级</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_CARD_ABILITYUP : LiteNet.IMessage
    {
        public bool Has_CardId { get; private set; }
        private int __CardId;
        public int CardId { get { return __CardId; } set { __CardId = value; Has_CardId = true; } }

        public bool Has_abilityId { get; private set; }
        private int __abilityId;
        public int abilityId { get { return __abilityId; } set { __abilityId = value; Has_abilityId = true; } }

    }

    public partial class GC_CARD_ABILITYUP : LiteNet.IMessage
    {
        public bool Has_CardId { get; private set; }
        private int __CardId;
        public int CardId { get { return __CardId; } set { __CardId = value; Has_CardId = true; } }

        public bool Has_abilityId { get; private set; }
        private int __abilityId;
        public int abilityId { get { return __abilityId; } set { __abilityId = value; Has_abilityId = true; } }

        /// <summary>能力id</summary>
        public bool Has_abilityLevel { get; private set; }
        private int __abilityLevel;
        public int abilityLevel { get { return __abilityLevel; } set { __abilityLevel = value; Has_abilityLevel = true; } }

    }

    /// <summary>
    /// <para>相册升级</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_ALBUM_LEVELUP : LiteNet.IMessage
    {
        public bool Has_Level { get; private set; }
        private int __Level;
        public int Level { get { return __Level; } set { __Level = value; Has_Level = true; } }

    }

    public partial class GC_ALBUM_LEVELUP : LiteNet.IMessage
    {
        public global::ProtobufPacket._DBAlbum AlbumInfo { get; set; }

    }

    /// <summary>
    /// <para>相册 激活</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_ALBUM_ACTIVE : LiteNet.IMessage
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

    }

    public partial class GC_ALBUM_ACTIVE : LiteNet.IMessage
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

    }

    /// <summary>
    /// <para>相册卡牌 激活</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_ALBUM_ACTIVE_CARD : LiteNet.IMessage
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

    }

    public partial class GC_ALBUM_ACTIVE_CARD : LiteNet.IMessage
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

    }

    /// <summary>
    /// <para>活动信息</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_ACTIVITY : LiteNet.IMessage
    {
    }

    public partial class GC_ACTIVITY : LiteNet.IMessage
    {
        public GC_ACTIVITY()
        {
            info = new List<global::ProtobufPacket._ActivityInfo>();
        }
        public List<global::ProtobufPacket._ActivityInfo> info { get; set; }

    }

    /// <summary>
    /// <para>获取定时奖励</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_CITY_COPY_GET_COMMON_AWARD : LiteNet.IMessage
    {
        public bool Has_CopyId { get; private set; }
        private int __CopyId;
        public int CopyId { get { return __CopyId; } set { __CopyId = value; Has_CopyId = true; } }

    }

    public partial class GC_CITY_COPY_GET_COMMON_AWARD : LiteNet.IMessage
    {
        public bool Has_result { get; private set; }
        private int __result;
        public int result { get { return __result; } set { __result = value; Has_result = true; } }

    }

    /// <summary>
    /// <para>快速领取奖励</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_CITY_COPY_GET_FAST_AWARD : LiteNet.IMessage
    {
        public bool Has_CopyId { get; private set; }
        private int __CopyId;
        public int CopyId { get { return __CopyId; } set { __CopyId = value; Has_CopyId = true; } }

    }

    public partial class GC_CITY_COPY_GET_FAST_AWARD : LiteNet.IMessage
    {
        public bool Has_result { get; private set; }
        private int __result;
        public int result { get { return __result; } set { __result = value; Has_result = true; } }

    }

    /// <summary>
    /// <para>点击楼层</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_FLOOR_CLICK : LiteNet.IMessage
    {
        /// <summary>optional int32 CopyId = 1; //副本id(废弃)</summary>
        public bool Has_FloorId { get; private set; }
        private int __FloorId;
        public int FloorId { get { return __FloorId; } set { __FloorId = value; Has_FloorId = true; } }

    }

    public partial class GC_FLOOR_CLICK : LiteNet.IMessage
    {
        public bool Has_result { get; private set; }
        private int __result;
        public int result { get { return __result; } set { __result = value; Has_result = true; } }

    }

    /// <summary>
    /// <para>打开领取相关界面</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_CITY_COPY_AWARD_PANEL : LiteNet.IMessage
    {
        public bool Has_CopyId { get; private set; }
        private int __CopyId;
        public int CopyId { get { return __CopyId; } set { __CopyId = value; Has_CopyId = true; } }

        /// <summary>副本id</summary>
        public bool Has_IsFast { get; private set; }
        private bool __IsFast;
        public bool IsFast { get { return __IsFast; } set { __IsFast = value; Has_IsFast = true; } }

    }

    /// <summary>@spec:lua</summary>
    [SLua.CustomLuaClass]
    public partial class GC_CITY_COPY_AWARD_PANEL : LiteNet.IMessage
    {
        public GC_CITY_COPY_AWARD_PANEL()
        {
            hookData = new List<global::ProtobufPacket._CityCopyHookData>();
        }
        public bool Has_result { get; private set; }
        private int __result;
        public int result { get { return __result; } set { __result = value; Has_result = true; } }

        /// <summary>结果</summary>
        public List<global::ProtobufPacket._CityCopyHookData> hookData { get; set; }

        /// <summary>服务器奖励</summary>
        public bool Has_IsFast { get; private set; }
        private bool __IsFast;
        public bool IsFast { get { return __IsFast; } set { __IsFast = value; Has_IsFast = true; } }

        /// <summary>是否是快速领取</summary>
        public bool Has_CopyId { get; private set; }
        private int __CopyId;
        public int CopyId { get { return __CopyId; } set { __CopyId = value; Has_CopyId = true; } }

    }

    public partial class CG_REQUEST_PURCHASE_INFO : LiteNet.IMessage
    {
        public bool Has_goodId { get; private set; }
        private int __goodId;
        public int goodId { get { return __goodId; } set { __goodId = value; Has_goodId = true; } }

    }

    public partial class GC_REQUEST_PURCHASE_INFO : LiteNet.IMessage
    {
        public bool Has_errCode { get; private set; }
        private int __errCode;
        public int errCode { get { return __errCode; } set { __errCode = value; Has_errCode = true; } }

        public bool Has_goodId { get; private set; }
        private int __goodId;
        public int goodId { get { return __goodId; } set { __goodId = value; Has_goodId = true; } }

        public string gameOrderId { get; set; }

        public bool Has_gameServerId { get; private set; }
        private int __gameServerId;
        public int gameServerId { get { return __gameServerId; } set { __gameServerId = value; Has_gameServerId = true; } }

    }

    /// <summary>同步充值额</summary>
    public partial class GC_SYNC_CHARGE_AMT : LiteNet.IMessage
    {
        public bool Has_save_amt { get; private set; }
        private long __save_amt;
        public long save_amt { get { return __save_amt; } set { __save_amt = value; Has_save_amt = true; } }

        /// <summary>历史充值游戏币</summary>
        public bool Has_recharge_amt { get; private set; }
        private long __recharge_amt;
        public long recharge_amt { get { return __recharge_amt; } set { __recharge_amt = value; Has_recharge_amt = true; } }

    }

    /// <summary>首充奖励</summary>
    public partial class GC_FIRSTPAY_AWARD : LiteNet.IMessage
    {
        public GC_FIRSTPAY_AWARD()
        {
            presenterShop = new List<int>();
        }
        public List<int> presenterShop { get; set; }

    }

    /// <summary>
    /// <para>获取互动奖励</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_INTERACTIVE_REWARD : LiteNet.IMessage
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

    }

    /// <summary>
    /// <para>标记调查员是否已添加</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_ADD_CHARACTER : LiteNet.IMessage
    {
        public bool Has_CharacterId { get; private set; }
        private int __CharacterId;
        public int CharacterId { get { return __CharacterId; } set { __CharacterId = value; Has_CharacterId = true; } }

    }

    /// <summary>标记调查员是否已添加</summary>
    public partial class GC_ADD_CHARACTER : LiteNet.IMessage
    {
        public bool Has_IsNewCharacter { get; private set; }
        private bool __IsNewCharacter;
        public bool IsNewCharacter { get { return __IsNewCharacter; } set { __IsNewCharacter = value; Has_IsNewCharacter = true; } }

    }

    public partial class OC_TRANSPORT_PACK : LiteNet.IMessage
    {
        public bool Has_guid { get; private set; }
        private ulong __guid;
        public ulong guid { get { return __guid; } set { __guid = value; Has_guid = true; } }

        /// <summary> 消息接受guid</summary>
        public bool Has_packId { get; private set; }
        private int __packId;
        public int packId { get { return __packId; } set { __packId = value; Has_packId = true; } }

        /// <summary> 消息id</summary>
        public byte[] packBuf { get; set; }

    }

    /// <summary>
    /// <para>卡牌培训升级</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_CARD_TRAINLEVEL : LiteNet.IMessage
    {
        public bool Has_CardId { get; private set; }
        private int __CardId;
        public int CardId { get { return __CardId; } set { __CardId = value; Has_CardId = true; } }

    }

    /// <summary>卡牌培训升级</summary>
    public partial class GC_CARD_TRAINLEVEL : LiteNet.IMessage
    {
        public bool Has_CardId { get; private set; }
        private int __CardId;
        public int CardId { get { return __CardId; } set { __CardId = value; Has_CardId = true; } }

        public bool Has_trainLevel { get; private set; }
        private int __trainLevel;
        public int trainLevel { get { return __trainLevel; } set { __trainLevel = value; Has_trainLevel = true; } }

    }

    /// <summary>
    /// <para>获取分享奖励</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_GET_CARD_SHAREREWARD : LiteNet.IMessage
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

    }

    /// <summary>@spec:lua</summary>
    [SLua.CustomLuaClass]
    public partial class CG_GET_ALBUM_SHAREREWARD : LiteNet.IMessage
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

    }

    public partial class GC_GET_CARD_SHAREREWARD : LiteNet.IMessage
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

    }

    public partial class GC_GET_ALBUM_SHAREREWARD : LiteNet.IMessage
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

    }

    /// <summary>@spec:lua</summary>
    [SLua.CustomLuaClass]
    public partial class CG_MONTHCARD_RECEIVEREWARD : LiteNet.IMessage
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

    }

    public partial class GC_MONTHCARD_RECEIVEREWARD : LiteNet.IMessage
    {
        public GC_MONTHCARD_RECEIVEREWARD()
        {
            MonthCardInfo = new List<global::ProtobufPacket._DBMonthCard>();
        }
        public List<global::ProtobufPacket._DBMonthCard> MonthCardInfo { get; set; }

    }

    /// <summary>成长基金 领取接口</summary>
    public partial class GC_FUND_RECEIVELEVELREWARD : LiteNet.IMessage
    {
        public string FundReceiveRecord { get; set; }

        /// <summary>领取记录 二进制字符串 eg 0101 1011 1100 1010</summary>
        public bool Has_Result { get; private set; }
        private int __Result;
        public int Result { get { return __Result; } set { __Result = value; Has_Result = true; } }

    }

    /// <summary>
    /// <para>成长基金 领取接口</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_FUND_RECEIVELEVELREWARD : LiteNet.IMessage
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

    }

    /// <summary>@spec:lua</summary>
    [SLua.CustomLuaClass]
    public partial class CG_MONTHCARD_CHOUKATIP : LiteNet.IMessage
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

    }

    /// <summary>活动状态变更通知 接口</summary>
    public partial class GC_ACTIVITY_CHANGESTATE : LiteNet.IMessage
    {
        public GC_ACTIVITY_CHANGESTATE()
        {
            actId = new List<int>();
            lastState = new List<int>();
            nowState = new List<int>();
            eventType = new List<int>();
        }
        public List<int> actId { get; set; }

        /// <summary>活动id</summary>
        public List<int> lastState { get; set; }

        /// <summary>活动上次状态  0无状态 1未开始阶段  2进行中状态 3结束状态 4展示期间的未开始状态</summary>
        public List<int> nowState { get; set; }

        /// <summary>活动上次状态  0无状态 1未开始阶段  2进行中状态 3结束状态 4展示期间的未开始状态</summary>
        public List<int> eventType { get; set; }

        /// <summary>活动变更类型：0无事件 1开始事件  2结束事件 3重置事件 4展示开始事件</summary>
        public bool Has_serverAnstime { get; private set; }
        private int __serverAnstime;
        public int serverAnstime { get { return __serverAnstime; } set { __serverAnstime = value; Has_serverAnstime = true; } }

    }

    /// <summary>累计基金 领取接口</summary>
    public partial class GC_ACTIVITY_RECHARGE_RECEIVEREWARD : LiteNet.IMessage
    {
        public global::ProtobufPacket._FuliRecharge FuliRechargeInfo { get; set; }

        /// <summary>累计充值信息</summary>
        public bool Has_Result { get; private set; }
        private int __Result;
        public int Result { get { return __Result; } set { __Result = value; Has_Result = true; } }

    }

    /// <summary>
    /// <para>累计基金 领取奖励接口</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_ACTIVITY_RECHARGE_RECEIVEREWARD : LiteNet.IMessage
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

    }

    /// <summary>累计基金数据 同步包</summary>
    public partial class GC_ACTIVITY_RECHARGE : LiteNet.IMessage
    {
        public global::ProtobufPacket._FuliRecharge FuliRechargeInfo { get; set; }

    }

    /// <summary>
    /// <para>累计基金数据 同步包</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_ACTIVITY_RECHARGE : LiteNet.IMessage
    {
    }

    /// <summary>@spec:lua</summary>
    [SLua.CustomLuaClass]
    public partial class CG_FRISTGIFT_RECEIVEREWARD : LiteNet.IMessage
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

    }

    public partial class GC_FRISTGIFT_RECEIVEREWARD : LiteNet.IMessage
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

    }

    /// <summary>首充奖励</summary>
    public partial class GC_SYNC_FRISTGIFT : LiteNet.IMessage
    {
        public global::ProtobufPacket._DBFRISTGIFTINFO FristGiftIdInfo { get; set; }

        public bool Has_TotalCash { get; private set; }
        private int __TotalCash;
        public int TotalCash { get { return __TotalCash; } set { __TotalCash = value; Has_TotalCash = true; } }

    }

    public partial class GC_SYNC_GIFTRECHARGE : LiteNet.IMessage
    {
        public GC_SYNC_GIFTRECHARGE()
        {
            GiftRecharges = new List<global::ProtobufPacket._DBGiftRecharge>();
        }
        public List<global::ProtobufPacket._DBGiftRecharge> GiftRecharges { get; set; }

        public bool Has_IsNewGift { get; private set; }
        private bool __IsNewGift;
        public bool IsNewGift { get { return __IsNewGift; } set { __IsNewGift = value; Has_IsNewGift = true; } }

    }

    /// <summary>@spec:lua</summary>
    [SLua.CustomLuaClass]
    public partial class CG_SYNC_AIBUMLOCK : LiteNet.IMessage
    {
        public bool Has_IsLock { get; private set; }
        private bool __IsLock;
        public bool IsLock { get { return __IsLock; } set { __IsLock = value; Has_IsLock = true; } }

    }

    public partial class GC_SYNC_AIBUMLOCK : LiteNet.IMessage
    {
        public bool Has_IsLock { get; private set; }
        private bool __IsLock;
        public bool IsLock { get { return __IsLock; } set { __IsLock = value; Has_IsLock = true; } }

    }

    public partial class GC_SYNC_RECHARGEBUYNUM : LiteNet.IMessage
    {
        public GC_SYNC_RECHARGEBUYNUM()
        {
            rechargeShopInfo = new List<global::ProtobufPacket._RechargeShopInfo>();
        }
        public List<global::ProtobufPacket._RechargeShopInfo> rechargeShopInfo { get; set; }

    }

    public partial class GC_SYNC_DEBTPUNISHSTATE : LiteNet.IMessage
    {
        public bool Has_debtPunishState { get; private set; }
        private bool __debtPunishState;
        public bool debtPunishState { get { return __debtPunishState; } set { __debtPunishState = value; Has_debtPunishState = true; } }

    }

    public partial class GC_SYNC_SHOPLIST : LiteNet.IMessage
    {
        public GC_SYNC_SHOPLIST()
        {
            ShopList = new List<global::ProtobufPacket._DBShop>();
        }
        public List<global::ProtobufPacket._DBShop> ShopList { get; set; }

        public bool Has_IsNewShop { get; private set; }
        private bool __IsNewShop;
        public bool IsNewShop { get { return __IsNewShop; } set { __IsNewShop = value; Has_IsNewShop = true; } }

    }

    public partial class CG_SAVEPOINT : LiteNet.IMessage
    {
        public global::ProtobufPacket._SavePoint SavePointInfo { get; set; }

    }

    public partial class GC_SAVEPOINT : LiteNet.IMessage
    {
        public bool Has_Result { get; private set; }
        private global::ProtobufPacket.RESULT __Result;
        public global::ProtobufPacket.RESULT Result { get { return __Result; } set { __Result = value; Has_Result = true; } }

    }

    /// <summary>获取保存点数据</summary>
    public partial class CG_SAVEPOINT_GET : LiteNet.IMessage
    {
        public bool Has_LevelId { get; private set; }
        private int __LevelId;
        public int LevelId { get { return __LevelId; } set { __LevelId = value; Has_LevelId = true; } }

        /// <summary>关卡Id</summary>
        public bool Has_SavepointId { get; private set; }
        private int __SavepointId;
        public int SavepointId { get { return __SavepointId; } set { __SavepointId = value; Has_SavepointId = true; } }

    }

    /// <summary>获取保存点数据</summary>
    public partial class GC_SAVEPOINT_GET : LiteNet.IMessage
    {
        public bool Has_LevelId { get; private set; }
        private int __LevelId;
        public int LevelId { get { return __LevelId; } set { __LevelId = value; Has_LevelId = true; } }

        /// <summary>关卡Id</summary>
        public global::ProtobufPacket._SavePoint SavePointInfo { get; set; }

    }

    /// <summary>
    /// <para>引导步骤</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_GUIDE_STEP_ID : LiteNet.IMessage
    {
        public bool Has_guideId { get; private set; }
        private int __guideId;
        public int guideId { get { return __guideId; } set { __guideId = value; Has_guideId = true; } }

    }

    /// <summary>引导步骤</summary>
    public partial class GC_GUIDE_STEP_ID : LiteNet.IMessage
    {
        public bool Has_guideId { get; private set; }
        private int __guideId;
        public int guideId { get { return __guideId; } set { __guideId = value; Has_guideId = true; } }

    }

    /// <summary>同步自动使用道具掉落</summary>
    public partial class GC_SYNC_DROPAUTOGIFT : LiteNet.IMessage
    {
    }

    /// <summary>
    /// <para>停止传闻连续挂机</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_RUMOR_MULTI_STOP : LiteNet.IMessage
    {
        public bool Has_rumorId { get; private set; }
        private int __rumorId;
        public int rumorId { get { return __rumorId; } set { __rumorId = value; Has_rumorId = true; } }

    }

    /// <summary>停止传闻连续挂机</summary>
    public partial class GC_RUMOR_MULTI_STOP : LiteNet.IMessage
    {
    }

    /// <summary>
    /// <para> 点击卡框消红点</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_CLICK_CARDFRAME : LiteNet.IMessage
    {
        public bool Has_CardFrameId { get; private set; }
        private int __CardFrameId;
        public int CardFrameId { get { return __CardFrameId; } set { __CardFrameId = value; Has_CardFrameId = true; } }

    }

    /// <summary>
    /// <para> 选择卡框</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_SELECT_CARDFRAME : LiteNet.IMessage
    {
        public bool Has_CardFrameId { get; private set; }
        private int __CardFrameId;
        public int CardFrameId { get { return __CardFrameId; } set { __CardFrameId = value; Has_CardFrameId = true; } }

    }

    /// <summary> 获取卡框列表</summary>
    public partial class GC_SYNC_CARDFRAME_LIST : LiteNet.IMessage
    {
        public global::ProtobufPacket._CardFrame cardFrames { get; set; }

    }

    /// <summary>
    /// <para> 手机绑定</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_PHONE_BINDING : LiteNet.IMessage
    {
        public bool Has_CardFrameId { get; private set; }
        private int __CardFrameId;
        public int CardFrameId { get { return __CardFrameId; } set { __CardFrameId = value; Has_CardFrameId = true; } }

    }

    /// <summary> 手机绑定</summary>
    public partial class GC_PHONE_BINDING : LiteNet.IMessage
    {
    }

    /// <summary>
    /// <para>#gm客户端和gm服务器通讯的协议,,GM服务器简称为M</para>
    /// <para>@CM</para>
    /// </summary>
    public partial class CM_PACKET : LiteNet.IMessage
    {
        public CM_PACKET()
        {
            arr_int32 = new List<int>();
            arr_uint32 = new List<uint>();
            arr_int64 = new List<long>();
            arr_uint64 = new List<ulong>();
            arr_string = new List<string>();
            arr_float = new List<float>();
            arr_uint64_01 = new List<ulong>();
            arr_uint64_02 = new List<ulong>();
            arr_int32_01 = new List<int>();
            arr_int32_02 = new List<int>();
            arr_int32_03 = new List<int>();
            arr_int32_04 = new List<int>();
            arr_int32_05 = new List<int>();
            arr_int32_06 = new List<int>();
            arr_int32_07 = new List<int>();
            arr_int32_08 = new List<int>();
            arr_int32_09 = new List<int>();
            arr_int32_10 = new List<int>();
            arr_int32_11 = new List<int>();
            arr_int32_12 = new List<int>();
            arr_int32_13 = new List<int>();
            arr_int32_14 = new List<int>();
            arr_int32_15 = new List<int>();
            arr_int32_16 = new List<int>();
            arr_int32_17 = new List<int>();
            arr_int32_18 = new List<int>();
            arr_int32_19 = new List<int>();
            arr_int32_20 = new List<int>();
            arr_int32_21 = new List<int>();
            arr_int32_22 = new List<int>();
            arr_int32_23 = new List<int>();
            arr_int32_24 = new List<int>();
        }
        public int id { get; set; }

        /// <summary> 必须要有的id</summary>
        public string id_string { get; set; }

        /// <summary> 描述id的字符串</summary>
        public List<int> arr_int32 { get; set; }

        /// <summary> int32型参数列表</summary>
        public List<uint> arr_uint32 { get; set; }

        /// <summary> uint32型参数列表</summary>
        public List<long> arr_int64 { get; set; }

        /// <summary> int64型参数列表</summary>
        public List<ulong> arr_uint64 { get; set; }

        /// <summary> uint64型参数列表1</summary>
        public List<string> arr_string { get; set; }

        /// <summary> string型参数列表1</summary>
        public List<float> arr_float { get; set; }

        /// <summary> float型参数列表1</summary>
        public List<ulong> arr_uint64_01 { get; set; }

        /// <summary> uint64型参数列表1</summary>
        public List<ulong> arr_uint64_02 { get; set; }

        /// <summary> uint64型参数列表2</summary>
        public List<int> arr_int32_01 { get; set; }

        public List<int> arr_int32_02 { get; set; }

        public List<int> arr_int32_03 { get; set; }

        public List<int> arr_int32_04 { get; set; }

        public List<int> arr_int32_05 { get; set; }

        public List<int> arr_int32_06 { get; set; }

        public List<int> arr_int32_07 { get; set; }

        public List<int> arr_int32_08 { get; set; }

        public List<int> arr_int32_09 { get; set; }

        public List<int> arr_int32_10 { get; set; }

        public List<int> arr_int32_11 { get; set; }

        public List<int> arr_int32_12 { get; set; }

        public List<int> arr_int32_13 { get; set; }

        public List<int> arr_int32_14 { get; set; }

        public List<int> arr_int32_15 { get; set; }

        public List<int> arr_int32_16 { get; set; }

        public List<int> arr_int32_17 { get; set; }

        public List<int> arr_int32_18 { get; set; }

        public List<int> arr_int32_19 { get; set; }

        public List<int> arr_int32_20 { get; set; }

        public List<int> arr_int32_21 { get; set; }

        public List<int> arr_int32_22 { get; set; }

        public List<int> arr_int32_23 { get; set; }

        public List<int> arr_int32_24 { get; set; }

    }

    /// <summary>
    /// <para>#</para>
    /// <para>@MC</para>
    /// </summary>
    public partial class MC_PACKET : LiteNet.IMessage
    {
        public MC_PACKET()
        {
            arr_int32_01 = new List<int>();
            arr_int32_02 = new List<int>();
            arr_int32_03 = new List<int>();
            arr_int32_04 = new List<int>();
            arr_int32_05 = new List<int>();
            arr_int32_06 = new List<int>();
            arr_int32_07 = new List<int>();
            arr_int32_08 = new List<int>();
            arr_int32_09 = new List<int>();
            arr_int32_10 = new List<int>();
            arr_uint32_01 = new List<uint>();
            arr_uint32_02 = new List<uint>();
            arr_uint32_03 = new List<uint>();
            arr_uint32_04 = new List<uint>();
            arr_uint32_05 = new List<uint>();
            arr_uint32_06 = new List<uint>();
            arr_uint32_07 = new List<uint>();
            arr_uint32_08 = new List<uint>();
            arr_uint32_09 = new List<uint>();
            arr_uint32_10 = new List<uint>();
            arr_int64_01 = new List<long>();
            arr_int64_02 = new List<long>();
            arr_int64_03 = new List<long>();
            arr_int64_04 = new List<long>();
            arr_int64_05 = new List<long>();
            arr_int64_06 = new List<long>();
            arr_int64_07 = new List<long>();
            arr_int64_08 = new List<long>();
            arr_int64_09 = new List<long>();
            arr_int64_10 = new List<long>();
            arr_uint64_01 = new List<ulong>();
            arr_uint64_02 = new List<ulong>();
            arr_uint64_03 = new List<ulong>();
            arr_uint64_04 = new List<ulong>();
            arr_uint64_05 = new List<ulong>();
            arr_uint64_06 = new List<ulong>();
            arr_uint64_07 = new List<ulong>();
            arr_uint64_08 = new List<ulong>();
            arr_uint64_09 = new List<ulong>();
            arr_uint64_10 = new List<ulong>();
            arr_string_01 = new List<string>();
            arr_string_02 = new List<string>();
            arr_string_03 = new List<string>();
            arr_string_04 = new List<string>();
            arr_string_05 = new List<string>();
            arr_string_06 = new List<string>();
            arr_string_07 = new List<string>();
            arr_string_08 = new List<string>();
            arr_string_09 = new List<string>();
            arr_string_10 = new List<string>();
            arr_float_01 = new List<float>();
            arr_float_02 = new List<float>();
            arr_float_03 = new List<float>();
        }
        public int id { get; set; }

        /// <summary> 必须要有的id</summary>
        public string id_string { get; set; }

        /// <summary> 描述id的字符串</summary>
        public List<int> arr_int32_01 { get; set; }

        /// <summary> int32型参数列表1</summary>
        public List<int> arr_int32_02 { get; set; }

        /// <summary> int32型参数列表2</summary>
        public List<int> arr_int32_03 { get; set; }

        /// <summary> int32型参数列表3</summary>
        public List<int> arr_int32_04 { get; set; }

        /// <summary> int32型参数列表4</summary>
        public List<int> arr_int32_05 { get; set; }

        /// <summary> int32型参数列表5</summary>
        public List<int> arr_int32_06 { get; set; }

        /// <summary> int32型参数列表6</summary>
        public List<int> arr_int32_07 { get; set; }

        /// <summary> int32型参数列表7</summary>
        public List<int> arr_int32_08 { get; set; }

        /// <summary> int32型参数列表8</summary>
        public List<int> arr_int32_09 { get; set; }

        /// <summary> int32型参数列表9</summary>
        public List<int> arr_int32_10 { get; set; }

        /// <summary> int32型参数列表10</summary>
        public List<uint> arr_uint32_01 { get; set; }

        /// <summary> uint32型参数列表1</summary>
        public List<uint> arr_uint32_02 { get; set; }

        /// <summary> uint32型参数列表2</summary>
        public List<uint> arr_uint32_03 { get; set; }

        /// <summary> uint32型参数列表3</summary>
        public List<uint> arr_uint32_04 { get; set; }

        /// <summary> uint32型参数列表4</summary>
        public List<uint> arr_uint32_05 { get; set; }

        /// <summary> uint32型参数列表5</summary>
        public List<uint> arr_uint32_06 { get; set; }

        /// <summary> uint32型参数列表6</summary>
        public List<uint> arr_uint32_07 { get; set; }

        /// <summary> uint32型参数列表7</summary>
        public List<uint> arr_uint32_08 { get; set; }

        /// <summary> uint32型参数列表8</summary>
        public List<uint> arr_uint32_09 { get; set; }

        /// <summary> uint32型参数列表9</summary>
        public List<uint> arr_uint32_10 { get; set; }

        /// <summary> uint32型参数列表10</summary>
        public List<long> arr_int64_01 { get; set; }

        /// <summary> int64型参数列表1</summary>
        public List<long> arr_int64_02 { get; set; }

        /// <summary> int64型参数列表2</summary>
        public List<long> arr_int64_03 { get; set; }

        /// <summary> int64型参数列表3</summary>
        public List<long> arr_int64_04 { get; set; }

        /// <summary> int64型参数列表4</summary>
        public List<long> arr_int64_05 { get; set; }

        /// <summary> int64型参数列表5</summary>
        public List<long> arr_int64_06 { get; set; }

        /// <summary> int64型参数列表6</summary>
        public List<long> arr_int64_07 { get; set; }

        /// <summary> int64型参数列表7</summary>
        public List<long> arr_int64_08 { get; set; }

        /// <summary> int64型参数列表8</summary>
        public List<long> arr_int64_09 { get; set; }

        /// <summary> int64型参数列表9</summary>
        public List<long> arr_int64_10 { get; set; }

        /// <summary> int64型参数列表10</summary>
        public List<ulong> arr_uint64_01 { get; set; }

        /// <summary> uint64型参数列表1</summary>
        public List<ulong> arr_uint64_02 { get; set; }

        /// <summary> uint64型参数列表2</summary>
        public List<ulong> arr_uint64_03 { get; set; }

        /// <summary> uint64型参数列表3</summary>
        public List<ulong> arr_uint64_04 { get; set; }

        /// <summary> uint64型参数列表4</summary>
        public List<ulong> arr_uint64_05 { get; set; }

        /// <summary> uint64型参数列表5</summary>
        public List<ulong> arr_uint64_06 { get; set; }

        /// <summary> uint64型参数列表6</summary>
        public List<ulong> arr_uint64_07 { get; set; }

        /// <summary> uint64型参数列表7</summary>
        public List<ulong> arr_uint64_08 { get; set; }

        /// <summary> uint64型参数列表8</summary>
        public List<ulong> arr_uint64_09 { get; set; }

        /// <summary> uint64型参数列表9</summary>
        public List<ulong> arr_uint64_10 { get; set; }

        /// <summary> uint64型参数列表10</summary>
        public List<string> arr_string_01 { get; set; }

        /// <summary> string型参数列表1</summary>
        public List<string> arr_string_02 { get; set; }

        /// <summary> string型参数列表2</summary>
        public List<string> arr_string_03 { get; set; }

        /// <summary> string型参数列表3</summary>
        public List<string> arr_string_04 { get; set; }

        /// <summary> string型参数列表4</summary>
        public List<string> arr_string_05 { get; set; }

        /// <summary> string型参数列表5</summary>
        public List<string> arr_string_06 { get; set; }

        /// <summary> string型参数列表6</summary>
        public List<string> arr_string_07 { get; set; }

        /// <summary> string型参数列表7</summary>
        public List<string> arr_string_08 { get; set; }

        /// <summary> string型参数列表8</summary>
        public List<string> arr_string_09 { get; set; }

        /// <summary> string型参数列表9</summary>
        public List<string> arr_string_10 { get; set; }

        /// <summary> string型参数列表10</summary>
        public List<float> arr_float_01 { get; set; }

        /// <summary> float类型参数列表1</summary>
        public List<float> arr_float_02 { get; set; }

        /// <summary> float类型参数列表2</summary>
        public List<float> arr_float_03 { get; set; }

        /// <summary> float类型参数列表3</summary>
        public global::ProtobufPacket._DBBasePlayer basePlayer { get; set; }

        /// <summary>基础</summary>
        public global::ProtobufPacket._DBPlayerPiece playerPiece { get; set; }

        /// <summary>零碎信息</summary>
        public global::ProtobufPacket._DBItems commonPack { get; set; }

        /// <summary>通用背包</summary>
        public global::ProtobufPacket._DBStory story { get; set; }

        /// <summary>故事</summary>
        public global::ProtobufPacket._DBCharacters mCharacters { get; set; }

        /// <summary>调查员命运线</summary>
        public global::ProtobufPacket._DBCards mCards { get; set; }

    }

    /// <summary>
    /// <para>#gm服务器到游戏服务器之间的协议,,GM服务器简称为M</para>
    /// <para>@MG</para>
    /// </summary>
    public partial class MG_PACKET : LiteNet.IMessage
    {
        public MG_PACKET()
        {
            arr_int32_01 = new List<int>();
            arr_int32_02 = new List<int>();
            arr_int32_03 = new List<int>();
            arr_int32_04 = new List<int>();
            arr_int32_05 = new List<int>();
            arr_int32_06 = new List<int>();
            arr_int32_07 = new List<int>();
            arr_int32_08 = new List<int>();
            arr_int32_09 = new List<int>();
            arr_int32_10 = new List<int>();
            arr_uint32_01 = new List<uint>();
            arr_uint32_02 = new List<uint>();
            arr_uint32_03 = new List<uint>();
            arr_uint32_04 = new List<uint>();
            arr_uint32_05 = new List<uint>();
            arr_uint32_06 = new List<uint>();
            arr_uint32_07 = new List<uint>();
            arr_uint32_08 = new List<uint>();
            arr_uint32_09 = new List<uint>();
            arr_uint32_10 = new List<uint>();
            arr_int64_01 = new List<long>();
            arr_int64_02 = new List<long>();
            arr_int64_03 = new List<long>();
            arr_int64_04 = new List<long>();
            arr_int64_05 = new List<long>();
            arr_int64_06 = new List<long>();
            arr_int64_07 = new List<long>();
            arr_int64_08 = new List<long>();
            arr_int64_09 = new List<long>();
            arr_int64_10 = new List<long>();
            arr_uint64_01 = new List<ulong>();
            arr_uint64_02 = new List<ulong>();
            arr_uint64_03 = new List<ulong>();
            arr_uint64_04 = new List<ulong>();
            arr_uint64_05 = new List<ulong>();
            arr_uint64_06 = new List<ulong>();
            arr_uint64_07 = new List<ulong>();
            arr_uint64_08 = new List<ulong>();
            arr_uint64_09 = new List<ulong>();
            arr_uint64_10 = new List<ulong>();
            arr_string_01 = new List<string>();
            arr_string_02 = new List<string>();
            arr_string_03 = new List<string>();
            arr_string_04 = new List<string>();
            arr_string_05 = new List<string>();
            arr_string_06 = new List<string>();
            arr_string_07 = new List<string>();
            arr_string_08 = new List<string>();
            arr_string_09 = new List<string>();
            arr_string_10 = new List<string>();
            arr_float_01 = new List<float>();
            arr_float_02 = new List<float>();
            arr_float_03 = new List<float>();
        }
        public int id { get; set; }

        /// <summary> 必须要有的id</summary>
        public string id_string { get; set; }

        /// <summary> 描述id的字符串</summary>
        public List<int> arr_int32_01 { get; set; }

        /// <summary> int32型参数列表1</summary>
        public List<int> arr_int32_02 { get; set; }

        /// <summary> int32型参数列表2</summary>
        public List<int> arr_int32_03 { get; set; }

        /// <summary> int32型参数列表3</summary>
        public List<int> arr_int32_04 { get; set; }

        /// <summary> int32型参数列表4</summary>
        public List<int> arr_int32_05 { get; set; }

        /// <summary> int32型参数列表5</summary>
        public List<int> arr_int32_06 { get; set; }

        /// <summary> int32型参数列表6</summary>
        public List<int> arr_int32_07 { get; set; }

        /// <summary> int32型参数列表7</summary>
        public List<int> arr_int32_08 { get; set; }

        /// <summary> int32型参数列表8</summary>
        public List<int> arr_int32_09 { get; set; }

        /// <summary> int32型参数列表9</summary>
        public List<int> arr_int32_10 { get; set; }

        /// <summary> int32型参数列表10</summary>
        public List<uint> arr_uint32_01 { get; set; }

        /// <summary> uint32型参数列表1</summary>
        public List<uint> arr_uint32_02 { get; set; }

        /// <summary> uint32型参数列表2</summary>
        public List<uint> arr_uint32_03 { get; set; }

        /// <summary> uint32型参数列表3</summary>
        public List<uint> arr_uint32_04 { get; set; }

        /// <summary> uint32型参数列表4</summary>
        public List<uint> arr_uint32_05 { get; set; }

        /// <summary> uint32型参数列表5</summary>
        public List<uint> arr_uint32_06 { get; set; }

        /// <summary> uint32型参数列表6</summary>
        public List<uint> arr_uint32_07 { get; set; }

        /// <summary> uint32型参数列表7</summary>
        public List<uint> arr_uint32_08 { get; set; }

        /// <summary> uint32型参数列表8</summary>
        public List<uint> arr_uint32_09 { get; set; }

        /// <summary> uint32型参数列表9</summary>
        public List<uint> arr_uint32_10 { get; set; }

        /// <summary> uint32型参数列表10</summary>
        public List<long> arr_int64_01 { get; set; }

        /// <summary> int64型参数列表1</summary>
        public List<long> arr_int64_02 { get; set; }

        /// <summary> int64型参数列表2</summary>
        public List<long> arr_int64_03 { get; set; }

        /// <summary> int64型参数列表3</summary>
        public List<long> arr_int64_04 { get; set; }

        /// <summary> int64型参数列表4</summary>
        public List<long> arr_int64_05 { get; set; }

        /// <summary> int64型参数列表5</summary>
        public List<long> arr_int64_06 { get; set; }

        /// <summary> int64型参数列表6</summary>
        public List<long> arr_int64_07 { get; set; }

        /// <summary> int64型参数列表7</summary>
        public List<long> arr_int64_08 { get; set; }

        /// <summary> int64型参数列表8</summary>
        public List<long> arr_int64_09 { get; set; }

        /// <summary> int64型参数列表9</summary>
        public List<long> arr_int64_10 { get; set; }

        /// <summary> int64型参数列表10</summary>
        public List<ulong> arr_uint64_01 { get; set; }

        /// <summary> uint64型参数列表1</summary>
        public List<ulong> arr_uint64_02 { get; set; }

        /// <summary> uint64型参数列表2</summary>
        public List<ulong> arr_uint64_03 { get; set; }

        /// <summary> uint64型参数列表3</summary>
        public List<ulong> arr_uint64_04 { get; set; }

        /// <summary> uint64型参数列表4</summary>
        public List<ulong> arr_uint64_05 { get; set; }

        /// <summary> uint64型参数列表5</summary>
        public List<ulong> arr_uint64_06 { get; set; }

        /// <summary> uint64型参数列表6</summary>
        public List<ulong> arr_uint64_07 { get; set; }

        /// <summary> uint64型参数列表7</summary>
        public List<ulong> arr_uint64_08 { get; set; }

        /// <summary> uint64型参数列表8</summary>
        public List<ulong> arr_uint64_09 { get; set; }

        /// <summary> uint64型参数列表9</summary>
        public List<ulong> arr_uint64_10 { get; set; }

        /// <summary> uint64型参数列表10</summary>
        public List<string> arr_string_01 { get; set; }

        /// <summary> string型参数列表1</summary>
        public List<string> arr_string_02 { get; set; }

        /// <summary> string型参数列表2</summary>
        public List<string> arr_string_03 { get; set; }

        /// <summary> string型参数列表3</summary>
        public List<string> arr_string_04 { get; set; }

        /// <summary> string型参数列表4</summary>
        public List<string> arr_string_05 { get; set; }

        /// <summary> string型参数列表5</summary>
        public List<string> arr_string_06 { get; set; }

        /// <summary> string型参数列表6</summary>
        public List<string> arr_string_07 { get; set; }

        /// <summary> string型参数列表7</summary>
        public List<string> arr_string_08 { get; set; }

        /// <summary> string型参数列表8</summary>
        public List<string> arr_string_09 { get; set; }

        /// <summary> string型参数列表9</summary>
        public List<string> arr_string_10 { get; set; }

        /// <summary> string型参数列表10</summary>
        public List<float> arr_float_01 { get; set; }

        /// <summary> float类型参数列表1</summary>
        public List<float> arr_float_02 { get; set; }

        /// <summary> float类型参数列表2</summary>
        public List<float> arr_float_03 { get; set; }

        /// <summary> float类型参数列表3</summary>
        public byte[] playerfulldata { get; set; }

        /// <summary> 全部玩家数据</summary>
        public bool Has_fulldatasize { get; private set; }
        private int __fulldatasize;
        public int fulldatasize { get { return __fulldatasize; } set { __fulldatasize = value; Has_fulldatasize = true; } }

    }

    /// <summary>
    /// <para>#</para>
    /// <para>@GM</para>
    /// </summary>
    public partial class GM_PACKET : LiteNet.IMessage
    {
        public GM_PACKET()
        {
            arr_int32_01 = new List<int>();
            arr_int32_02 = new List<int>();
            arr_int32_03 = new List<int>();
            arr_int32_04 = new List<int>();
            arr_int32_05 = new List<int>();
            arr_int32_06 = new List<int>();
            arr_int32_07 = new List<int>();
            arr_int32_08 = new List<int>();
            arr_int32_09 = new List<int>();
            arr_int32_10 = new List<int>();
            arr_uint32_01 = new List<uint>();
            arr_uint32_02 = new List<uint>();
            arr_uint32_03 = new List<uint>();
            arr_uint32_04 = new List<uint>();
            arr_uint32_05 = new List<uint>();
            arr_uint32_06 = new List<uint>();
            arr_uint32_07 = new List<uint>();
            arr_uint32_08 = new List<uint>();
            arr_uint32_09 = new List<uint>();
            arr_uint32_10 = new List<uint>();
            arr_int64_01 = new List<long>();
            arr_int64_02 = new List<long>();
            arr_int64_03 = new List<long>();
            arr_int64_04 = new List<long>();
            arr_int64_05 = new List<long>();
            arr_int64_06 = new List<long>();
            arr_int64_07 = new List<long>();
            arr_int64_08 = new List<long>();
            arr_int64_09 = new List<long>();
            arr_int64_10 = new List<long>();
            arr_uint64_01 = new List<ulong>();
            arr_uint64_02 = new List<ulong>();
            arr_uint64_03 = new List<ulong>();
            arr_uint64_04 = new List<ulong>();
            arr_uint64_05 = new List<ulong>();
            arr_uint64_06 = new List<ulong>();
            arr_uint64_07 = new List<ulong>();
            arr_uint64_08 = new List<ulong>();
            arr_uint64_09 = new List<ulong>();
            arr_uint64_10 = new List<ulong>();
            arr_string_01 = new List<string>();
            arr_string_02 = new List<string>();
            arr_string_03 = new List<string>();
            arr_string_04 = new List<string>();
            arr_string_05 = new List<string>();
            arr_string_06 = new List<string>();
            arr_string_07 = new List<string>();
            arr_string_08 = new List<string>();
            arr_string_09 = new List<string>();
            arr_string_10 = new List<string>();
            arr_float_01 = new List<float>();
            arr_float_02 = new List<float>();
            arr_float_03 = new List<float>();
        }
        public int id { get; set; }

        /// <summary> 必须要有的id</summary>
        public string id_string { get; set; }

        /// <summary> 描述id的字符串</summary>
        public List<int> arr_int32_01 { get; set; }

        /// <summary> int32型参数列表1</summary>
        public List<int> arr_int32_02 { get; set; }

        /// <summary> int32型参数列表2</summary>
        public List<int> arr_int32_03 { get; set; }

        /// <summary> int32型参数列表3</summary>
        public List<int> arr_int32_04 { get; set; }

        /// <summary> int32型参数列表4</summary>
        public List<int> arr_int32_05 { get; set; }

        /// <summary> int32型参数列表5</summary>
        public List<int> arr_int32_06 { get; set; }

        /// <summary> int32型参数列表6</summary>
        public List<int> arr_int32_07 { get; set; }

        /// <summary> int32型参数列表7</summary>
        public List<int> arr_int32_08 { get; set; }

        /// <summary> int32型参数列表8</summary>
        public List<int> arr_int32_09 { get; set; }

        /// <summary> int32型参数列表9</summary>
        public List<int> arr_int32_10 { get; set; }

        /// <summary> int32型参数列表10</summary>
        public List<uint> arr_uint32_01 { get; set; }

        /// <summary> uint32型参数列表1</summary>
        public List<uint> arr_uint32_02 { get; set; }

        /// <summary> uint32型参数列表2</summary>
        public List<uint> arr_uint32_03 { get; set; }

        /// <summary> uint32型参数列表3</summary>
        public List<uint> arr_uint32_04 { get; set; }

        /// <summary> uint32型参数列表4</summary>
        public List<uint> arr_uint32_05 { get; set; }

        /// <summary> uint32型参数列表5</summary>
        public List<uint> arr_uint32_06 { get; set; }

        /// <summary> uint32型参数列表6</summary>
        public List<uint> arr_uint32_07 { get; set; }

        /// <summary> uint32型参数列表7</summary>
        public List<uint> arr_uint32_08 { get; set; }

        /// <summary> uint32型参数列表8</summary>
        public List<uint> arr_uint32_09 { get; set; }

        /// <summary> uint32型参数列表9</summary>
        public List<uint> arr_uint32_10 { get; set; }

        /// <summary> uint32型参数列表10</summary>
        public List<long> arr_int64_01 { get; set; }

        /// <summary> int64型参数列表1</summary>
        public List<long> arr_int64_02 { get; set; }

        /// <summary> int64型参数列表2</summary>
        public List<long> arr_int64_03 { get; set; }

        /// <summary> int64型参数列表3</summary>
        public List<long> arr_int64_04 { get; set; }

        /// <summary> int64型参数列表4</summary>
        public List<long> arr_int64_05 { get; set; }

        /// <summary> int64型参数列表5</summary>
        public List<long> arr_int64_06 { get; set; }

        /// <summary> int64型参数列表6</summary>
        public List<long> arr_int64_07 { get; set; }

        /// <summary> int64型参数列表7</summary>
        public List<long> arr_int64_08 { get; set; }

        /// <summary> int64型参数列表8</summary>
        public List<long> arr_int64_09 { get; set; }

        /// <summary> int64型参数列表9</summary>
        public List<long> arr_int64_10 { get; set; }

        /// <summary> int64型参数列表10</summary>
        public List<ulong> arr_uint64_01 { get; set; }

        /// <summary> uint64型参数列表1</summary>
        public List<ulong> arr_uint64_02 { get; set; }

        /// <summary> uint64型参数列表2</summary>
        public List<ulong> arr_uint64_03 { get; set; }

        /// <summary> uint64型参数列表3</summary>
        public List<ulong> arr_uint64_04 { get; set; }

        /// <summary> uint64型参数列表4</summary>
        public List<ulong> arr_uint64_05 { get; set; }

        /// <summary> uint64型参数列表5</summary>
        public List<ulong> arr_uint64_06 { get; set; }

        /// <summary> uint64型参数列表6</summary>
        public List<ulong> arr_uint64_07 { get; set; }

        /// <summary> uint64型参数列表7</summary>
        public List<ulong> arr_uint64_08 { get; set; }

        /// <summary> uint64型参数列表8</summary>
        public List<ulong> arr_uint64_09 { get; set; }

        /// <summary> uint64型参数列表9</summary>
        public List<ulong> arr_uint64_10 { get; set; }

        /// <summary> uint64型参数列表10</summary>
        public List<string> arr_string_01 { get; set; }

        /// <summary> string型参数列表1</summary>
        public List<string> arr_string_02 { get; set; }

        /// <summary> string型参数列表2</summary>
        public List<string> arr_string_03 { get; set; }

        /// <summary> string型参数列表3</summary>
        public List<string> arr_string_04 { get; set; }

        /// <summary> string型参数列表4</summary>
        public List<string> arr_string_05 { get; set; }

        /// <summary> string型参数列表5</summary>
        public List<string> arr_string_06 { get; set; }

        /// <summary> string型参数列表6</summary>
        public List<string> arr_string_07 { get; set; }

        /// <summary> string型参数列表7</summary>
        public List<string> arr_string_08 { get; set; }

        /// <summary> string型参数列表8</summary>
        public List<string> arr_string_09 { get; set; }

        /// <summary> string型参数列表9</summary>
        public List<string> arr_string_10 { get; set; }

        /// <summary> string型参数列表10</summary>
        public List<float> arr_float_01 { get; set; }

        /// <summary> float类型参数列表1</summary>
        public List<float> arr_float_02 { get; set; }

        /// <summary> float类型参数列表2</summary>
        public List<float> arr_float_03 { get; set; }

        /// <summary> float类型参数列表3</summary>
        public byte[] playerfulldata { get; set; }

        /// <summary> 全部玩家数据</summary>
        public bool Has_fulldatasize { get; private set; }
        private int __fulldatasize;
        public int fulldatasize { get { return __fulldatasize; } set { __fulldatasize = value; Has_fulldatasize = true; } }

        /// <summary> 全部玩家数据大小</summary>
        public global::ProtobufPacket._DBBasePlayer basePlayer { get; set; }

        /// <summary>基础</summary>
        public global::ProtobufPacket._DBPlayerPiece playerPiece { get; set; }

        /// <summary>零碎信息</summary>
        public global::ProtobufPacket._DBItems commonPack { get; set; }

        /// <summary>通用背包</summary>
        public global::ProtobufPacket._DBStory story { get; set; }

        /// <summary>故事</summary>
        public global::ProtobufPacket._DBCharacters mCharacters { get; set; }

        /// <summary>调查员命运线</summary>
        public global::ProtobufPacket._DBCards mCards { get; set; }

    }

    /// <summary>@GM</summary>
    public partial class GM_VALIDATE_RET : LiteNet.IMessage
    {
        public bool validateret { get; set; }

        /// <summary>验证结果</summary>
        public bool Has_configline { get; private set; }
        private int __configline;
        public int configline { get { return __configline; } set { __configline = value; Has_configline = true; } }

        /// <summary>配置行</summary>
        public bool Has_bwworld { get; private set; }
        private int __bwworld;
        public int bwworld { get { return __bwworld; } set { __bwworld = value; Has_bwworld = true; } }

    }

    /// <summary>@MG</summary>
    public partial class MG_VALIDATE : LiteNet.IMessage
    {
        public int worldid { get; set; }

        /// <summary>世界id</summary>
        public bool Has_gameversion { get; private set; }
        private int __gameversion;
        public int gameversion { get { return __gameversion; } set { __gameversion = value; Has_gameversion = true; } }

        /// <summary>游戏版本号</summary>
        public bool Has_programversion { get; private set; }
        private int __programversion;
        public int programversion { get { return __programversion; } set { __programversion = value; Has_programversion = true; } }

        /// <summary>代码版本号</summary>
        public bool Has_internalversion { get; private set; }
        private int __internalversion;
        public int internalversion { get { return __internalversion; } set { __internalversion = value; Has_internalversion = true; } }

        /// <summary>内部版本号</summary>
        public bool Has_dbversion { get; private set; }
        private int __dbversion;
        public int dbversion { get { return __dbversion; } set { __dbversion = value; Has_dbversion = true; } }

    }

    /// <summary>Load SRedeem</summary>
    public partial class GD_LOAD_SREDEEM : LiteNet.IMessage
    {
        public global::ProtobufPacket._GDGPacketCheckData checkdata { get; set; }

    }

    /// <summary>Load SRedeem Result</summary>
    public partial class DG_LOAD_SREDEEM_RESULT : LiteNet.IMessage
    {
        public global::ProtobufPacket._GDGPacketCheckData checkdata { get; set; }

        /// <summary>消息包验证数据</summary>
        public int loadresult { get; set; }

        /// <summary>是否加载成功</summary>
        public int count { get; set; }

        /// <summary>记录数量</summary>
        public int datasize { get; set; }

        /// <summary>记录buf大小</summary>
        public byte[] data { get; set; }

    }

    /// <summary>Save SRedeem</summary>
    public partial class GD_SAVE_SREDEEM : LiteNet.IMessage
    {
        public global::ProtobufPacket._GDGPacketCheckData checkdata { get; set; }

        /// <summary>消息包验证数据</summary>
        public int count { get; set; }

        /// <summary>记录数量</summary>
        public int datasize { get; set; }

        /// <summary>记录buf大小</summary>
        public byte[] data { get; set; }

    }

    /// <summary>
    /// <para>消除称号红点</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_CLICK_TITLE : LiteNet.IMessage
    {
        public bool Has_TileId { get; private set; }
        private int __TileId;
        public int TileId { get { return __TileId; } set { __TileId = value; Has_TileId = true; } }

    }

    /// <summary>
    /// <para>占卜</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_DIVINATION_GET : LiteNet.IMessage
    {
    }

    /// <summary>
    /// <para>占卜</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class GC_DIVINATION_GET : LiteNet.IMessage
    {
        public bool Has_divinationId { get; private set; }
        private int __divinationId;
        public int divinationId { get { return __divinationId; } set { __divinationId = value; Has_divinationId = true; } }

    }

    /// <summary>
    /// <para>曲谱彩蛋</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_MUSICDIVINATION_GET : LiteNet.IMessage
    {
        public string divinationMusic { get; set; }

    }

    public partial class GC_SYNC_DIVINATION_GET : LiteNet.IMessage
    {
        public global::ProtobufPacket._DBDivination divination { get; set; }

    }

    /// <summary>
    /// <para>累计次数领取</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_DIVINATIONREWARD_GET : LiteNet.IMessage
    {
        public bool Has_rewardId { get; private set; }
        private int __rewardId;
        public int rewardId { get { return __rewardId; } set { __rewardId = value; Has_rewardId = true; } }

    }

    /// <summary>
    /// <para>是否激活占卜</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_DIVINATIONACTIVATE_GET : LiteNet.IMessage
    {
    }

    /// <summary>@spec:lua</summary>
    [SLua.CustomLuaClass]
    public partial class CG_SEE_CHAPTER : LiteNet.IMessage
    {
        public bool Has_chapterId { get; private set; }
        private int __chapterId;
        public int chapterId { get { return __chapterId; } set { __chapterId = value; Has_chapterId = true; } }

    }

    public partial class GC_SEE_CHAPTER : LiteNet.IMessage
    {
        public bool Has_chapterId { get; private set; }
        private int __chapterId;
        public int chapterId { get { return __chapterId; } set { __chapterId = value; Has_chapterId = true; } }

    }

    public partial class GM_TRANSPORT_TO_GMSERVER : LiteNet.IMessage
    {
        public int RoutineID { get; set; }

        /// <summary>需要发送的RoutineID</summary>
        public string MessageName { get; set; }

        /// <summary>消息名</summary>
        public byte[] MessageBuf { get; set; }

    }

    /// <summary>@spec:lua</summary>
    [SLua.CustomLuaClass]
    public partial class CG_BUG_FREEGIFT : LiteNet.IMessage
    {
        public bool Has_giftId { get; private set; }
        private int __giftId;
        public int giftId { get { return __giftId; } set { __giftId = value; Has_giftId = true; } }

    }

    public partial class GC_LOCK_PERSONAL_STORY : LiteNet.IMessage
    {
        public bool Has_lineId { get; private set; }
        private int __lineId;
        public int lineId { get { return __lineId; } set { __lineId = value; Has_lineId = true; } }

    }

    /// <summary>
    /// <para>获取任务列表</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_SYNC_TASK : LiteNet.IMessage
    {
    }

    /// <summary>
    /// <para>-------------------------- 转盘抽奖------------------------ 开始//</para>
    /// <para>登陆请求同步一次 、 打开概率界面请求同步一次</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_SYNC_LOTTERY : LiteNet.IMessage
    {
    }

    /// <summary>
    /// <para>钻石购买道具</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_CONVERT_LOTTERY : LiteNet.IMessage
    {
        public bool Has_buyItemNum { get; private set; }
        private int __buyItemNum;
        public int buyItemNum { get { return __buyItemNum; } set { __buyItemNum = value; Has_buyItemNum = true; } }

    }

    /// <summary>服务器发过来的 转盘抽奖数据同步包</summary>
    public partial class GC_SYNC_LOTTERY : LiteNet.IMessage
    {
        public global::ProtobufPacket._DBLotteryData lotteryData { get; set; }

        /// <summary>当前装盘状态信息 （包含对应活动、对应期号、物品状态的等信息）</summary>
        public bool Has_result { get; private set; }
        private global::ProtobufPacket.RESULT __result;
        public global::ProtobufPacket.RESULT result { get { return __result; } set { __result = value; Has_result = true; } }

    }

    /// <summary>
    /// <para>转盘抽奖</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_DRAW_LOTTERY : LiteNet.IMessage
    {
        public bool Has_num { get; private set; }
        private int __num;
        public int num { get { return __num; } set { __num = value; Has_num = true; } }

    }

    /// <summary>抽奖返回 返回每次抽奖时，抽奖前后物品状态</summary>
    public partial class GC_DRAW_LOTTERY : LiteNet.IMessage
    {
        public GC_DRAW_LOTTERY()
        {
            lotteryDrawDatas = new List<global::ProtobufPacket._LotteryOneDrawData>();
        }
        public List<global::ProtobufPacket._LotteryOneDrawData> lotteryDrawDatas { get; set; }

        /// <summary>N轮转盘 抽奖前后物品状态总览;</summary>
        public bool Has_result { get; private set; }
        private global::ProtobufPacket.RESULT __result;
        public global::ProtobufPacket.RESULT result { get { return __result; } set { __result = value; Has_result = true; } }

    }

    /// <summary>-------------------------- 转盘抽奖------------------------ 结束//</summary>
    public partial class GC_SYNC_SIGNBOARD : LiteNet.IMessage
    {
        public GC_SYNC_SIGNBOARD()
        {
            SignboardThemeInfos = new List<global::ProtobufPacket._DBSignboardTheme>();
        }
        public List<global::ProtobufPacket._DBSignboardTheme> SignboardThemeInfos { get; set; }

    }

    /// <summary>@spec:lua</summary>
    [SLua.CustomLuaClass]
    public partial class CG_ACTIVEATE_SIGNBOARD : LiteNet.IMessage
    {
        public bool Has_SignboardId { get; private set; }
        private int __SignboardId;
        public int SignboardId { get { return __SignboardId; } set { __SignboardId = value; Has_SignboardId = true; } }

    }

    /// <summary>@spec:lua</summary>
    [SLua.CustomLuaClass]
    public partial class CG_ACTIVEATE_DECALS : LiteNet.IMessage
    {
        public bool Has_DecalsId { get; private set; }
        private int __DecalsId;
        public int DecalsId { get { return __DecalsId; } set { __DecalsId = value; Has_DecalsId = true; } }

    }

    /// <summary>@spec:lua</summary>
    [SLua.CustomLuaClass]
    public partial class CG_SAVE_SIGNBOARDPALETTE : LiteNet.IMessage
    {
        public global::ProtobufPacket._DBSignboardPalette SignboardPaletteInfo { get; set; }

    }

    public partial class GC_SAVE_SIGNBOARDPALETTE : LiteNet.IMessage
    {
        public global::ProtobufPacket._DBSignboardPalette SignboardPaletteInfo { get; set; }

    }

    /// <summary>@spec:lua</summary>
    [SLua.CustomLuaClass]
    public partial class CG_SAVE_THEMEPALETTE : LiteNet.IMessage
    {
        public global::ProtobufPacket._DBThemePalette ThemePaletteInfo { get; set; }

    }

    public partial class GC_SAVE_THEMEPALETTE : LiteNet.IMessage
    {
        public GC_SAVE_THEMEPALETTE()
        {
            ThemePaletteInfo = new List<global::ProtobufPacket._DBThemePalette>();
        }
        public List<global::ProtobufPacket._DBThemePalette> ThemePaletteInfo { get; set; }

    }

    /// <summary>@spec:lua</summary>
    [SLua.CustomLuaClass]
    public partial class CG_GET_THEMEAWARD : LiteNet.IMessage
    {
        public bool Has_themeId { get; private set; }
        private int __themeId;
        public int themeId { get { return __themeId; } set { __themeId = value; Has_themeId = true; } }

    }

    /// <summary>
    /// <para>npc任务获取id</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_SYNS_NPCTASK : LiteNet.IMessage
    {
    }

    public partial class GC_SYNS_NPCTASK : LiteNet.IMessage
    {
        public GC_SYNS_NPCTASK()
        {
            npctaskids = new List<int>();
        }
        public List<int> npctaskids { get; set; }

    }

    /// <summary>
    /// <para>npc任务完成信息</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_NPCTASK_COMPLETE : LiteNet.IMessage
    {
        public CG_NPCTASK_COMPLETE()
        {
            questioninfo = new List<int>();
        }
        public bool Has_npctaskid { get; private set; }
        private int __npctaskid;
        public int npctaskid { get { return __npctaskid; } set { __npctaskid = value; Has_npctaskid = true; } }

        public List<int> questioninfo { get; set; }

    }

    public partial class GC_NPCTASK_COMPLETE : LiteNet.IMessage
    {
        public bool Has_npctaskid { get; private set; }
        private int __npctaskid;
        public int npctaskid { get { return __npctaskid; } set { __npctaskid = value; Has_npctaskid = true; } }

    }

    /// <summary>登录同步完成通知</summary>
    public partial class GC_LOGIN_SYNC : LiteNet.IMessage
    {
        public bool Has_Result { get; private set; }
        private global::ProtobufPacket.RESULT __Result;
        public global::ProtobufPacket.RESULT Result { get { return __Result; } set { __Result = value; Has_Result = true; } }

    }

    /// <summary>@spec:lua</summary>
    [SLua.CustomLuaClass]
    public partial class CG_RECEIVE_TESTAWARD : LiteNet.IMessage
    {
    }

    public partial class GC_RECEIVE_TESTAWARD : LiteNet.IMessage
    {
    }

    /// <summary>@spec:lua</summary>
    [SLua.CustomLuaClass]
    public partial class CG_QUERY_TESTAWARD : LiteNet.IMessage
    {
    }

    public partial class GC_QUERY_TESTAWARD : LiteNet.IMessage
    {
    }

    /// <summary>
    /// <para>-------------------------- 七日迷笼 ------------------------ 开始//</para>
    /// <para>七日迷笼 同步包</para>
    /// </summary>
    public partial class GC_ACTIVITY_RIDDLECAGE : LiteNet.IMessage
    {
        public global::ProtobufPacket._FuliRiddleCage fuliRiddleCageInfo { get; set; }

    }

    /// <summary>
    /// <para>七日迷笼 同步包</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_ACTIVITY_RIDDLECAGE : LiteNet.IMessage
    {
    }

    /// <summary>七日迷笼 谜题奖励 领取返回</summary>
    public partial class GC_ACTIVITY_RIDDLECAGE_RECEIVEREWARD : LiteNet.IMessage
    {
        public global::ProtobufPacket._FuliRiddleCage fuliRiddleCageInfo { get; set; }

        /// <summary>七日迷笼 灵感沙漏进度信息</summary>
        public bool Has_result { get; private set; }
        private int __result;
        public int result { get { return __result; } set { __result = value; Has_result = true; } }

    }

    /// <summary>
    /// <para>七日迷笼 谜题奖励 领取奖励</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_ACTIVITY_RIDDLECAGE_RECEIVEREWARD : LiteNet.IMessage
    {
        public bool Has_id { get; private set; }
        private int __id;
        public int id { get { return __id; } set { __id = value; Has_id = true; } }

    }

    /// <summary>
    /// <para>-------------------------- 七日迷笼 ------------------------ 结束//</para>
    /// <para>Delete Player</para>
    /// </summary>
    public partial class GD_DELETE_PLAYER2 : LiteNet.IMessage
    {
        public global::ProtobufPacket._GDGPacketCheckData checkdata { get; set; }

        /// <summary>消息包验证数据</summary>
        public string notifyid { get; set; }

        /// <summary>注销编号</summary>
        public string accountname { get; set; }

        /// <summary>账号名</summary>
        public string playername { get; set; }

        /// <summary>角色名</summary>
        public ulong playerguid { get; set; }

        /// <summary>角色guid</summary>
        public int gameserverroutineid { get; set; }

        /// <summary>routine来源</summary>
        public ulong u64param1 { get; set; }

    }

    /// <summary>Delete Player Reslt</summary>
    public partial class DG_DELETE_PLAYER_RESULT2 : LiteNet.IMessage
    {
        public global::ProtobufPacket._GDGPacketCheckData checkdata { get; set; }

        /// <summary>消息包验证数据</summary>
        public string notifyid { get; set; }

        /// <summary>注销编号</summary>
        public global::ProtobufPacket._DBResult result { get; set; }

        /// <summary>创建结果</summary>
        public string accountname { get; set; }

        /// <summary>账号名</summary>
        public string playername { get; set; }

        /// <summary>角色名</summary>
        public ulong playerguid { get; set; }

        /// <summary>角色guid</summary>
        public int gameserverroutineid { get; set; }

        /// <summary>routine来源</summary>
        public ulong u64param1 { get; set; }

        public global::ProtobufPacket._DBBasePlayer basePlayer { get; set; }

    }

    public partial class GC_SYNC_BATTLEPASSDATA : LiteNet.IMessage
    {
        public GC_SYNC_BATTLEPASSDATA()
        {
            BattlePassList = new List<global::ProtobufPacket._DBBattlePass>();
        }
        public List<global::ProtobufPacket._DBBattlePass> BattlePassList { get; set; }

    }

    /// <summary>@spec:lua</summary>
    [SLua.CustomLuaClass]
    public partial class CG_RECEIVE_BPTASKAWARD : LiteNet.IMessage
    {
        public bool Has_taskId { get; private set; }
        private int __taskId;
        public int taskId { get { return __taskId; } set { __taskId = value; Has_taskId = true; } }

        public bool Has_BPTaskType { get; private set; }
        private int __BPTaskType;
        public int BPTaskType { get { return __BPTaskType; } set { __BPTaskType = value; Has_BPTaskType = true; } }

    }

    /// <summary>@spec:lua</summary>
    [SLua.CustomLuaClass]
    public partial class CG_RECEIVEALL_BPTASKAWARD : LiteNet.IMessage
    {
        public bool Has_BattlePassId { get; private set; }
        private int __BattlePassId;
        public int BattlePassId { get { return __BattlePassId; } set { __BattlePassId = value; Has_BattlePassId = true; } }

    }

    /// <summary>
    /// <para>-------------------------- 好友结局达成提示 ------------------------ 开始//</para>
    /// <para>结局达成提示 客户端发送</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_STORYCHAPTER_FRIENDHINT : LiteNet.IMessage
    {
        public bool Has_rank { get; private set; }
        private int __rank;
        public int rank { get { return __rank; } set { __rank = value; Has_rank = true; } }

        /// <summary> 章节结局等级 _StoryEnum.ChapterRank</summary>
        public bool Has_storyChapterId { get; private set; }
        private int __storyChapterId;
        public int storyChapterId { get { return __storyChapterId; } set { __storyChapterId = value; Has_storyChapterId = true; } }

    }

    /// <summary>结局达成提示 客户端接收</summary>
    public partial class GC_STORYCHAPTER_FRIENDHINT : LiteNet.IMessage
    {
        public global::ProtobufPacket._DBFriend friend { get; set; }

        /// <summary>好友信息</summary>
        public global::ProtobufPacket._StoryChapterEnding ending { get; set; }

    }

    /// <summary>
    /// <para>-------------------------- 好友结局达成提示 ------------------------ 结束//</para>
    /// <para>选择自选卡池概率卡</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class CG_SELECT_OPTIONALUPCARD : LiteNet.IMessage
    {
        public bool Has_cardId { get; private set; }
        private int __cardId;
        public int cardId { get { return __cardId; } set { __cardId = value; Has_cardId = true; } }

    }

    public partial class _MSDK
    {
        public _MSDK()
        {
            platid = -1;
            loginchannel = -1;
            regchannel = -1;
            systemplatid = -1;
            IsLoginFromPlat = false;
        }
        /// <summary>android:mediaid = channeId + "_" + subchannelId ios:9_2</summary>
        public enum PLATFORM
        {
            ePlatform_None = 0,
            /// <summary>未登录</summary>
            ePlatform_Weixin = 1,
            /// <summary>微信平台</summary>
            ePlatform_QQ = 2,
            /// <summary>手Q平台</summary>
            ePlatform_WTLogin = 3,
            /// <summary>WTLogin登录</summary>
            ePlatform_QQHall = 4,
            /// <summary>手Q游戏大厅</summary>
            ePlatform_Guest = 5,
            /// <summary>游客登录</summary>
            ePlatform_Auto = 6,
        }

        public string channelName { get; set; }

        public string gameappid { get; set; }

        public bool Has_platid { get; private set; }
        private int __platid;
        public int platid { get { return __platid; } set { __platid = value; Has_platid = true; } }

        public string openid { get; set; }

        public string telecomoper { get; set; }

        public string network { get; set; }

        public bool Has_loginchannel { get; private set; }
        private int __loginchannel;
        public int loginchannel { get { return __loginchannel; } set { __loginchannel = value; Has_loginchannel = true; } }

        public string clientip { get; set; }

        public bool Has_regchannel { get; private set; }
        private int __regchannel;
        public int regchannel { get { return __regchannel; } set { __regchannel = value; Has_regchannel = true; } }

        public bool Has_systemplatid { get; private set; }
        private int __systemplatid;
        public int systemplatid { get { return __systemplatid; } set { __systemplatid = value; Has_systemplatid = true; } }

        /// <summary>0 ios 1 android 2其他</summary>
        public bool Has_IsLoginFromPlat { get; private set; }
        private bool __IsLoginFromPlat;
        public bool IsLoginFromPlat { get { return __IsLoginFromPlat; } set { __IsLoginFromPlat = value; Has_IsLoginFromPlat = true; } }

        public string deviceId { get; set; }

        public string opSystemVerision { get; set; }

        /// <summary>操作系统版本名称</summary>
        public string phoneModel { get; set; }

        /// <summary>设备名称</summary>
        public string IMEI { get; set; }

        /// <summary>安卓设备IMEI</summary>
        public bool Has_channelid { get; private set; }
        private int __channelid;
        public int channelid { get { return __channelid; } set { __channelid = value; Has_channelid = true; } }

        public string platform { get; set; }

        /// <summary>android:channelName + "_" + channeId ios:laohu_9</summary>
        public string media { get; set; }

    }

    /// <summary>登陆时，需要同步到本地的数据包</summary>
    public partial class _User
    {
        public _User()
        {
            level = 1;
            scene = -1;
            guideid = new List<int>();
            lastLoginTime = 0;
            IsBoughtFund = false;
            LastFundReceiveTime = 0;
        }
        public bool Has_guid { get; private set; }
        private ulong __guid;
        public ulong guid { get { return __guid; } set { __guid = value; Has_guid = true; } }

        public string name { get; set; }

        public bool Has_level { get; private set; }
        private int __level;
        public int level { get { return __level; } set { __level = value; Has_level = true; } }

        public bool Has_sex { get; private set; }
        private int __sex;
        public int sex { get { return __sex; } set { __sex = value; Has_sex = true; } }

        public bool Has_create_time { get; private set; }
        private long __create_time;
        public long create_time { get { return __create_time; } set { __create_time = value; Has_create_time = true; } }

        public bool Has_scene { get; private set; }
        private int __scene;
        public int scene { get { return __scene; } set { __scene = value; Has_scene = true; } }

        public bool Has_posX { get; private set; }
        private float __posX;
        public float posX { get { return __posX; } set { __posX = value; Has_posX = true; } }

        public bool Has_posZ { get; private set; }
        private float __posZ;
        public float posZ { get { return __posZ; } set { __posZ = value; Has_posZ = true; } }

        public bool Has_cardid { get; private set; }
        private int __cardid;
        public int cardid { get { return __cardid; } set { __cardid = value; Has_cardid = true; } }

        public string signature { get; set; }

        /// <summary>optional string		guideid 				 = 11; //废弃</summary>
        public List<int> guideid { get; set; }

        public bool Has_lastChangeNameTime { get; private set; }
        private long __lastChangeNameTime;
        public long lastChangeNameTime { get { return __lastChangeNameTime; } set { __lastChangeNameTime = value; Has_lastChangeNameTime = true; } }

        public bool Has_lastLoginTime { get; private set; }
        private long __lastLoginTime;
        public long lastLoginTime { get { return __lastLoginTime; } set { __lastLoginTime = value; Has_lastLoginTime = true; } }

        public bool Has_IsBoughtFund { get; private set; }
        private bool __IsBoughtFund;
        public bool IsBoughtFund { get { return __IsBoughtFund; } set { __IsBoughtFund = value; Has_IsBoughtFund = true; } }

        /// <summary>是否购买了成长基金</summary>
        public string FundReceiveRecord { get; set; }

        /// <summary>成长基金 购买记录 用bit16位的字符串存储，用01判断是否领取</summary>
        public bool Has_LastFundReceiveTime { get; private set; }
        private long __LastFundReceiveTime;
        public long LastFundReceiveTime { get { return __LastFundReceiveTime; } set { __LastFundReceiveTime = value; Has_LastFundReceiveTime = true; } }

        /// <summary>成长基金等级奖励 上次领取时间 时间戳秒</summary>
        public global::ProtobufPacket._FuliRecharge FuliRechargeInfo { get; set; }

    }

    /// <summary>
    /// <para>item</para>
    /// <para>=================数据库存储 修改需要考虑兼容=================</para>
    /// </summary>
    public partial class _ITEM
    {
        public _ITEM()
        {
            stackcount = 1;
        }
        public bool Has_dataid { get; private set; }
        private int __dataid;
        public int dataid { get { return __dataid; } set { __dataid = value; Has_dataid = true; } }

        /// <summary>dataId</summary>
        public bool Has_guid { get; private set; }
        private ulong __guid;
        public ulong guid { get { return __guid; } set { __guid = value; Has_guid = true; } }

        /// <summary>guid</summary>
        public bool Has_stackcount { get; private set; }
        private int __stackcount;
        public int stackcount { get { return __stackcount; } set { __stackcount = value; Has_stackcount = true; } }

        /// <summary>堆叠数量</summary>
        public bool Has_createtime { get; private set; }
        private long __createtime;
        public long createtime { get { return __createtime; } set { __createtime = value; Has_createtime = true; } }

        /// <summary>创建时间</summary>
        public bool Has_finaltime { get; private set; }
        private long __finaltime;
        public long finaltime { get { return __finaltime; } set { __finaltime = value; Has_finaltime = true; } }

    }

    public partial class _DROP_ITEM
    {
        public _DROP_ITEM()
        {
            dropDynamicParam = new List<int>();
            dropDynamicParamUin64 = new List<ulong>();
            isexchange = false;
        }
        public bool Has_droptype { get; private set; }
        private int __droptype;
        public int droptype { get { return __droptype; } set { __droptype = value; Has_droptype = true; } }

        /// <summary>掉落类型</summary>
        public bool Has_dropid { get; private set; }
        private int __dropid;
        public int dropid { get { return __dropid; } set { __dropid = value; Has_dropid = true; } }

        /// <summary>掉落物品id：卡牌，卡碎片，性格的id</summary>
        public bool Has_dropcount { get; private set; }
        private int __dropcount;
        public int dropcount { get { return __dropcount; } set { __dropcount = value; Has_dropcount = true; } }

        /// <summary>掉落物品数量</summary>
        public bool Has_dropnotifyid { get; private set; }
        private int __dropnotifyid;
        public int dropnotifyid { get { return __dropnotifyid; } set { __dropnotifyid = value; Has_dropnotifyid = true; } }

        /// <summary>掉落物品通告id</summary>
        public bool Has_dropparam { get; private set; }
        private int __dropparam;
        public int dropparam { get { return __dropparam; } set { __dropparam = value; Has_dropparam = true; } }

        /// <summary>掉落参数</summary>
        public bool Has_dropdoubled { get; private set; }
        private bool __dropdoubled;
        public bool dropdoubled { get { return __dropdoubled; } set { __dropdoubled = value; Has_dropdoubled = true; } }

        /// <summary>是否翻倍</summary>
        public bool Has_dropMulti { get; private set; }
        private float __dropMulti;
        public float dropMulti { get { return __dropMulti; } set { __dropMulti = value; Has_dropMulti = true; } }

        /// <summary>翻倍倍数</summary>
        public List<int> dropDynamicParam { get; set; }

        /// <summary>通用动态参数</summary>
        public bool Has_IsNotice { get; private set; }
        private bool __IsNotice;
        public bool IsNotice { get { return __IsNotice; } set { __IsNotice = value; Has_IsNotice = true; } }

        /// <summary>是否要弹提示</summary>
        public List<ulong> dropDynamicParamUin64 { get; set; }

        /// <summary>通用动态参数</summary>
        public bool Has_dropchannel { get; private set; }
        private int __dropchannel;
        public int dropchannel { get { return __dropchannel; } set { __dropchannel = value; Has_dropchannel = true; } }

        /// <summary>drop previw添加时 有时需要区分途径</summary>
        public bool Has_parenttype { get; private set; }
        private int __parenttype;
        public int parenttype { get { return __parenttype; } set { __parenttype = value; Has_parenttype = true; } }

        /// <summary>属于父类掉落类型</summary>
        public bool Has_parentid { get; private set; }
        private int __parentid;
        public int parentid { get { return __parentid; } set { __parentid = value; Has_parentid = true; } }

        /// <summary>属于父类掉落物品id：卡牌，卡碎片，性格的id</summary>
        public bool Has_isexchange { get; private set; }
        private bool __isexchange;
        public bool isexchange { get { return __isexchange; } set { __isexchange = value; Has_isexchange = true; } }

    }

    /// <summary>DropList Struct</summary>
    public partial class _DROP_LIST
    {
        public _DROP_LIST()
        {
            drops = new List<global::ProtobufPacket._DROP_ITEM>();
        }
        public bool Has_diamond { get; private set; }
        private int __diamond;
        public int diamond { get { return __diamond; } set { __diamond = value; Has_diamond = true; } }

        /// <summary>元宝</summary>
        public bool Has_bindyuanbao { get; private set; }
        private int __bindyuanbao;
        public int bindyuanbao { get { return __bindyuanbao; } set { __bindyuanbao = value; Has_bindyuanbao = true; } }

        /// <summary>绑定元宝</summary>
        public bool Has_gold { get; private set; }
        private int __gold;
        public int gold { get { return __gold; } set { __gold = value; Has_gold = true; } }

        /// <summary>金币</summary>
        public bool Has_exp { get; private set; }
        private int __exp;
        public int exp { get { return __exp; } set { __exp = value; Has_exp = true; } }

        /// <summary>角色经验</summary>
        public bool Has_cardexp { get; private set; }
        private int __cardexp;
        public int cardexp { get { return __cardexp; } set { __cardexp = value; Has_cardexp = true; } }

        /// <summary>符灵经验</summary>
        public bool Has_stamina { get; private set; }
        private int __stamina;
        public int stamina { get { return __stamina; } set { __stamina = value; Has_stamina = true; } }

        /// <summary>体力</summary>
        public List<global::ProtobufPacket._DROP_ITEM> drops { get; set; }

    }

    /// <summary>
    /// <para>邮件可领取条件</para>
    /// <para>=================数据库存储 修改需要考虑兼容=================</para>
    /// </summary>
    public partial class _MailConditions
    {
        public _MailConditions()
        {
            guids = new List<ulong>();
        }
        public bool Has_condType { get; private set; }
        private global::ProtobufPacket.MailConditionType __condType;
        public global::ProtobufPacket.MailConditionType condType { get { return __condType; } set { __condType = value; Has_condType = true; } }

        /// <summary>条件类型</summary>
        public List<ulong> guids { get; set; }

        /// <summary>可接收玩家guid</summary>
        public bool Has_level { get; private set; }
        private int __level;
        public int level { get { return __level; } set { __level = value; Has_level = true; } }

    }

    /// <summary>=================数据库存储 修改需要考虑兼容=================</summary>
    public partial class _DynamicAttribute
    {
        public _DynamicAttribute()
        {
            paramsInt32 = new List<int>();
            paramsInt64 = new List<long>();
        }
        public List<int> paramsInt32 { get; set; }

        public List<long> paramsInt64 { get; set; }

    }

    /// <summary>=================数据库存储 修改需要考虑兼容=================</summary>
    public partial class _MailAttachment
    {
        public bool Has_tableId { get; private set; }
        private int __tableId;
        public int tableId { get { return __tableId; } set { __tableId = value; Has_tableId = true; } }

        public bool Has_num { get; private set; }
        private int __num;
        public int num { get { return __num; } set { __num = value; Has_num = true; } }

        public global::ProtobufPacket._DynamicAttribute attr { get; set; }

        public bool Has_itemType { get; private set; }
        private int __itemType;
        public int itemType { get { return __itemType; } set { __itemType = value; Has_itemType = true; } }

    }

    /// <summary> =================数据库存储 修改需要考虑兼容=================</summary>
    public partial class _MailPublicData
    {
        public _MailPublicData()
        {
            tableId = -1;
            overdueTime = 0;
            flagType = global::ProtobufPacket.MailFlagType.MAIL_FLAGT_NONE;
            autoMailId = -1;
            recvCount = 0;
            opType = 0;
            attachment = new List<global::ProtobufPacket._MailAttachment>();
            fromIdip = false;
            createtimeRecvLimit = false;
            priOverdueTime = 0;
            platid = -1;
            sender = 0;
        }
        public bool Has_guid { get; private set; }
        private ulong __guid;
        public ulong guid { get { return __guid; } set { __guid = value; Has_guid = true; } }

        public bool Has_importance { get; private set; }
        private global::ProtobufPacket.MailImportance __importance;
        public global::ProtobufPacket.MailImportance importance { get { return __importance; } set { __importance = value; Has_importance = true; } }

        public string title { get; set; }

        public string content { get; set; }

        public bool Has_tableId { get; private set; }
        private int __tableId;
        public int tableId { get { return __tableId; } set { __tableId = value; Has_tableId = true; } }

        public bool Has_createTime { get; private set; }
        private long __createTime;
        public long createTime { get { return __createTime; } set { __createTime = value; Has_createTime = true; } }

        public bool Has_overdueTime { get; private set; }
        private int __overdueTime;
        public int overdueTime { get { return __overdueTime; } set { __overdueTime = value; Has_overdueTime = true; } }

        public global::ProtobufPacket._MailConditions conditions { get; set; }

        public bool Has_flagType { get; private set; }
        private global::ProtobufPacket.MailFlagType __flagType;
        public global::ProtobufPacket.MailFlagType flagType { get { return __flagType; } set { __flagType = value; Has_flagType = true; } }

        public bool Has_autoMailId { get; private set; }
        private int __autoMailId;
        public int autoMailId { get { return __autoMailId; } set { __autoMailId = value; Has_autoMailId = true; } }

        public bool Has_recvCount { get; private set; }
        private int __recvCount;
        public int recvCount { get { return __recvCount; } set { __recvCount = value; Has_recvCount = true; } }

        public bool Has_opType { get; private set; }
        private int __opType;
        public int opType { get { return __opType; } set { __opType = value; Has_opType = true; } }

        public List<global::ProtobufPacket._MailAttachment> attachment { get; set; }

        public bool Has_fromIdip { get; private set; }
        private bool __fromIdip;
        public bool fromIdip { get { return __fromIdip; } set { __fromIdip = value; Has_fromIdip = true; } }

        public bool Has_createtimeRecvLimit { get; private set; }
        private bool __createtimeRecvLimit;
        public bool createtimeRecvLimit { get { return __createtimeRecvLimit; } set { __createtimeRecvLimit = value; Has_createtimeRecvLimit = true; } }

        public bool Has_usePriCreateTimeForOverdueTime { get; private set; }
        private bool __usePriCreateTimeForOverdueTime;
        public bool usePriCreateTimeForOverdueTime { get { return __usePriCreateTimeForOverdueTime; } set { __usePriCreateTimeForOverdueTime = value; Has_usePriCreateTimeForOverdueTime = true; } }

        /// <summary>否：使用_MailPublicData的createTime 计算过时时间，是：使用_MailPrivateData的createTime 计算过时时间</summary>
        public bool Has_priOverdueTime { get; private set; }
        private int __priOverdueTime;
        public int priOverdueTime { get { return __priOverdueTime; } set { __priOverdueTime = value; Has_priOverdueTime = true; } }

        /// <summary> 个人过期时间，优先使用</summary>
        public bool Has_platid { get; private set; }
        private int __platid;
        public int platid { get { return __platid; } set { __platid = value; Has_platid = true; } }

        /// <summary> 平台 0 iOS, 1 Android</summary>
        public bool Has_idipno { get; private set; }
        private ulong __idipno;
        public ulong idipno { get { return __idipno; } set { __idipno = value; Has_idipno = true; } }

        /// <summary> idip编号</summary>
        public bool Has_sender { get; private set; }
        private int __sender;
        public int sender { get { return __sender; } set { __sender = value; Has_sender = true; } }

    }

    /// <summary> =================数据库存储 修改需要考虑兼容=================</summary>
    public partial class _MailPrivateData
    {
        public _MailPrivateData()
        {
            createTime = 0;
            readTime = 0;
            receivedTime = 0;
        }
        public bool Has_guid { get; private set; }
        private ulong __guid;
        public ulong guid { get { return __guid; } set { __guid = value; Has_guid = true; } }

        public bool Has_createTime { get; private set; }
        private long __createTime;
        public long createTime { get { return __createTime; } set { __createTime = value; Has_createTime = true; } }

        /// <summary>读取时间</summary>
        public bool Has_readTime { get; private set; }
        private long __readTime;
        public long readTime { get { return __readTime; } set { __readTime = value; Has_readTime = true; } }

        /// <summary>读取时间</summary>
        public bool Has_receivedTime { get; private set; }
        private long __receivedTime;
        public long receivedTime { get { return __receivedTime; } set { __receivedTime = value; Has_receivedTime = true; } }

    }

    public partial class _Mail
    {
        public global::ProtobufPacket._MailPublicData publicData { get; set; }

        public global::ProtobufPacket._MailPrivateData privateData { get; set; }

    }

    public partial class _MailNew
    {
        public _MailNew()
        {
            createTime = 0;
            readTime = 0;
            receivedTime = 0;
            overdueTime = 0;
            attachment = new List<global::ProtobufPacket._MailAttachment>();
            opType = 0;
            tableId = -1;
            mailType = 0;
        }
        public bool Has_guid { get; private set; }
        private ulong __guid;
        public ulong guid { get { return __guid; } set { __guid = value; Has_guid = true; } }

        public bool Has_reader { get; private set; }
        private ulong __reader;
        public ulong reader { get { return __reader; } set { __reader = value; Has_reader = true; } }

        public bool Has_writer { get; private set; }
        private int __writer;
        public int writer { get { return __writer; } set { __writer = value; Has_writer = true; } }

        public bool Has_createTime { get; private set; }
        private long __createTime;
        public long createTime { get { return __createTime; } set { __createTime = value; Has_createTime = true; } }

        /// <summary>写件时间</summary>
        public bool Has_readTime { get; private set; }
        private long __readTime;
        public long readTime { get { return __readTime; } set { __readTime = value; Has_readTime = true; } }

        /// <summary>读取时间</summary>
        public bool Has_receivedTime { get; private set; }
        private long __receivedTime;
        public long receivedTime { get { return __receivedTime; } set { __receivedTime = value; Has_receivedTime = true; } }

        /// <summary>收取附件时间</summary>
        public bool Has_overdueTime { get; private set; }
        private int __overdueTime;
        public int overdueTime { get { return __overdueTime; } set { __overdueTime = value; Has_overdueTime = true; } }

        public string title { get; set; }

        public string content { get; set; }

        public List<global::ProtobufPacket._MailAttachment> attachment { get; set; }

        public bool Has_importance { get; private set; }
        private int __importance;
        public int importance { get { return __importance; } set { __importance = value; Has_importance = true; } }

        /// <summary>MailImportance</summary>
        public bool Has_idipno { get; private set; }
        private ulong __idipno;
        public ulong idipno { get { return __idipno; } set { __idipno = value; Has_idipno = true; } }

        /// <summary> idip编号</summary>
        public bool Has_opType { get; private set; }
        private int __opType;
        public int opType { get { return __opType; } set { __opType = value; Has_opType = true; } }

        public bool Has_tableId { get; private set; }
        private int __tableId;
        public int tableId { get { return __tableId; } set { __tableId = value; Has_tableId = true; } }

        public bool Has_mailType { get; private set; }
        private int __mailType;
        public int mailType { get { return __mailType; } set { __mailType = value; Has_mailType = true; } }

        /// <summary>MailType</summary>
        public bool Has_isnewwrite { get; private set; }
        private bool __isnewwrite;
        public bool isnewwrite { get { return __isnewwrite; } set { __isnewwrite = value; Has_isnewwrite = true; } }

    }

    /// <summary>
    /// <para>=================数据库存储 修改需要考虑兼容=================</para>
    /// <para>全服邮件</para>
    /// </summary>
    public partial class _RedeemMail
    {
        public global::ProtobufPacket._MailNew mail { get; set; }

        public bool Has_levelMin { get; private set; }
        private int __levelMin;
        public int levelMin { get { return __levelMin; } set { __levelMin = value; Has_levelMin = true; } }

        /// <summary>等级限制 小于此等级不可领</summary>
        public bool Has_levelMax { get; private set; }
        private int __levelMax;
        public int levelMax { get { return __levelMax; } set { __levelMax = value; Has_levelMax = true; } }

        /// <summary>等级限制 大于此等级不可领</summary>
        public bool Has_createMin { get; private set; }
        private long __createMin;
        public long createMin { get { return __createMin; } set { __createMin = value; Has_createMin = true; } }

        /// <summary>创建角色的最小时间 小于此时间不能领</summary>
        public bool Has_createMax { get; private set; }
        private long __createMax;
        public long createMax { get { return __createMax; } set { __createMax = value; Has_createMax = true; } }

        /// <summary>创建角色的最大时间 大于此时间不能领</summary>
        public bool Has_beginTime { get; private set; }
        private long __beginTime;
        public long beginTime { get { return __beginTime; } set { __beginTime = value; Has_beginTime = true; } }

        /// <summary>可领取开始时间</summary>
        public bool Has_endTime { get; private set; }
        private long __endTime;
        public long endTime { get { return __endTime; } set { __endTime = value; Has_endTime = true; } }

    }

    /// <summary>GM工具邮件撤回</summary>
    public partial class _RedeemRecall
    {
        public bool Has_idipno { get; private set; }
        private ulong __idipno;
        public ulong idipno { get { return __idipno; } set { __idipno = value; Has_idipno = true; } }

        /// <summary>GM工具撤回邮件</summary>
        public bool Has_recalltime { get; private set; }
        private long __recalltime;
        public long recalltime { get { return __recalltime; } set { __recalltime = value; Has_recalltime = true; } }

    }

    public partial class _DBMailRoutineData
    {
        public _DBMailRoutineData()
        {
            redeemMails = new List<global::ProtobufPacket._RedeemMail>();
            recalls = new List<global::ProtobufPacket._RedeemRecall>();
        }
        public List<global::ProtobufPacket._RedeemMail> redeemMails { get; set; }

        public List<global::ProtobufPacket._RedeemRecall> recalls { get; set; }

    }

    public partial class _LoadUserBaseInfos
    {
        public _LoadUserBaseInfos()
        {
            isFinish = false;
            infos = new List<global::ProtobufPacket._LoadUserBaseInfo>();
        }
        public bool Has_isFinish { get; private set; }
        private bool __isFinish;
        public bool isFinish { get { return __isFinish; } set { __isFinish = value; Has_isFinish = true; } }

        /// <summary>是否结束</summary>
        public List<global::ProtobufPacket._LoadUserBaseInfo> infos { get; set; }

    }

    public partial class _LoadUserBaseInfo
    {
        public bool Has_guid { get; private set; }
        private ulong __guid;
        public ulong guid { get { return __guid; } set { __guid = value; Has_guid = true; } }

        /// <summary>guid</summary>
        public string name { get; set; }

        public bool Has_level { get; private set; }
        private int __level;
        public int level { get { return __level; } set { __level = value; Has_level = true; } }

        public bool Has_cardId { get; private set; }
        private int __cardId;
        public int cardId { get { return __cardId; } set { __cardId = value; Has_cardId = true; } }

        public string account { get; set; }

        public bool Has_logoutTime { get; private set; }
        private long __logoutTime;
        public long logoutTime { get { return __logoutTime; } set { __logoutTime = value; Has_logoutTime = true; } }

        public bool Has_loginTime { get; private set; }
        private long __loginTime;
        public long loginTime { get { return __loginTime; } set { __loginTime = value; Has_loginTime = true; } }

        public bool Has_isAdvanceFace { get; private set; }
        private bool __isAdvanceFace;
        public bool isAdvanceFace { get { return __isAdvanceFace; } set { __isAdvanceFace = value; Has_isAdvanceFace = true; } }

        /// <summary>是否是高级卡面</summary>
        public bool Has_cardStar { get; private set; }
        private int __cardStar;
        public int cardStar { get { return __cardStar; } set { __cardStar = value; Has_cardStar = true; } }

        /// <summary>形象卡星级</summary>
        public bool Has_titleId { get; private set; }
        private int __titleId;
        public int titleId { get { return __titleId; } set { __titleId = value; Has_titleId = true; } }

        /// <summary>称号</summary>
        public bool Has_cardFrameId { get; private set; }
        private int __cardFrameId;
        public int cardFrameId { get { return __cardFrameId; } set { __cardFrameId = value; Has_cardFrameId = true; } }

        /// <summary>卡框</summary>
        public bool Has_isRobot { get; private set; }
        private bool __isRobot;
        public bool isRobot { get { return __isRobot; } set { __isRobot = value; Has_isRobot = true; } }

        /// <summary>是否是高级卡面</summary>
        public global::ProtobufPacket._DBChapterEnding chapterinfo { get; set; }

    }

    public partial class _ChapterEnding
    {
        public _ChapterEnding()
        {
            Rank = new List<int>();
        }
        public List<int> Rank { get; set; }

        /// <summary> _StoryEnum.ChapterRank</summary>
        public bool Has_ChapterId { get; private set; }
        private int __ChapterId;
        public int ChapterId { get { return __ChapterId; } set { __ChapterId = value; Has_ChapterId = true; } }

    }

    /// <summary> 仅仅是所有章节对应的结局 // 存库会用</summary>
    public partial class _DBChapterEnding
    {
        public _DBChapterEnding()
        {
            ChapterEnding = new List<global::ProtobufPacket._ChapterEnding>();
        }
        public List<global::ProtobufPacket._ChapterEnding> ChapterEnding { get; set; }

    }

    /// <summary> =================数据库存储 修改需要考虑兼容=================</summary>
    public partial class _DBNewRoleLimit
    {
        public _DBNewRoleLimit()
        {
            id = new List<int>();
            count = new List<int>();
        }
        public List<int> id { get; set; }

        public List<int> count { get; set; }

        public bool Has_countRegister { get; private set; }
        private int __countRegister;
        public int countRegister { get { return __countRegister; } set { __countRegister = value; Has_countRegister = true; } }

        public bool Has_countAccountRegister { get; private set; }
        private int __countAccountRegister;
        public int countAccountRegister { get { return __countAccountRegister; } set { __countAccountRegister = value; Has_countAccountRegister = true; } }

    }

    /// <summary>Check Data of Packet Between GameServer and DBAgent</summary>
    public partial class _GDGPacketCheckData
    {
        public int WorldId { get; set; }

        /// <summary>世界号</summary>
        public int GameVersion { get; set; }

        /// <summary>主版本号</summary>
        public int ProgramVersion { get; set; }

        /// <summary>程序版本号</summary>
        public int InternalVersion { get; set; }

        /// <summary>内部版本号</summary>
        public int DBVersion { get; set; }

    }

    /// <summary>
    /// <para>数据库存储定义////////////////////////////////////////////</para>
    /// <para>optional，或repeat</para>
    /// <para>玩家服务器基础数据 存储在数据库里面</para>
    /// <para>=================数据库存储 修改需要考虑兼容=================</para>
    /// </summary>
    public partial class _DBBasePlayer
    {
        public _DBBasePlayer()
        {
            guid = 0xffffffffffffffff;
            lv = 1;
            createTime = 0;
            lastLogoutTime = 0;
            FirstLogin = true;
            OnlineTime = 0;
            lastLoginManager = 0;
            LastResetDataDaily00Time = -1;
            LastResetDataWeek00Time = -1;
            Exp = 0;
            CardId = -1;
            UnFreezeTime = 0;
            TotalCash = 0;
            IsGuidePlotAward = false;
            guideid = new List<int>();
            SendGiftCount = 0;
            lastLoginTime = 0;
            IsBoughtFund = false;
            LastFundReceiveTime = 0;
            IsDebtPunishState = false;
            IsReceivePhoneAward = false;
            LoginDayCount = 0;
            npctaskids = new List<int>();
        }
        public bool Has_guid { get; private set; }
        private ulong __guid;
        public ulong guid { get { return __guid; } set { __guid = value; Has_guid = true; } }

        public string name { get; set; }

        public string account { get; set; }

        public bool Has_sceneId { get; private set; }
        private int __sceneId;
        public int sceneId { get { return __sceneId; } set { __sceneId = value; Has_sceneId = true; } }

        public bool Has_lv { get; private set; }
        private int __lv;
        public int lv { get { return __lv; } set { __lv = value; Has_lv = true; } }

        public bool Has_createTime { get; private set; }
        private long __createTime;
        public long createTime { get { return __createTime; } set { __createTime = value; Has_createTime = true; } }

        public bool Has_lastLogoutTime { get; private set; }
        private long __lastLogoutTime;
        public long lastLogoutTime { get { return __lastLogoutTime; } set { __lastLogoutTime = value; Has_lastLogoutTime = true; } }

        public bool Has_FirstLogin { get; private set; }
        private bool __FirstLogin;
        public bool FirstLogin { get { return __FirstLogin; } set { __FirstLogin = value; Has_FirstLogin = true; } }

        public bool Has_OnlineTime { get; private set; }
        private ulong __OnlineTime;
        public ulong OnlineTime { get { return __OnlineTime; } set { __OnlineTime = value; Has_OnlineTime = true; } }

        public global::ProtobufPacket._MSDK msdkInfo { get; set; }

        public bool Has_lastLoginManager { get; private set; }
        private int __lastLoginManager;
        public int lastLoginManager { get { return __lastLoginManager; } set { __lastLoginManager = value; Has_lastLoginManager = true; } }

        public bool Has_lastRecvMailTime { get; private set; }
        private long __lastRecvMailTime;
        public long lastRecvMailTime { get { return __lastRecvMailTime; } set { __lastRecvMailTime = value; Has_lastRecvMailTime = true; } }

        /// <summary> 领取邮件的时间</summary>
        public bool Has_LastResetDataDaily00Time { get; private set; }
        private int __LastResetDataDaily00Time;
        public int LastResetDataDaily00Time { get { return __LastResetDataDaily00Time; } set { __LastResetDataDaily00Time = value; Has_LastResetDataDaily00Time = true; } }

        /// <summary> 上次跨天重置数据时间戳</summary>
        public bool Has_LastResetDataWeek00Time { get; private set; }
        private int __LastResetDataWeek00Time;
        public int LastResetDataWeek00Time { get { return __LastResetDataWeek00Time; } set { __LastResetDataWeek00Time = value; Has_LastResetDataWeek00Time = true; } }

        /// <summary> 上次跨周重置数据时间戳</summary>
        public bool Has_Exp { get; private set; }
        private int __Exp;
        public int Exp { get { return __Exp; } set { __Exp = value; Has_Exp = true; } }

        public bool Has_CardId { get; private set; }
        private int __CardId;
        public int CardId { get { return __CardId; } set { __CardId = value; Has_CardId = true; } }

        public string Signature { get; set; }

        public bool Has_GoldBuyTimes { get; private set; }
        private int __GoldBuyTimes;
        public int GoldBuyTimes { get { return __GoldBuyTimes; } set { __GoldBuyTimes = value; Has_GoldBuyTimes = true; } }

        public bool Has_StaminaBuyTimes { get; private set; }
        private int __StaminaBuyTimes;
        public int StaminaBuyTimes { get { return __StaminaBuyTimes; } set { __StaminaBuyTimes = value; Has_StaminaBuyTimes = true; } }

        public bool Has_OnlineTimeToday { get; private set; }
        private int __OnlineTimeToday;
        public int OnlineTimeToday { get { return __OnlineTimeToday; } set { __OnlineTimeToday = value; Has_OnlineTimeToday = true; } }

        /// <summary>当日在线时长（s）</summary>
        public bool Has_UnFreezeTime { get; private set; }
        private long __UnFreezeTime;
        public long UnFreezeTime { get { return __UnFreezeTime; } set { __UnFreezeTime = value; Has_UnFreezeTime = true; } }

        /// <summary>账号解封时间</summary>
        public bool Has_TotalCash { get; private set; }
        private long __TotalCash;
        public long TotalCash { get { return __TotalCash; } set { __TotalCash = value; Has_TotalCash = true; } }

        /// <summary>累计充值额 单位（分）</summary>
        public bool Has_IsGuidePlotAward { get; private set; }
        private bool __IsGuidePlotAward;
        public bool IsGuidePlotAward { get { return __IsGuidePlotAward; } set { __IsGuidePlotAward = value; Has_IsGuidePlotAward = true; } }

        /// <summary>是否获得了新手剧情奖励</summary>
        public string FreezeReason { get; set; }

        /// <summary>账号冻结原因 对内</summary>
        public bool Has_FreezeTime { get; private set; }
        private int __FreezeTime;
        public int FreezeTime { get { return __FreezeTime; } set { __FreezeTime = value; Has_FreezeTime = true; } }

        /// <summary>
        /// <para>账号冻结时长 (秒)</para>
        /// <para>optional string guideid		 = 26;//新手引导 废弃</para>
        /// </summary>
        public string FreezeNotify { get; set; }

        /// <summary>账号冻结原因 对玩家</summary>
        public List<int> guideid { get; set; }

        /// <summary>新手引导</summary>
        public bool Has_SendGiftCount { get; private set; }
        private int __SendGiftCount;
        public int SendGiftCount { get { return __SendGiftCount; } set { __SendGiftCount = value; Has_SendGiftCount = true; } }

        /// <summary>赠送礼物次数</summary>
        public bool Has_LastChangeNameTime { get; private set; }
        private long __LastChangeNameTime;
        public long LastChangeNameTime { get { return __LastChangeNameTime; } set { __LastChangeNameTime = value; Has_LastChangeNameTime = true; } }

        /// <summary>上次改名时间 ansi</summary>
        public bool Has_unlockName { get; private set; }
        private bool __unlockName;
        public bool unlockName { get { return __unlockName; } set { __unlockName = value; Has_unlockName = true; } }

        /// <summary>注册成功后解锁名字</summary>
        public bool Has_setCharName { get; private set; }
        private bool __setCharName;
        public bool setCharName { get { return __setCharName; } set { __setCharName = value; Has_setCharName = true; } }

        /// <summary>登记角色名-guid对应</summary>
        public bool Has_uploadCharInfo { get; private set; }
        private bool __uploadCharInfo;
        public bool uploadCharInfo { get { return __uploadCharInfo; } set { __uploadCharInfo = value; Has_uploadCharInfo = true; } }

        /// <summary>首次上传BriefInfo成功</summary>
        public bool Has_lastLoginTime { get; private set; }
        private long __lastLoginTime;
        public long lastLoginTime { get { return __lastLoginTime; } set { __lastLoginTime = value; Has_lastLoginTime = true; } }

        /// <summary>上次登陆时间</summary>
        public bool Has_IsBoughtFund { get; private set; }
        private bool __IsBoughtFund;
        public bool IsBoughtFund { get { return __IsBoughtFund; } set { __IsBoughtFund = value; Has_IsBoughtFund = true; } }

        /// <summary>是否购买了 成长基金</summary>
        public string FundReceiveRecord { get; set; }

        /// <summary>成长基金 购买记录 用bit16位的字符串存储，用01判断是否领取</summary>
        public bool Has_LastFundReceiveTime { get; private set; }
        private long __LastFundReceiveTime;
        public long LastFundReceiveTime { get { return __LastFundReceiveTime; } set { __LastFundReceiveTime = value; Has_LastFundReceiveTime = true; } }

        /// <summary>成长基金等级奖励 上次领取时间</summary>
        public bool Has_DebtTime { get; private set; }
        private long __DebtTime;
        public long DebtTime { get { return __DebtTime; } set { __DebtTime = value; Has_DebtTime = true; } }

        /// <summary> 欠费时间</summary>
        public bool Has_IsDebtPunishState { get; private set; }
        private bool __IsDebtPunishState;
        public bool IsDebtPunishState { get { return __IsDebtPunishState; } set { __IsDebtPunishState = value; Has_IsDebtPunishState = true; } }

        /// <summary> 欠费惩罚状态</summary>
        public bool Has_IsReceivePhoneAward { get; private set; }
        private bool __IsReceivePhoneAward;
        public bool IsReceivePhoneAward { get { return __IsReceivePhoneAward; } set { __IsReceivePhoneAward = value; Has_IsReceivePhoneAward = true; } }

        /// <summary> 是否领取手机绑定奖励</summary>
        public bool Has_LoginDayCount { get; private set; }
        private long __LoginDayCount;
        public long LoginDayCount { get { return __LoginDayCount; } set { __LoginDayCount = value; Has_LoginDayCount = true; } }

        /// <summary>累计登陆天数</summary>
        public List<int> npctaskids { get; set; }

    }

    /// <summary>
    /// <para>邮件组存储</para>
    /// <para>=================数据库存储 修改需要考虑兼容=================</para>
    /// </summary>
    public partial class _SystemMails_tf
    {
        public _SystemMails_tf()
        {
            modify = new List<ulong>();
            del = new List<ulong>();
            mails = new List<global::ProtobufPacket._MailNew>();
        }
        /// <summary>repeated _MailPublicData mails = 1; 废弃</summary>
        public List<ulong> modify { get; set; }

        public List<ulong> del { get; set; }

        /// <summary>optional uint64 groupId = 4; 废弃</summary>
        public List<global::ProtobufPacket._MailNew> mails { get; set; }

    }

    /// <summary>
    /// <para>背包</para>
    /// <para>=================数据库存储 修改需要考虑兼容=================</para>
    /// </summary>
    public partial class _DBItems
    {
        public _DBItems()
        {
            indexs = new List<int>();
            items = new List<global::ProtobufPacket._ITEM>();
        }
        public List<int> indexs { get; set; }

        public List<global::ProtobufPacket._ITEM> items { get; set; }

    }

    /// <summary>
    /// <para>货币</para>
    /// <para>=================数据库存储 修改需要考虑兼容=================</para>
    /// </summary>
    public partial class _DBCurrency
    {
        public _DBCurrency()
        {
            currency = new List<long>();
            currencyTotal = new List<long>();
            currencyDebt = new List<long>();
        }
        public List<long> currency { get; set; }

        public List<long> currencyTotal { get; set; }

        /// <summary>累计获得 用于日志记录</summary>
        public List<long> currencyDebt { get; set; }

    }

    /// <summary>
    /// <para>玩家零碎信息</para>
    /// <para>=================数据库存储 修改需要考虑兼容=================</para>
    /// </summary>
    public partial class _DBPlayerPiece
    {
        public _DBPlayerPiece()
        {
            QuestionIds = new List<int>();
            _AttrRecovers = new List<global::ProtobufPacket._DBAttrRecover>();
            Albums = new List<global::ProtobufPacket._DBAlbumCell>();
            NPCInfo = new List<global::ProtobufPacket._DBNPC>();
            StaminaIds = new List<int>();
            functioninfo = new List<global::ProtobufPacket._DBFunction>();
            fuliAddSignInfo = new List<global::ProtobufPacket._FuliAddSign>();
            MonthCardInfo = new List<global::ProtobufPacket._DBMonthCard>();
            GiftRecharges = new List<global::ProtobufPacket._DBGiftRecharge>();
            GiftIssue = new List<global::ProtobufPacket._DBRechargeGiftIssue>();
            ShopList = new List<global::ProtobufPacket._DBShop>();
            GiveGiftCount = new List<global::ProtobufPacket._DBGiveGift>();
            DrawCardCount = new List<global::ProtobufPacket._DrawCard>();
            BuyGoodsBillno = new List<string>();
            SignboardTheme = new List<global::ProtobufPacket._DBSignboardTheme>();
            ThemePalette = new List<global::ProtobufPacket._DBThemePalette>();
            BattlePassList = new List<global::ProtobufPacket._DBBattlePass>();
        }
        public global::ProtobufPacket._DBCurrency Currency { get; set; }

        public List<int> QuestionIds { get; set; }

        /// <summary>一次性问题 已经答过的</summary>
        public List<global::ProtobufPacket._DBAttrRecover> _AttrRecovers { get; set; }

        /// <summary>体力、信心</summary>
        public global::ProtobufPacket._DBMissions MisInfo { get; set; }

        /// <summary>之后考虑独占一张表</summary>
        public global::ProtobufPacket._DBRumorData RumorInfo { get; set; }

        /// <summary>传闻数据</summary>
        public global::ProtobufPacket._DBDiamondShop DiamondShopInfo { get; set; }

        /// <summary>钻石商店</summary>
        public global::ProtobufPacket._DBVChats VChatInfo { get; set; }

        /// <summary>手机系统-聊天</summary>
        public global::ProtobufPacket._DBCircles CircleInfo { get; set; }

        /// <summary>朋友圈推送信息</summary>
        public global::ProtobufPacket._DBFriendInfo FriendInfo { get; set; }

        /// <summary>好友</summary>
        public global::ProtobufPacket._DBDrawCard DrawCardInfo { get; set; }

        /// <summary>抽卡信息</summary>
        public global::ProtobufPacket._DBCommonShop ShopInfo { get; set; }

        /// <summary>商店限购信息</summary>
        public global::ProtobufPacket._DBMails MailInfo { get; set; }

        /// <summary>玩家邮件数据</summary>
        public List<global::ProtobufPacket._DBAlbumCell> Albums { get; set; }

        /// <summary>玩家相册图收集</summary>
        public global::ProtobufPacket._DBCityWork CityWork { get; set; }

        /// <summary>挂机任务</summary>
        public List<global::ProtobufPacket._DBNPC> NPCInfo { get; set; }

        /// <summary>NPC好感度</summary>
        public global::ProtobufPacket._DBTASK taskInfo { get; set; }

        /// <summary>任务成就</summary>
        public global::ProtobufPacket._DBMainCity maincity { get; set; }

        /// <summary>主城互动</summary>
        public global::ProtobufPacket._DBSign signInfo { get; set; }

        /// <summary>签到信息</summary>
        public List<int> StaminaIds { get; set; }

        /// <summary>已领取体力类型</summary>
        public List<global::ProtobufPacket._DBFunction> functioninfo { get; set; }

        /// <summary>功能开放</summary>
        public global::ProtobufPacket._DBPushState PushStateInfo { get; set; }

        /// <summary>推送状态同步</summary>
        public List<global::ProtobufPacket._FuliAddSign> fuliAddSignInfo { get; set; }

        /// <summary>福利- 累积登陆存储信息</summary>
        public global::ProtobufPacket._Title title { get; set; }

        /// <summary>称号</summary>
        public global::ProtobufPacket._HeartBeat heartbeat { get; set; }

        /// <summary>心动</summary>
        public global::ProtobufPacket._Interflow interflow { get; set; }

        /// <summary>礼物交互</summary>
        public global::ProtobufPacket._DBArticles Articles { get; set; }

        /// <summary>公众号</summary>
        public global::ProtobufPacket._DBAlbum AlbumInfo { get; set; }

        /// <summary>相册</summary>
        public List<global::ProtobufPacket._DBMonthCard> MonthCardInfo { get; set; }

        /// <summary>月卡</summary>
        public global::ProtobufPacket._FuliRecharge FuliRechargeInfo { get; set; }

        /// <summary>福利-累计充值</summary>
        public global::ProtobufPacket._DBFRISTGIFTINFO FristGifts { get; set; }

        /// <summary> 首充</summary>
        public List<global::ProtobufPacket._DBGiftRecharge> GiftRecharges { get; set; }

        /// <summary>直购礼包</summary>
        public bool Has_GiftRechargeIssue { get; private set; }
        private int __GiftRechargeIssue;
        public int GiftRechargeIssue { get { return __GiftRechargeIssue; } set { __GiftRechargeIssue = value; Has_GiftRechargeIssue = true; } }

        /// <summary>直购礼包期号</summary>
        public List<global::ProtobufPacket._DBRechargeGiftIssue> GiftIssue { get; set; }

        /// <summary>直购礼包期号</summary>
        public List<global::ProtobufPacket._DBShop> ShopList { get; set; }

        /// <summary>商品（道具商城）</summary>
        public List<global::ProtobufPacket._DBGiveGift> GiveGiftCount { get; set; }

        /// <summary>赠送调查员礼物累计次数</summary>
        public global::ProtobufPacket._CardFrame cardFrames { get; set; }

        /// <summary>卡框</summary>
        public List<global::ProtobufPacket._DrawCard> DrawCardCount { get; set; }

        /// <summary>抽到每张卡的次数</summary>
        public global::ProtobufPacket._DBDivination Divination { get; set; }

        /// <summary>万象之庭</summary>
        public List<string> BuyGoodsBillno { get; set; }

        /// <summary>充值订单号</summary>
        public List<global::ProtobufPacket._DBSignboardTheme> SignboardTheme { get; set; }

        /// <summary>店铺招牌主题</summary>
        public global::ProtobufPacket._DBSignboardPalette SignboardPalette { get; set; }

        /// <summary>店铺画板</summary>
        public List<global::ProtobufPacket._DBThemePalette> ThemePalette { get; set; }

        /// <summary>主题画板</summary>
        public global::ProtobufPacket._DBLotteryData LotteryData { get; set; }

        /// <summary>福利转盘抽奖</summary>
        public global::ProtobufPacket._FuliRiddleCage FuliRiddleCage { get; set; }

        /// <summary>福利-七日迷笼</summary>
        public List<global::ProtobufPacket._DBBattlePass> BattlePassList { get; set; }

    }

    public partial class _DrawCard
    {
        public bool Has_CardId { get; private set; }
        private int __CardId;
        public int CardId { get { return __CardId; } set { __CardId = value; Has_CardId = true; } }

        public bool Has_DrawCount { get; private set; }
        private int __DrawCount;
        public int DrawCount { get { return __DrawCount; } set { __DrawCount = value; Has_DrawCount = true; } }

    }

    public partial class _DBDiamondShop
    {
        public _DBDiamondShop()
        {
            FirstPayID = new List<int>();
            GoodsId = new List<int>();
            BuyTimes = new List<int>();
            FirstPayOrder = new List<string>();
        }
        public bool Has_RechargeRMBMonth { get; private set; }
        private int __RechargeRMBMonth;
        public int RechargeRMBMonth { get { return __RechargeRMBMonth; } set { __RechargeRMBMonth = value; Has_RechargeRMBMonth = true; } }

        /// <summary> 每月累积充值RMB</summary>
        public bool Has_LastRechargeTime { get; private set; }
        private int __LastRechargeTime;
        public int LastRechargeTime { get { return __LastRechargeTime; } set { __LastRechargeTime = value; Has_LastRechargeTime = true; } }

        /// <summary> 上次充值时间(s)</summary>
        public bool Has_RechargeRMBDay { get; private set; }
        private int __RechargeRMBDay;
        public int RechargeRMBDay { get { return __RechargeRMBDay; } set { __RechargeRMBDay = value; Has_RechargeRMBDay = true; } }

        /// <summary> 每日累积充值RMB</summary>
        public bool Has_FirstPayPhase { get; private set; }
        private int __FirstPayPhase;
        public int FirstPayPhase { get { return __FirstPayPhase; } set { __FirstPayPhase = value; Has_FirstPayPhase = true; } }

        /// <summary> 当前首充期号</summary>
        public List<int> FirstPayID { get; set; }

        /// <summary> 首充ID列表</summary>
        public List<int> GoodsId { get; set; }

        /// <summary> 购买过的商品列表</summary>
        public List<int> BuyTimes { get; set; }

        /// <summary> 购买的次数</summary>
        public List<string> FirstPayOrder { get; set; }

    }

    public partial class _IWPLAYORDER
    {
        public int orderType { get; set; }

        /// <summary>订单类型</summary>
        public long orderId { get; set; }

        /// <summary>订单号</summary>
        public string userId { get; set; }

        /// <summary>账户ID</summary>
        public ulong playerGuid { get; set; }

        /// <summary>角色GUID</summary>
        public string appOrder { get; set; }

        /// <summary>游戏自定义订单</summary>
        public int goodId { get; set; }

        /// <summary>商品ID</summary>
        public int goodNum { get; set; }

        /// <summary>商品数量</summary>
        public int goodType { get; set; }

        /// <summary>商品类型</summary>
        public long amount { get; set; }

        /// <summary>充值金额</summary>
        public long time { get; set; }

    }

    public partial class _MsdkPlatData
    {
        public _MsdkPlatData()
        {
            platId = -1;
            isTodayLoginFromGameCenter = false;
            _qqSVipEndTime = -1;
            systemplatid = -1;
        }
        public bool Has_platId { get; private set; }
        private int __platId;
        public int platId { get { return __platId; } set { __platId = value; Has_platId = true; } }

        /// <summary>登陆平台</summary>
        public bool Has_isTodayLoginFromGameCenter { get; private set; }
        private bool __isTodayLoginFromGameCenter;
        public bool isTodayLoginFromGameCenter { get { return __isTodayLoginFromGameCenter; } set { __isTodayLoginFromGameCenter = value; Has_isTodayLoginFromGameCenter = true; } }

        /// <summary>今日是否从游戏中心登录</summary>
        public bool Has__qqSVipEndTime { get; private set; }
        private int ___qqSVipEndTime;
        public int _qqSVipEndTime { get { return ___qqSVipEndTime; } set { ___qqSVipEndTime = value; Has__qqSVipEndTime = true; } }

        /// <summary>QQ会员到期时间</summary>
        public bool Has_systemplatid { get; private set; }
        private int __systemplatid;
        public int systemplatid { get { return __systemplatid; } set { __systemplatid = value; Has_systemplatid = true; } }

    }

    /// <summary>
    /// <para>关系</para>
    /// <para>=================数据库存储 修改需要考虑兼容=================</para>
    /// </summary>
    public partial class _DBRelation
    {
        public bool Has_guid { get; private set; }
        private ulong __guid;
        public ulong guid { get { return __guid; } set { __guid = value; Has_guid = true; } }

        public bool Has_time { get; private set; }
        private long __time;
        public long time { get { return __time; } set { __time = value; Has_time = true; } }

        public bool Has_cardId { get; private set; }
        private int __cardId;
        public int cardId { get { return __cardId; } set { __cardId = value; Has_cardId = true; } }

        public bool Has_level { get; private set; }
        private int __level;
        public int level { get { return __level; } set { __level = value; Has_level = true; } }

        public string name { get; set; }

        public bool Has_offlineTime { get; private set; }
        private long __offlineTime;
        public long offlineTime { get { return __offlineTime; } set { __offlineTime = value; Has_offlineTime = true; } }

        public string vOpenId { get; set; }

        public global::ProtobufPacket._MsdkPlatData msdkPlatData { get; set; }

    }

    public partial class _LinkObj
    {
        public _LinkObj()
        {
            linkType = global::ProtobufPacket.LINKTYPE.LINK_NONE;
            downloadIndex = -1;
            paramsUint64 = new List<ulong>();
            paramsInt32 = new List<int>();
            paramsStr = new List<string>();
        }
        public bool Has_linkType { get; private set; }
        private global::ProtobufPacket.LINKTYPE __linkType;
        public global::ProtobufPacket.LINKTYPE linkType { get { return __linkType; } set { __linkType = value; Has_linkType = true; } }

        /// <summary>链接类型</summary>
        public bool Has_downloadIndex { get; private set; }
        private int __downloadIndex;
        public int downloadIndex { get { return __downloadIndex; } set { __downloadIndex = value; Has_downloadIndex = true; } }

        /// <summary>下载index</summary>
        public List<ulong> paramsUint64 { get; set; }

        /// <summary>通用参数int32</summary>
        public List<int> paramsInt32 { get; set; }

        /// <summary>通用参数int32</summary>
        public List<string> paramsStr { get; set; }

        public global::ProtobufPacket._MsdkPlatData paramsMsdkPlatData { get; set; }

    }

    public partial class _LinkObjs
    {
        public _LinkObjs()
        {
            objs = new List<global::ProtobufPacket._LinkObj>();
        }
        public List<global::ProtobufPacket._LinkObj> objs { get; set; }

    }

    /// <summary>支付通用参数</summary>
    public partial class _MIDAS_PAY_INFO
    {
        public string openKey { get; set; }

        public string pf { get; set; }

        public string pfKey { get; set; }

        public bool Has_zoneId { get; private set; }
        private int __zoneId;
        public int zoneId { get { return __zoneId; } set { __zoneId = value; Has_zoneId = true; } }

        public string offerId { get; set; }

        public string sessionId { get; set; }

        public string sessionType { get; set; }

        public bool Has_biosType { get; private set; }
        private int __biosType;
        public int biosType { get { return __biosType; } set { __biosType = value; Has_biosType = true; } }

        /// <summary>系统类型</summary>
        public string appKey { get; set; }

    }

    public partial class _DROP_ADDITION
    {
        public enum ADDITION_TYPE
        {
            QQLogin = 1,
            /// <summary> 手q登陆加成</summary>
            QQVip = 2,
            /// <summary> qqvip</summary>
            Augur = 3,
            /// <summary> 玄学运势</summary>
            CardLove = 4,
            /// <summary> 情缘</summary>
            AwardExtra = 5,
        }

        /// <summary> 集字活动</summary>
        public bool Has_addType { get; private set; }
        private global::ProtobufPacket._DROP_ADDITION.ADDITION_TYPE __addType;
        public global::ProtobufPacket._DROP_ADDITION.ADDITION_TYPE addType { get { return __addType; } set { __addType = value; Has_addType = true; } }

        /// <summary> 加成类型</summary>
        public bool Has_addCount { get; private set; }
        private int __addCount;
        public int addCount { get { return __addCount; } set { __addCount = value; Has_addCount = true; } }

        /// <summary> 加成数量</summary>
        public bool Has_augurOverFlow { get; private set; }
        private bool __augurOverFlow;
        public bool augurOverFlow { get { return __augurOverFlow; } set { __augurOverFlow = value; Has_augurOverFlow = true; } }

    }

    public partial class _DBNameSet
    {
        public _DBNameSet()
        {
            names = new List<string>();
            guids = new List<ulong>();
        }
        public List<string> names { get; set; }

        public List<ulong> guids { get; set; }

    }

    /// <summary>传输多条</summary>
    public partial class _multiterm_tf
    {
        public bool Has_index { get; private set; }
        private ulong __index;
        public ulong index { get { return __index; } set { __index = value; Has_index = true; } }

        public byte[] info { get; set; }

    }

    public partial class _ReportUserOnlineInfo
    {
        public string openid { get; set; }

        public string token { get; set; }

        public bool Has_onlinetime { get; private set; }
        private int __onlinetime;
        public int onlinetime { get { return __onlinetime; } set { __onlinetime = value; Has_onlinetime = true; } }

    }

    public partial class _ReportUserOnlineList
    {
        public _ReportUserOnlineList()
        {
            infolist = new List<global::ProtobufPacket._ReportUserOnlineInfo>();
        }
        public enum ReportType
        {
            Login = 1,
            Online = 2,
            Logout = 3,
        }

        public bool Has_reportType { get; private set; }
        private global::ProtobufPacket._ReportUserOnlineList.ReportType __reportType;
        public global::ProtobufPacket._ReportUserOnlineList.ReportType reportType { get { return __reportType; } set { __reportType = value; Has_reportType = true; } }

        public List<global::ProtobufPacket._ReportUserOnlineInfo> infolist { get; set; }

        public bool Has_platid { get; private set; }
        private int __platid;
        public int platid { get { return __platid; } set { __platid = value; Has_platid = true; } }

    }

    public partial class _DBAttrRecover
    {
        public bool Has_AttrType { get; private set; }
        private int __AttrType;
        public int AttrType { get { return __AttrType; } set { __AttrType = value; Has_AttrType = true; } }

        /// <summary>RECOVERTYPE</summary>
        public bool Has_Value { get; private set; }
        private int __Value;
        public int Value { get { return __Value; } set { __Value = value; Has_Value = true; } }

        public bool Has_NextRecoverTime { get; private set; }
        private long __NextRecoverTime;
        public long NextRecoverTime { get { return __NextRecoverTime; } set { __NextRecoverTime = value; Has_NextRecoverTime = true; } }

    }

    public partial class _DBMission
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

        public bool Has_State { get; private set; }
        private int __State;
        public int State { get { return __State; } set { __State = value; Has_State = true; } }

        public bool Has_PushTime { get; private set; }
        private long __PushTime;
        public long PushTime { get { return __PushTime; } set { __PushTime = value; Has_PushTime = true; } }

        /// <summary>任务发布时间</summary>
        public bool Has_CommitTime { get; private set; }
        private long __CommitTime;
        public long CommitTime { get { return __CommitTime; } set { __CommitTime = value; Has_CommitTime = true; } }

        /// <summary>任务提交时间</summary>
        public bool Has_Param { get; private set; }
        private int __Param;
        public int Param { get { return __Param; } set { __Param = value; Has_Param = true; } }

    }

    public partial class _DBMissions
    {
        public _DBMissions()
        {
            History = new List<global::ProtobufPacket._DBMission>();
            Daily = new List<global::ProtobufPacket._DBMission>();
        }
        public bool Has_Reputation { get; private set; }
        private int __Reputation;
        public int Reputation { get { return __Reputation; } set { __Reputation = value; Has_Reputation = true; } }

        /// <summary>知名度</summary>
        public global::ProtobufPacket._DBMission Main { get; set; }

        /// <summary>当前主任务</summary>
        public List<global::ProtobufPacket._DBMission> History { get; set; }

        /// <summary>完成过的任务</summary>
        public List<global::ProtobufPacket._DBMission> Daily { get; set; }

    }

    /// <summary>传闻</summary>
    public partial class _DBRumor
    {
        public _DBRumor()
        {
            nSubTime = new List<int>();
            VersionNum = -1;
        }
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

        public bool Has_Hot { get; private set; }
        private int __Hot;
        public int Hot { get { return __Hot; } set { __Hot = value; Has_Hot = true; } }

        public bool Has_State { get; private set; }
        private int __State;
        public int State { get { return __State; } set { __State = value; Has_State = true; } }

        /// <summary>状态</summary>
        public bool Has_NextTime { get; private set; }
        private long __NextTime;
        public long NextTime { get { return __NextTime; } set { __NextTime = value; Has_NextTime = true; } }

        /// <summary>下次增/减舆论时间</summary>
        public bool Has_ReduceOverTime { get; private set; }
        private long __ReduceOverTime;
        public long ReduceOverTime { get { return __ReduceOverTime; } set { __ReduceOverTime = value; Has_ReduceOverTime = true; } }

        /// <summary>挂机结束时间</summary>
        public bool Has_IsAward { get; private set; }
        private bool __IsAward;
        public bool IsAward { get { return __IsAward; } set { __IsAward = value; Has_IsAward = true; } }

        /// <summary>是否有挂机奖励待领取</summary>
        public bool Has_IsBurst { get; private set; }
        private bool __IsBurst;
        public bool IsBurst { get { return __IsBurst; } set { __IsBurst = value; Has_IsBurst = true; } }

        /// <summary>是否处于突发态</summary>
        public List<int> nSubTime { get; set; }

        /// <summary>第几个阶段减少舆论</summary>
        public bool Has_VersionNum { get; private set; }
        private int __VersionNum;
        public int VersionNum { get { return __VersionNum; } set { __VersionNum = value; Has_VersionNum = true; } }

        /// <summary>活动期号，默认-1</summary>
        public bool Has_IsNpcUnlock { get; private set; }
        private bool __IsNpcUnlock;
        public bool IsNpcUnlock { get { return __IsNpcUnlock; } set { __IsNpcUnlock = value; Has_IsNpcUnlock = true; } }

        /// <summary>npc解锁，仅在配置了npc条件下生效</summary>
        public bool Has_MultiNum { get; private set; }
        private int __MultiNum;
        public int MultiNum { get { return __MultiNum; } set { __MultiNum = value; Has_MultiNum = true; } }

    }

    public partial class _DBRumorData
    {
        public _DBRumorData()
        {
            Rumors = new List<global::ProtobufPacket._DBRumor>();
            ReduceRewardInfo = new List<byte[]>();
        }
        public List<global::ProtobufPacket._DBRumor> Rumors { get; set; }

        public bool Has_BurstNumToday { get; private set; }
        private int __BurstNumToday;
        public int BurstNumToday { get { return __BurstNumToday; } set { __BurstNumToday = value; Has_BurstNumToday = true; } }

        /// <summary>当日突发传闻数</summary>
        public bool Has_BurstNumReduceToday { get; private set; }
        private int __BurstNumReduceToday;
        public int BurstNumReduceToday { get { return __BurstNumReduceToday; } set { __BurstNumReduceToday = value; Has_BurstNumReduceToday = true; } }

        /// <summary>当日已解决突发传闻数</summary>
        public bool Has_BurstNumAward { get; private set; }
        private int __BurstNumAward;
        public int BurstNumAward { get { return __BurstNumAward; } set { __BurstNumAward = value; Has_BurstNumAward = true; } }

        /// <summary>待领取奖励（解决突发传闻额外奖励）</summary>
        public bool Has_LastBurstTime { get; private set; }
        private long __LastBurstTime;
        public long LastBurstTime { get { return __LastBurstTime; } set { __LastBurstTime = value; Has_LastBurstTime = true; } }

        /// <summary>上次突发传闻时间</summary>
        public List<byte[]> ReduceRewardInfo { get; set; }

        /// <summary>减少舆论奖励，同时只能存在一个</summary>
        public bool Has_FinishReduceNum { get; private set; }
        private int __FinishReduceNum;
        public int FinishReduceNum { get { return __FinishReduceNum; } set { __FinishReduceNum = value; Has_FinishReduceNum = true; } }

        /// <summary>已完成的减少舆论次数，仅在当前有正在减少舆论中的传闻时生效</summary>
        public bool Has_StopReduceFlag { get; private set; }
        private int __StopReduceFlag;
        public int StopReduceFlag { get { return __StopReduceFlag; } set { __StopReduceFlag = value; Has_StopReduceFlag = true; } }

    }

    public partial class _RumorReduceData
    {
        public _RumorReduceData()
        {
            ruleid = -1;
            dropnum = 1;
        }
        public bool Has_dropid { get; private set; }
        private int __dropid;
        public int dropid { get { return __dropid; } set { __dropid = value; Has_dropid = true; } }

        /// <summary>掉落id</summary>
        public bool Has_ruleid { get; private set; }
        private int __ruleid;
        public int ruleid { get { return __ruleid; } set { __ruleid = value; Has_ruleid = true; } }

        /// <summary>规则表id，如果处在活动期间生成奖励，则会产生id，否则为-1</summary>
        public bool Has_dropnum { get; private set; }
        private int __dropnum;
        public int dropnum { get { return __dropnum; } set { __dropnum = value; Has_dropnum = true; } }

    }

    /// <summary>
    /// <para> 虚拟聊天</para>
    /// <para>一个话题</para>
    /// </summary>
    public partial class _DBVChat
    {
        public _DBVChat()
        {
            OptionIds = new List<int>();
        }
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

        public bool Has_PushTime { get; private set; }
        private int __PushTime;
        public int PushTime { get { return __PushTime; } set { __PushTime = value; Has_PushTime = true; } }

        public bool Has_IsFinished { get; private set; }
        private bool __IsFinished;
        public bool IsFinished { get { return __IsFinished; } set { __IsFinished = value; Has_IsFinished = true; } }

        public bool Has_LastChatMsg { get; private set; }
        private int __LastChatMsg;
        public int LastChatMsg { get { return __LastChatMsg; } set { __LastChatMsg = value; Has_LastChatMsg = true; } }

        public List<int> OptionIds { get; set; }

        public bool Has_FinishTime { get; private set; }
        private int __FinishTime;
        public int FinishTime { get { return __FinishTime; } set { __FinishTime = value; Has_FinishTime = true; } }

    }

    public partial class _DBVChats
    {
        public _DBVChats()
        {
            VChats = new List<global::ProtobufPacket._DBVChat>();
            VoiceFlags = new List<int>();
        }
        public List<global::ProtobufPacket._DBVChat> VChats { get; set; }

        public List<int> VoiceFlags { get; set; }

    }

    /// <summary>朋友圈</summary>
    public partial class _DBCircle
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

        public bool Has_PushTime { get; private set; }
        private long __PushTime;
        public long PushTime { get { return __PushTime; } set { __PushTime = value; Has_PushTime = true; } }

        public bool Has_ReplyIdx { get; private set; }
        private int __ReplyIdx;
        public int ReplyIdx { get { return __ReplyIdx; } set { __ReplyIdx = value; Has_ReplyIdx = true; } }

        /// <summary>玩家回复</summary>
        public bool Has_AtTarget { get; private set; }
        private int __AtTarget;
        public int AtTarget { get { return __AtTarget; } set { __AtTarget = value; Has_AtTarget = true; } }

    }

    public partial class _DBCircles
    {
        public _DBCircles()
        {
            Circles = new List<global::ProtobufPacket._DBCircle>();
        }
        public List<global::ProtobufPacket._DBCircle> Circles { get; set; }

    }

    public partial class _DBFriend
    {
        public bool Has_FriendId { get; private set; }
        private long __FriendId;
        public long FriendId { get { return __FriendId; } set { __FriendId = value; Has_FriendId = true; } }

        /// <summary>好友Id</summary>
        public bool Has_Level { get; private set; }
        private int __Level;
        public int Level { get { return __Level; } set { __Level = value; Has_Level = true; } }

        /// <summary>等级</summary>
        public bool Has_HeadId { get; private set; }
        private int __HeadId;
        public int HeadId { get { return __HeadId; } set { __HeadId = value; Has_HeadId = true; } }

        /// <summary>头像</summary>
        public bool Has_UpTime { get; private set; }
        private long __UpTime;
        public long UpTime { get { return __UpTime; } set { __UpTime = value; Has_UpTime = true; } }

        /// <summary>上线时间</summary>
        public string Name { get; set; }

        /// <summary>名字</summary>
        public string appellation { get; set; }

        /// <summary>称呼</summary>
        public bool Has_outTime { get; private set; }
        private long __outTime;
        public long outTime { get { return __outTime; } set { __outTime = value; Has_outTime = true; } }

        /// <summary>下线时间</summary>
        public bool Has_IsAdvanceFace { get; private set; }
        private bool __IsAdvanceFace;
        public bool IsAdvanceFace { get { return __IsAdvanceFace; } set { __IsAdvanceFace = value; Has_IsAdvanceFace = true; } }

        /// <summary>选择卡面是否高级卡面</summary>
        public bool Has_CardStar { get; private set; }
        private int __CardStar;
        public int CardStar { get { return __CardStar; } set { __CardStar = value; Has_CardStar = true; } }

        /// <summary>形象卡星级</summary>
        public bool Has_TitleId { get; private set; }
        private int __TitleId;
        public int TitleId { get { return __TitleId; } set { __TitleId = value; Has_TitleId = true; } }

    }

    public partial class _DBFriendInfo
    {
        public _DBFriendInfo()
        {
            friend = new List<global::ProtobufPacket._DBFriend>();
            friendapply = new List<global::ProtobufPacket._DBFriend>();
            friendgiveid = new List<long>();
            friendgetid = new List<long>();
        }
        public List<global::ProtobufPacket._DBFriend> friend { get; set; }

        public List<global::ProtobufPacket._DBFriend> friendapply { get; set; }

        public List<long> friendgiveid { get; set; }

        /// <summary>好友赠送</summary>
        public List<long> friendgetid { get; set; }

        /// <summary>好友领取</summary>
        public bool Has_GetNum { get; private set; }
        private int __GetNum;
        public int GetNum { get { return __GetNum; } set { __GetNum = value; Has_GetNum = true; } }

        public bool Has_GiveNum { get; private set; }
        private int __GiveNum;
        public int GiveNum { get { return __GiveNum; } set { __GiveNum = value; Has_GiveNum = true; } }

    }

    public partial class _DBDrawCard
    {
        public bool Has_NomalTodayCount { get; private set; }
        private uint __NomalTodayCount;
        public uint NomalTodayCount { get { return __NomalTodayCount; } set { __NomalTodayCount = value; Has_NomalTodayCount = true; } }

        /// <summary>普通抽卡今日累计次数</summary>
        public bool Has_AdvanceTodayCount { get; private set; }
        private uint __AdvanceTodayCount;
        public uint AdvanceTodayCount { get { return __AdvanceTodayCount; } set { __AdvanceTodayCount = value; Has_AdvanceTodayCount = true; } }

        /// <summary>高级抽卡今日累计次数</summary>
        public bool Has_AdvanceAwardCount { get; private set; }
        private uint __AdvanceAwardCount;
        public uint AdvanceAwardCount { get { return __AdvanceAwardCount; } set { __AdvanceAwardCount = value; Has_AdvanceAwardCount = true; } }

        /// <summary>高级抽卡待累计次数  到一定值可领取奖励</summary>
        public bool Has_AdvanceBelowSRCount { get; private set; }
        private uint __AdvanceBelowSRCount;
        public uint AdvanceBelowSRCount { get { return __AdvanceBelowSRCount; } set { __AdvanceBelowSRCount = value; Has_AdvanceBelowSRCount = true; } }

        /// <summary>SR保底 未抽到SR及SR之上的累计次数 抽到了会重置</summary>
        public bool Has_AdvanceBelowSSRCount { get; private set; }
        private uint __AdvanceBelowSSRCount;
        public uint AdvanceBelowSSRCount { get { return __AdvanceBelowSSRCount; } set { __AdvanceBelowSSRCount = value; Has_AdvanceBelowSSRCount = true; } }

        /// <summary>SSR保底 未抽到SSR的累计次数 抽到了会重置</summary>
        public bool Has_NomalSwitchType { get; private set; }
        private int __NomalSwitchType;
        public int NomalSwitchType { get { return __NomalSwitchType; } set { __NomalSwitchType = value; Has_NomalSwitchType = true; } }

        /// <summary>普通卡池切换类型</summary>
        public bool Has_IsNewAdvancePool { get; private set; }
        private bool __IsNewAdvancePool;
        public bool IsNewAdvancePool { get { return __IsNewAdvancePool; } set { __IsNewAdvancePool = value; Has_IsNewAdvancePool = true; } }

        /// <summary>是否在新手卡池</summary>
        public bool Has_IsNomalDrawFirst { get; private set; }
        private bool __IsNomalDrawFirst;
        public bool IsNomalDrawFirst { get { return __IsNomalDrawFirst; } set { __IsNomalDrawFirst = value; Has_IsNomalDrawFirst = true; } }

        /// <summary>是否是新手第一普通抽 （普通卡池）</summary>
        public bool Has_NewAdvanceDrawCount { get; private set; }
        private uint __NewAdvanceDrawCount;
        public uint NewAdvanceDrawCount { get { return __NewAdvanceDrawCount; } set { __NewAdvanceDrawCount = value; Has_NewAdvanceDrawCount = true; } }

        /// <summary>新手钻石卡池抽卡累计次数</summary>
        public bool Has_AdvanceUpSSRLoopPoolCount { get; private set; }
        private uint __AdvanceUpSSRLoopPoolCount;
        public uint AdvanceUpSSRLoopPoolCount { get { return __AdvanceUpSSRLoopPoolCount; } set { __AdvanceUpSSRLoopPoolCount = value; Has_AdvanceUpSSRLoopPoolCount = true; } }

        /// <summary>累计必须进入ssr卡池次数 ActivitySSRPoolCount到了一定数据 累计加一</summary>
        public bool Has_AdvanceUpSSRPoolCount { get; private set; }
        private uint __AdvanceUpSSRPoolCount;
        public uint AdvanceUpSSRPoolCount { get { return __AdvanceUpSSRPoolCount; } set { __AdvanceUpSSRPoolCount = value; Has_AdvanceUpSSRPoolCount = true; } }

        /// <summary>累计进入ssr卡池次数</summary>
        public bool Has_ActivityTodayCount { get; private set; }
        private uint __ActivityTodayCount;
        public uint ActivityTodayCount { get { return __ActivityTodayCount; } set { __ActivityTodayCount = value; Has_ActivityTodayCount = true; } }

        /// <summary>活动卡池抽卡累计次数</summary>
        public bool Has_ActivitySSRLoopPoolCount { get; private set; }
        private uint __ActivitySSRLoopPoolCount;
        public uint ActivitySSRLoopPoolCount { get { return __ActivitySSRLoopPoolCount; } set { __ActivitySSRLoopPoolCount = value; Has_ActivitySSRLoopPoolCount = true; } }

        /// <summary>累计必须进入ssr卡池次数 ActivitySSRPoolCount到了一定数据 累计加一</summary>
        public bool Has_ActivitySSRPoolCount { get; private set; }
        private uint __ActivitySSRPoolCount;
        public uint ActivitySSRPoolCount { get { return __ActivitySSRPoolCount; } set { __ActivitySSRPoolCount = value; Has_ActivitySSRPoolCount = true; } }

        /// <summary>累计进入ssr卡池次数</summary>
        public bool Has_ActivityBelowSRCount { get; private set; }
        private uint __ActivityBelowSRCount;
        public uint ActivityBelowSRCount { get { return __ActivityBelowSRCount; } set { __ActivityBelowSRCount = value; Has_ActivityBelowSRCount = true; } }

        /// <summary>SR保底 未抽到SR及SR之上的累计次数 抽到了会重置</summary>
        public bool Has_ActivityBelowSSRCount { get; private set; }
        private uint __ActivityBelowSSRCount;
        public uint ActivityBelowSSRCount { get { return __ActivityBelowSSRCount; } set { __ActivityBelowSSRCount = value; Has_ActivityBelowSSRCount = true; } }

        /// <summary>SSR保底 未抽到SSR的累计次数 抽到了会重置</summary>
        public bool Has_AdvanceUpTodayCount { get; private set; }
        private uint __AdvanceUpTodayCount;
        public uint AdvanceUpTodayCount { get { return __AdvanceUpTodayCount; } set { __AdvanceUpTodayCount = value; Has_AdvanceUpTodayCount = true; } }

        /// <summary>新手钻石卡池抽卡累计次数</summary>
        public bool Has_AdvanceUpId { get; private set; }
        private uint __AdvanceUpId;
        public uint AdvanceUpId { get { return __AdvanceUpId; } set { __AdvanceUpId = value; Has_AdvanceUpId = true; } }

        /// <summary>对应活动表id</summary>
        public bool Has_ActivityId { get; private set; }
        private uint __ActivityId;
        public uint ActivityId { get { return __ActivityId; } set { __ActivityId = value; Has_ActivityId = true; } }

        /// <summary>对应活动表id</summary>
        public bool Has_OptionalTodayCount { get; private set; }
        private uint __OptionalTodayCount;
        public uint OptionalTodayCount { get { return __OptionalTodayCount; } set { __OptionalTodayCount = value; Has_OptionalTodayCount = true; } }

        /// <summary>自选高级抽卡今日累计次数</summary>
        public bool Has_OptionalAwardCount { get; private set; }
        private uint __OptionalAwardCount;
        public uint OptionalAwardCount { get { return __OptionalAwardCount; } set { __OptionalAwardCount = value; Has_OptionalAwardCount = true; } }

        /// <summary>自选高级抽卡待累计次数  到一定值可领取奖励</summary>
        public bool Has_OptionalBelowSRCount { get; private set; }
        private uint __OptionalBelowSRCount;
        public uint OptionalBelowSRCount { get { return __OptionalBelowSRCount; } set { __OptionalBelowSRCount = value; Has_OptionalBelowSRCount = true; } }

        /// <summary>SR保底 未抽到SR及SR之上的累计次数 抽到了会重置</summary>
        public bool Has_OptionalBelowSSRCount { get; private set; }
        private uint __OptionalBelowSSRCount;
        public uint OptionalBelowSSRCount { get { return __OptionalBelowSSRCount; } set { __OptionalBelowSSRCount = value; Has_OptionalBelowSSRCount = true; } }

        /// <summary>SSR保底 未抽到SSR的累计次数 抽到了会重置</summary>
        public bool Has_OptionalUpSSRLoopPoolCount { get; private set; }
        private uint __OptionalUpSSRLoopPoolCount;
        public uint OptionalUpSSRLoopPoolCount { get { return __OptionalUpSSRLoopPoolCount; } set { __OptionalUpSSRLoopPoolCount = value; Has_OptionalUpSSRLoopPoolCount = true; } }

        /// <summary>累计必须进入ssr卡池次数 ActivitySSRPoolCount到了一定数据 累计加一</summary>
        public bool Has_OptionalUpSSRPoolCount { get; private set; }
        private uint __OptionalUpSSRPoolCount;
        public uint OptionalUpSSRPoolCount { get { return __OptionalUpSSRPoolCount; } set { __OptionalUpSSRPoolCount = value; Has_OptionalUpSSRPoolCount = true; } }

        /// <summary>累计进入ssr卡池次数</summary>
        public global::ProtobufPacket._OptionalDrawCard OptionalDrawCardInfo { get; set; }

        /// <summary>自选高级抽卡信息</summary>
        public bool Has_OptionalUpEndTime { get; private set; }
        private ulong __OptionalUpEndTime;
        public ulong OptionalUpEndTime { get { return __OptionalUpEndTime; } set { __OptionalUpEndTime = value; Has_OptionalUpEndTime = true; } }

    }

    public partial class _OptionalDrawCard
    {
        public bool Has_OpenState { get; private set; }
        private int __OpenState;
        public int OpenState { get { return __OpenState; } set { __OpenState = value; Has_OpenState = true; } }

        public bool Has_UpCardId { get; private set; }
        private int __UpCardId;
        public int UpCardId { get { return __UpCardId; } set { __UpCardId = value; Has_UpCardId = true; } }

    }

    /// <summary>=================数据库存储 修改需要考虑兼容=================</summary>
    public partial class _DBCommonShop
    {
        public _DBCommonShop()
        {
            GoodsId = new List<int>();
            BuyTimes = new List<int>();
        }
        public bool Has_WeekRefreshTime { get; private set; }
        private long __WeekRefreshTime;
        public long WeekRefreshTime { get { return __WeekRefreshTime; } set { __WeekRefreshTime = value; Has_WeekRefreshTime = true; } }

        public bool Has_DayRefreshTime { get; private set; }
        private long __DayRefreshTime;
        public long DayRefreshTime { get { return __DayRefreshTime; } set { __DayRefreshTime = value; Has_DayRefreshTime = true; } }

        public bool Has_MonthRefreshTime { get; private set; }
        private int __MonthRefreshTime;
        public int MonthRefreshTime { get { return __MonthRefreshTime; } set { __MonthRefreshTime = value; Has_MonthRefreshTime = true; } }

        public List<int> GoodsId { get; set; }

        public List<int> BuyTimes { get; set; }

    }

    /// <summary>=================数据库存储 修改需要考虑兼容=================</summary>
    public partial class _DBMails
    {
        public _DBMails()
        {
            mailRecvGuid = new List<ulong>();
            Mails = new List<global::ProtobufPacket._MailNew>();
            AutoMailIds = new List<int>();
        }
        /// <summary>repeated _Mail Mails = 1; 废弃</summary>
        public List<ulong> mailRecvGuid { get; set; }

        /// <summary>已经接收过的邮件记录</summary>
        public List<global::ProtobufPacket._MailNew> Mails { get; set; }

        public List<int> AutoMailIds { get; set; }

        /// <summary>已发送给自己的automail</summary>
        public bool Has_LastRecvMailGuid { get; private set; }
        private ulong __LastRecvMailGuid;
        public ulong LastRecvMailGuid { get { return __LastRecvMailGuid; } set { __LastRecvMailGuid = value; Has_LastRecvMailGuid = true; } }

    }

    [SLua.CustomLuaClass]
    public partial class _DBAlbumCell
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

        public bool Has_IsAward { get; private set; }
        private bool __IsAward;
        public bool IsAward { get { return __IsAward; } set { __IsAward = value; Has_IsAward = true; } }

        public bool Has_IsActive { get; private set; }
        private bool __IsActive;
        public bool IsActive { get { return __IsActive; } set { __IsActive = value; Has_IsActive = true; } }

        /// <summary>是否激活</summary>
        public bool Has_IsShareAward { get; private set; }
        private bool __IsShareAward;
        public bool IsShareAward { get { return __IsShareAward; } set { __IsShareAward = value; Has_IsShareAward = true; } }

    }

    [SLua.CustomLuaClass]
    public partial class _DBAlbum
    {
        public bool Has_Level { get; private set; }
        private int __Level;
        public int Level { get { return __Level; } set { __Level = value; Has_Level = true; } }

        public bool Has_Exp { get; private set; }
        private int __Exp;
        public int Exp { get { return __Exp; } set { __Exp = value; Has_Exp = true; } }

        public bool Has_IsLock { get; private set; }
        private bool __IsLock;
        public bool IsLock { get { return __IsLock; } set { __IsLock = value; Has_IsLock = true; } }

    }

    public partial class _DBMonthCard
    {
        public _DBMonthCard()
        {
            MonthCardSurplusDay = 0;
            IsReceive = false;
            IsResetChouKaTip = false;
        }
        public bool Has_MonthCardId { get; private set; }
        private int __MonthCardId;
        public int MonthCardId { get { return __MonthCardId; } set { __MonthCardId = value; Has_MonthCardId = true; } }

        public bool Has_MonthCardSurplusDay { get; private set; }
        private int __MonthCardSurplusDay;
        public int MonthCardSurplusDay { get { return __MonthCardSurplusDay; } set { __MonthCardSurplusDay = value; Has_MonthCardSurplusDay = true; } }

        public bool Has_IsReceive { get; private set; }
        private bool __IsReceive;
        public bool IsReceive { get { return __IsReceive; } set { __IsReceive = value; Has_IsReceive = true; } }

        public bool Has_IsResetChouKaTip { get; private set; }
        private bool __IsResetChouKaTip;
        public bool IsResetChouKaTip { get { return __IsResetChouKaTip; } set { __IsResetChouKaTip = value; Has_IsResetChouKaTip = true; } }

    }

    public partial class _DBNotice
    {
        public bool Has_Type { get; private set; }
        private int __Type;
        public int Type { get { return __Type; } set { __Type = value; Has_Type = true; } }

        public bool Has_CreateTime { get; private set; }
        private long __CreateTime;
        public long CreateTime { get { return __CreateTime; } set { __CreateTime = value; Has_CreateTime = true; } }

        public string Content { get; set; }

    }

    public partial class _DBNoticeCacheRoutineData
    {
        public _DBNoticeCacheRoutineData()
        {
            infos = new List<global::ProtobufPacket._DBNotice>();
        }
        public List<global::ProtobufPacket._DBNotice> infos { get; set; }

    }

    /// <summary>城市任务</summary>
    public partial class _DBCityTaskData
    {
        public _DBCityTaskData()
        {
            taskTime = 0;
            cardid = new List<int>();
            taskTimeType = 3;
        }
        public bool Has_taskId { get; private set; }
        private int __taskId;
        public int taskId { get { return __taskId; } set { __taskId = value; Has_taskId = true; } }

        /// <summary>任务id</summary>
        public bool Has_taskTime { get; private set; }
        private long __taskTime;
        public long taskTime { get { return __taskTime; } set { __taskTime = value; Has_taskTime = true; } }

        /// <summary>任务完成时间</summary>
        public List<int> cardid { get; set; }

        /// <summary>提交的cardid</summary>
        public bool Has_taskTimeType { get; private set; }
        private int __taskTimeType;
        public int taskTimeType { get { return __taskTimeType; } set { __taskTimeType = value; Has_taskTimeType = true; } }

    }

    /// <summary>
    /// <para>城市副本挂机奖励</para>
    /// <para>@spec:lua</para>
    /// </summary>
    [SLua.CustomLuaClass]
    public partial class _CityCopyHookData
    {
        public bool Has_itemId { get; private set; }
        private int __itemId;
        public int itemId { get { return __itemId; } set { __itemId = value; Has_itemId = true; } }

        /// <summary>道具id</summary>
        public bool Has_itemNum { get; private set; }
        private int __itemNum;
        public int itemNum { get { return __itemNum; } set { __itemNum = value; Has_itemNum = true; } }

    }

    public partial class _DBCityWorkData
    {
        public _DBCityWorkData()
        {
            getGift = -1;
            RefreshTime = 0;
            taskData = new List<global::ProtobufPacket._DBCityTaskData>();
            overTaskNum = 0;
            awardData = new List<global::ProtobufPacket._CityCopyHookData>();
        }
        public bool Has_cityId { get; private set; }
        private int __cityId;
        public int cityId { get { return __cityId; } set { __cityId = value; Has_cityId = true; } }

        /// <summary>建筑id</summary>
        public bool Has_characterId { get; private set; }
        private int __characterId;
        public int characterId { get { return __characterId; } set { __characterId = value; Has_characterId = true; } }

        /// <summary>今天喜欢的调查员id</summary>
        public bool Has_getGift { get; private set; }
        private int __getGift;
        public int getGift { get { return __getGift; } set { __getGift = value; Has_getGift = true; } }

        /// <summary>礼物是否领取</summary>
        public bool Has_RefreshTime { get; private set; }
        private long __RefreshTime;
        public long RefreshTime { get { return __RefreshTime; } set { __RefreshTime = value; Has_RefreshTime = true; } }

        /// <summary>刷新时间</summary>
        public List<global::ProtobufPacket._DBCityTaskData> taskData { get; set; }

        /// <summary>renw</summary>
        public bool Has_overTaskNum { get; private set; }
        private int __overTaskNum;
        public int overTaskNum { get { return __overTaskNum; } set { __overTaskNum = value; Has_overTaskNum = true; } }

        /// <summary>
        /// <para>完成任务次数</para>
        /// <para>副本相关</para>
        /// </summary>
        public bool Has_initialTime { get; private set; }
        private long __initialTime;
        public long initialTime { get { return __initialTime; } set { __initialTime = value; Has_initialTime = true; } }

        /// <summary>初始时间（重置后初始时间也重置）</summary>
        public bool Has_currentTime { get; private set; }
        private long __currentTime;
        public long currentTime { get { return __currentTime; } set { __currentTime = value; Has_currentTime = true; } }

        /// <summary>当前已进行时间（单位秒）</summary>
        public bool Has_curFloorId { get; private set; }
        private int __curFloorId;
        public int curFloorId { get { return __curFloorId; } set { __curFloorId = value; Has_curFloorId = true; } }

        /// <summary>当前已完成的层Id</summary>
        public List<global::ProtobufPacket._CityCopyHookData> awardData { get; set; }

        /// <summary>累积挂机奖励</summary>
        public bool Has_floorDescFlag { get; private set; }
        private int __floorDescFlag;
        public int floorDescFlag { get { return __floorDescFlag; } set { __floorDescFlag = value; Has_floorDescFlag = true; } }

        /// <summary>楼层描述获得标记位，1官方，2真相</summary>
        public bool Has_fastCount { get; private set; }
        private int __fastCount;
        public int fastCount { get { return __fastCount; } set { __fastCount = value; Has_fastCount = true; } }

        /// <summary>快速领取的次数</summary>
        public bool Has_tipFlag { get; private set; }
        private bool __tipFlag;
        public bool tipFlag { get { return __tipFlag; } set { __tipFlag = value; Has_tipFlag = true; } }

        /// <summary>未领取常规奖励提示标记</summary>
        public bool Has_versionNum { get; private set; }
        private int __versionNum;
        public int versionNum { get { return __versionNum; } set { __versionNum = value; Has_versionNum = true; } }

        /// <summary>城市副本期号</summary>
        public bool Has_totalfastCount { get; private set; }
        private int __totalfastCount;
        public int totalfastCount { get { return __totalfastCount; } set { __totalfastCount = value; Has_totalfastCount = true; } }

    }

    public partial class _DBCityWork
    {
        public _DBCityWork()
        {
            cityWorkData = new List<global::ProtobufPacket._DBCityWorkData>();
            rumorid = new List<int>();
        }
        public List<global::ProtobufPacket._DBCityWorkData> cityWorkData { get; set; }

        public List<int> rumorid { get; set; }

    }

    public partial class _DBNPC
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

        /// <summary>NpcId</summary>
        public bool Has_Exp { get; private set; }
        private int __Exp;
        public int Exp { get { return __Exp; } set { __Exp = value; Has_Exp = true; } }

        /// <summary>经验-好感度</summary>
        public bool Has_Level { get; private set; }
        private int __Level;
        public int Level { get { return __Level; } set { __Level = value; Has_Level = true; } }

        /// <summary>等级-好感度等级</summary>
        public bool Has_IsGained { get; private set; }
        private bool __IsGained;
        public bool IsGained { get { return __IsGained; } set { __IsGained = value; Has_IsGained = true; } }

        /// <summary>是否已获得</summary>
        public bool Has_Status { get; private set; }
        private int __Status;
        public int Status { get { return __Status; } set { __Status = value; Has_Status = true; } }

        /// <summary>历史状态</summary>
        public bool Has_isGift { get; private set; }
        private bool __isGift;
        public bool isGift { get { return __isGift; } set { __isGift = value; Has_isGift = true; } }

    }

    public partial class _TaskData
    {
        public bool Has_taskId { get; private set; }
        private int __taskId;
        public int taskId { get { return __taskId; } set { __taskId = value; Has_taskId = true; } }

        /// <summary>任务id</summary>
        public bool Has_taskType { get; private set; }
        private int __taskType;
        public int taskType { get { return __taskType; } set { __taskType = value; Has_taskType = true; } }

        /// <summary>任务状态 未完成  可领取  已领取</summary>
        public bool Has_taskNum1 { get; private set; }
        private int __taskNum1;
        public int taskNum1 { get { return __taskNum1; } set { __taskNum1 = value; Has_taskNum1 = true; } }

        /// <summary>完成的数据</summary>
        public bool Has_taskNum2 { get; private set; }
        private int __taskNum2;
        public int taskNum2 { get { return __taskNum2; } set { __taskNum2 = value; Has_taskNum2 = true; } }

    }

    public partial class _TaskEvenyAwardData
    {
        public bool Has_id { get; private set; }
        private int __id;
        public int id { get { return __id; } set { __id = value; Has_id = true; } }

        /// <summary>任务id</summary>
        public bool Has_bGet { get; private set; }
        private bool __bGet;
        public bool bGet { get { return __bGet; } set { __bGet = value; Has_bGet = true; } }

    }

    /// <summary>任务系统</summary>
    public partial class _DBTASK
    {
        public _DBTASK()
        {
            taskList = new List<global::ProtobufPacket._TaskData>();
            awardList = new List<global::ProtobufPacket._TaskEvenyAwardData>();
            taskGroupVersionList = new List<global::ProtobufPacket._TaskGroupVersionData>();
        }
        public bool Has_dayValue { get; private set; }
        private int __dayValue;
        public int dayValue { get { return __dayValue; } set { __dayValue = value; Has_dayValue = true; } }

        public bool Has_weekValue { get; private set; }
        private int __weekValue;
        public int weekValue { get { return __weekValue; } set { __weekValue = value; Has_weekValue = true; } }

        public bool Has_mainValue { get; private set; }
        private int __mainValue;
        public int mainValue { get { return __mainValue; } set { __mainValue = value; Has_mainValue = true; } }

        public List<global::ProtobufPacket._TaskData> taskList { get; set; }

        public List<global::ProtobufPacket._TaskEvenyAwardData> awardList { get; set; }

        /// <summary>活跃度信息</summary>
        public bool Has_weekRefreshTime { get; private set; }
        private long __weekRefreshTime;
        public long weekRefreshTime { get { return __weekRefreshTime; } set { __weekRefreshTime = value; Has_weekRefreshTime = true; } }

        public bool Has_dayRefreshTime { get; private set; }
        private long __dayRefreshTime;
        public long dayRefreshTime { get { return __dayRefreshTime; } set { __dayRefreshTime = value; Has_dayRefreshTime = true; } }

        public List<global::ProtobufPacket._TaskGroupVersionData> taskGroupVersionList { get; set; }

    }

    /// <summary>任务组 存储结构</summary>
    public partial class _TaskGroupVersionData
    {
        public bool Has_taskGroupId { get; private set; }
        private int __taskGroupId;
        public int taskGroupId { get { return __taskGroupId; } set { __taskGroupId = value; Has_taskGroupId = true; } }

        /// <summary>任务组id</summary>
        public bool Has_versionNum { get; private set; }
        private int __versionNum;
        public int versionNum { get { return __versionNum; } set { __versionNum = value; Has_versionNum = true; } }

        /// <summary>任务组 期号</summary>
        public bool Has_runningLoginTime { get; private set; }
        private long __runningLoginTime;
        public long runningLoginTime { get { return __runningLoginTime; } set { __runningLoginTime = value; Has_runningLoginTime = true; } }

    }

    /// <summary>主城互动</summary>
    public partial class _DBMainCity
    {
        public _DBMainCity()
        {
            isClick = new List<bool>();
        }
        public bool Has_time { get; private set; }
        private long __time;
        public long time { get { return __time; } set { __time = value; Has_time = true; } }

        public List<bool> isClick { get; set; }

        public bool Has_addTime { get; private set; }
        private long __addTime;
        public long addTime { get { return __addTime; } set { __addTime = value; Has_addTime = true; } }

        public bool Has_isReward { get; private set; }
        private bool __isReward;
        public bool isReward { get { return __isReward; } set { __isReward = value; Has_isReward = true; } }

    }

    /// <summary>cdk兑换码返回</summary>
    public partial class _CDKeyData
    {
        public _CDKeyData()
        {
            ItemIds = new List<int>();
            ItemNums = new List<int>();
        }
        public string CDKey { get; set; }

        public bool Has_RetCode { get; private set; }
        private int __RetCode;
        public int RetCode { get { return __RetCode; } set { __RetCode = value; Has_RetCode = true; } }

        public List<int> ItemIds { get; set; }

        public List<int> ItemNums { get; set; }

    }

    /// <summary> 签到信息</summary>
    public partial class _DBSign
    {
        public bool Has_m_TotalSign { get; private set; }
        private int __m_TotalSign;
        public int m_TotalSign { get { return __m_TotalSign; } set { __m_TotalSign = value; Has_m_TotalSign = true; } }

        public bool Has_m_IsSign { get; private set; }
        private bool __m_IsSign;
        public bool m_IsSign { get { return __m_IsSign; } set { __m_IsSign = value; Has_m_IsSign = true; } }

    }

    /// <summary>是否开启功能</summary>
    public partial class _DBFunction
    {
        public bool Has_id { get; private set; }
        private int __id;
        public int id { get { return __id; } set { __id = value; Has_id = true; } }

        public bool Has_isopen { get; private set; }
        private bool __isopen;
        public bool isopen { get { return __isopen; } set { __isopen = value; Has_isopen = true; } }

    }

    /// <summary> 签到信息</summary>
    public partial class _DBPushState
    {
        public bool Has_IsPushStamina { get; private set; }
        private bool __IsPushStamina;
        public bool IsPushStamina { get { return __IsPushStamina; } set { __IsPushStamina = value; Has_IsPushStamina = true; } }

        public bool Has_IsPushInlineShop { get; private set; }
        private bool __IsPushInlineShop;
        public bool IsPushInlineShop { get { return __IsPushInlineShop; } set { __IsPushInlineShop = value; Has_IsPushInlineShop = true; } }

        public bool Has_IsPushRumorHottes { get; private set; }
        private bool __IsPushRumorHottes;
        public bool IsPushRumorHottes { get { return __IsPushRumorHottes; } set { __IsPushRumorHottes = value; Has_IsPushRumorHottes = true; } }

        public bool Has_IsPushGetStamina { get; private set; }
        private bool __IsPushGetStamina;
        public bool IsPushGetStamina { get { return __IsPushGetStamina; } set { __IsPushGetStamina = value; Has_IsPushGetStamina = true; } }

        public bool Has_IsPushCityTask { get; private set; }
        private bool __IsPushCityTask;
        public bool IsPushCityTask { get { return __IsPushCityTask; } set { __IsPushCityTask = value; Has_IsPushCityTask = true; } }

        public bool Has_IsOpenNoDisturbing { get; private set; }
        private bool __IsOpenNoDisturbing;
        public bool IsOpenNoDisturbing { get { return __IsOpenNoDisturbing; } set { __IsOpenNoDisturbing = value; Has_IsOpenNoDisturbing = true; } }

    }

    /// <summary> sdk推送协议</summary>
    public partial class _SDKPushExtraInfo
    {
        public string key { get; set; }

        public string value { get; set; }

    }

    public partial class _SDKPush
    {
        public _SDKPush()
        {
            ExtraInfo = new List<global::ProtobufPacket._SDKPushExtraInfo>();
        }
        public bool Has_AppId { get; private set; }
        private int __AppId;
        public int AppId { get { return __AppId; } set { __AppId = value; Has_AppId = true; } }

        public bool Has_PlatformId { get; private set; }
        private int __PlatformId;
        public int PlatformId { get { return __PlatformId; } set { __PlatformId = value; Has_PlatformId = true; } }

        public string Title { get; set; }

        public bool Has_Promode { get; private set; }
        private bool __Promode;
        public bool Promode { get { return __Promode; } set { __Promode = value; Has_Promode = true; } }

        public bool Has_PushType { get; private set; }
        private int __PushType;
        public int PushType { get { return __PushType; } set { __PushType = value; Has_PushType = true; } }

        public string Content { get; set; }

        public List<global::ProtobufPacket._SDKPushExtraInfo> ExtraInfo { get; set; }

        public string ReceiveBundleId { get; set; }

        public bool Has_SendType { get; private set; }
        private int __SendType;
        public int SendType { get { return __SendType; } set { __SendType = value; Has_SendType = true; } }

        public bool Has_StartTime { get; private set; }
        private long __StartTime;
        public long StartTime { get { return __StartTime; } set { __StartTime = value; Has_StartTime = true; } }

        public string UserId { get; set; }

        public string ServerId { get; set; }

        public string RoleId { get; set; }

        public bool Has_Time { get; private set; }
        private long __Time;
        public long Time { get { return __Time; } set { __Time = value; Has_Time = true; } }

    }

    /// <summary>通用参数 idip 客服工具使用</summary>
    public partial class _CommomParam
    {
        public _CommomParam()
        {
            common_int32_1 = new List<int>();
            common_int32_2 = new List<int>();
            common_int64_1 = new List<long>();
            common_uint64_1 = new List<ulong>();
            common_string_1 = new List<string>();
        }
        public List<int> common_int32_1 { get; set; }

        public List<int> common_int32_2 { get; set; }

        public List<long> common_int64_1 { get; set; }

        public List<ulong> common_uint64_1 { get; set; }

        public List<string> common_string_1 { get; set; }

    }

    /// <summary>反垃圾</summary>
    public partial class _AntiSpamData
    {
        public bool Has_AntiType { get; private set; }
        private int __AntiType;
        public int AntiType { get { return __AntiType; } set { __AntiType = value; Has_AntiType = true; } }

        /// <summary> 1-创建角色改名 2-游戏中改名（预留）3-玩家签名 4-调查员备注名</summary>
        public bool Has_AntiGuid { get; private set; }
        private ulong __AntiGuid;
        public ulong AntiGuid { get { return __AntiGuid; } set { __AntiGuid = value; Has_AntiGuid = true; } }

        public string Content { get; set; }

        public bool Has_PlayerId { get; private set; }
        private int __PlayerId;
        public int PlayerId { get { return __PlayerId; } set { __PlayerId = value; Has_PlayerId = true; } }

        /// <summary>创建角色完成前 只有playerid 没有guid</summary>
        public bool Has_PlayerGuid { get; private set; }
        private ulong __PlayerGuid;
        public ulong PlayerGuid { get { return __PlayerGuid; } set { __PlayerGuid = value; Has_PlayerGuid = true; } }

        public bool Has_RequestTime { get; private set; }
        private long __RequestTime;
        public long RequestTime { get { return __RequestTime; } set { __RequestTime = value; Has_RequestTime = true; } }

        /// <summary>请求时间</summary>
        public bool Has_Param { get; private set; }
        private int __Param;
        public int Param { get { return __Param; } set { __Param = value; Has_Param = true; } }

        /// <summary>
        /// <para>参数</para>
        /// <para>取名检测需要以下信息记录日志</para>
        /// </summary>
        public bool Has_bios { get; private set; }
        private int __bios;
        public int bios { get { return __bios; } set { __bios = value; Has_bios = true; } }

        /// <summary>手机系统类型</summary>
        public global::ProtobufPacket._MSDK msdk { get; set; }

        public string uuid { get; set; }

        /// <summary>每台手机唯一uuid</summary>
        public string accountname { get; set; }

    }

    public partial class _AntiSpamRetData
    {
        public _AntiSpamRetData()
        {
            Labels = new List<global::ProtobufPacket._AntiSpamLabel>();
        }
        public bool Has_Code { get; private set; }
        private int __Code;
        public int Code { get { return __Code; } set { __Code = value; Has_Code = true; } }

        /// <summary> 0-成功 90001 通用错误码</summary>
        public string Message { get; set; }

        /// <summary> 消息提示</summary>
        public bool Has_CheckResult { get; private set; }
        private int __CheckResult;
        public int CheckResult { get { return __CheckResult; } set { __CheckResult = value; Has_CheckResult = true; } }

        /// <summary> 检测结果 0-通过 1-疑似 2-不通过</summary>
        public string TaskId { get; set; }

        /// <summary> 任务流水号</summary>
        public List<global::ProtobufPacket._AntiSpamLabel> Labels { get; set; }

    }

    public partial class _AntiSpamLabel
    {
        public bool Has_lable { get; private set; }
        private int __lable;
        public int lable { get { return __lable; } set { __lable = value; Has_lable = true; } }

        /// <summary>异常类别 100-违禁 200-色情 300-谩骂 400-广告 500-恐爆 600-涉政 详见反垃圾文档定义</summary>
        public bool Has_level { get; private set; }
        private int __level;
        public int level { get { return __level; } set { __level = value; Has_level = true; } }

        /// <summary>检测级别 0-确认 1-不确认</summary>
        public string score { get; set; }

    }

    /// <summary> 福利-累积登录功能</summary>
    public partial class _FuliAddSign
    {
        public _FuliAddSign()
        {
            receivedRewardIds = new List<int>();
        }
        public bool Has_actId { get; private set; }
        private int __actId;
        public int actId { get { return __actId; } set { __actId = value; Has_actId = true; } }

        /// <summary>当前记录的活动id  对应activity表的活动id</summary>
        public bool Has_versionNum { get; private set; }
        private int __versionNum;
        public int versionNum { get { return __versionNum; } set { __versionNum = value; Has_versionNum = true; } }

        /// <summary> 当前存储的累积签到 所对应的期号</summary>
        public bool Has_lastSignTime { get; private set; }
        private int __lastSignTime;
        public int lastSignTime { get { return __lastSignTime; } set { __lastSignTime = value; Has_lastSignTime = true; } }

        /// <summary>上次签到时间  Ans时间戳 秒时间</summary>
        public bool Has_signedNum { get; private set; }
        private int __signedNum;
        public int signedNum { get { return __signedNum; } set { __signedNum = value; Has_signedNum = true; } }

        /// <summary>累积已经签到的次数</summary>
        public List<int> receivedRewardIds { get; set; }

        /// <summary>已经领取的累积签到奖励Id FuliAddSignAward表的Id</summary>
        public bool Has_finish { get; private set; }
        private bool __finish;
        public bool finish { get { return __finish; } set { __finish = value; Has_finish = true; } }

        /// <summary>活动是否已经结束 （时间已经过了，或者 奖励已经全部领取完成）</summary>
        public bool Has_lastReceiveRewardAnsTime { get; private set; }
        private long __lastReceiveRewardAnsTime;
        public long lastReceiveRewardAnsTime { get { return __lastReceiveRewardAnsTime; } set { __lastReceiveRewardAnsTime = value; Has_lastReceiveRewardAnsTime = true; } }

    }

    public partial class _TitleList
    {
        public bool Has_id { get; private set; }
        private int __id;
        public int id { get { return __id; } set { __id = value; Has_id = true; } }

        /// <summary>称号id</summary>
        public bool Has_time { get; private set; }
        private int __time;
        public int time { get { return __time; } set { __time = value; Has_time = true; } }

        /// <summary>获取称号的时间</summary>
        public bool Has_isNew { get; private set; }
        private bool __isNew;
        public bool isNew { get { return __isNew; } set { __isNew = value; Has_isNew = true; } }

        /// <summary>是不是新获取的称号(玩家是否在获取此称号后打开过称号界面)</summary>
        public bool Has_remainingTime { get; private set; }
        private long __remainingTime;
        public long remainingTime { get { return __remainingTime; } set { __remainingTime = value; Has_remainingTime = true; } }

    }

    public partial class _Title
    {
        public _Title()
        {
            titleList = new List<global::ProtobufPacket._TitleList>();
        }
        public bool Has_titleId { get; private set; }
        private int __titleId;
        public int titleId { get { return __titleId; } set { __titleId = value; Has_titleId = true; } }

        /// <summary>选择的称号id</summary>
        public List<global::ProtobufPacket._TitleList> titleList { get; set; }

    }

    public partial class _CardFrameList
    {
        public bool Has_id { get; private set; }
        private int __id;
        public int id { get { return __id; } set { __id = value; Has_id = true; } }

        /// <summary>卡框id</summary>
        public bool Has_time { get; private set; }
        private long __time;
        public long time { get { return __time; } set { __time = value; Has_time = true; } }

        /// <summary>获取卡框的时间</summary>
        public bool Has_isNew { get; private set; }
        private bool __isNew;
        public bool isNew { get { return __isNew; } set { __isNew = value; Has_isNew = true; } }

        /// <summary>是不是新获取的卡框</summary>
        public bool Has_remainingTime { get; private set; }
        private long __remainingTime;
        public long remainingTime { get { return __remainingTime; } set { __remainingTime = value; Has_remainingTime = true; } }

    }

    public partial class _CardFrame
    {
        public _CardFrame()
        {
            cardFrameList = new List<global::ProtobufPacket._CardFrameList>();
        }
        public bool Has_cardFrameId { get; private set; }
        private int __cardFrameId;
        public int cardFrameId { get { return __cardFrameId; } set { __cardFrameId = value; Has_cardFrameId = true; } }

        /// <summary>选择的卡框id</summary>
        public List<global::ProtobufPacket._CardFrameList> cardFrameList { get; set; }

    }

    /// <summary>好友赠送</summary>
    public partial class _FriednGive
    {
        public bool Has_isGive { get; private set; }
        private bool __isGive;
        public bool isGive { get { return __isGive; } set { __isGive = value; Has_isGive = true; } }

        /// <summary>类型是否赠送 废弃</summary>
        public bool Has_isGet { get; private set; }
        private bool __isGet;
        public bool isGet { get { return __isGet; } set { __isGet = value; Has_isGet = true; } }

        /// <summary>是否领取</summary>
        public bool Has_isGetGift { get; private set; }
        private bool __isGetGift;
        public bool isGetGift { get { return __isGetGift; } set { __isGetGift = value; Has_isGetGift = true; } }

        /// <summary>是否获得馈赠 废弃</summary>
        public bool Has_friendPrice { get; private set; }
        private int __friendPrice;
        public int friendPrice { get { return __friendPrice; } set { __friendPrice = value; Has_friendPrice = true; } }

        /// <summary>友情值</summary>
        public bool Has_friendId { get; private set; }
        private long __friendId;
        public long friendId { get { return __friendId; } set { __friendId = value; Has_friendId = true; } }

        /// <summary>好友ID</summary>
        public bool Has_giveTime { get; private set; }
        private long __giveTime;
        public long giveTime { get { return __giveTime; } set { __giveTime = value; Has_giveTime = true; } }

    }

    /// <summary>好友Routine</summary>
    public partial class _LoadFriendInfo
    {
        public _LoadFriendInfo()
        {
            gifts = new List<global::ProtobufPacket._FriednGive>();
        }
        public bool Has_guid { get; private set; }
        private long __guid;
        public long guid { get { return __guid; } set { __guid = value; Has_guid = true; } }

        public bool Has_lastGiveTime { get; private set; }
        private long __lastGiveTime;
        public long lastGiveTime { get { return __lastGiveTime; } set { __lastGiveTime = value; Has_lastGiveTime = true; } }

        public List<global::ProtobufPacket._FriednGive> gifts { get; set; }

    }

    public partial class _LoadFriendInfos
    {
        public _LoadFriendInfos()
        {
            infos = new List<global::ProtobufPacket._LoadFriendInfo>();
            modify = new List<ulong>();
            del = new List<ulong>();
        }
        public List<global::ProtobufPacket._LoadFriendInfo> infos { get; set; }

        public List<ulong> modify { get; set; }

        public List<ulong> del { get; set; }

    }

    /// <summary>心动进度</summary>
    public partial class _HeartBeatProgress
    {
        public _HeartBeatProgress()
        {
            QuestId = new List<int>();
            QuestNum = new List<int>();
            QuestState = new List<int>();
        }
        public bool Has_begutc { get; private set; }
        private int __begutc;
        public int begutc { get { return __begutc; } set { __begutc = value; Has_begutc = true; } }

        /// <summary>
        /// <para>开始时间 用于上线清除数据</para>
        /// <para>基本信息</para>
        /// </summary>
        public bool Has_HeartBeatId { get; private set; }
        private int __HeartBeatId;
        public int HeartBeatId { get { return __HeartBeatId; } set { __HeartBeatId = value; Has_HeartBeatId = true; } }

        /// <summary>玩家选择的地点</summary>
        public bool Has_HeartBeatActionId { get; private set; }
        private int __HeartBeatActionId;
        public int HeartBeatActionId { get { return __HeartBeatActionId; } set { __HeartBeatActionId = value; Has_HeartBeatActionId = true; } }

        /// <summary>HeartBeatAction tab id</summary>
        public bool Has_HeartBeatStartActionId { get; private set; }
        private int __HeartBeatStartActionId;
        public int HeartBeatStartActionId { get { return __HeartBeatStartActionId; } set { __HeartBeatStartActionId = value; Has_HeartBeatStartActionId = true; } }

        /// <summary>心动功能开始剧情id</summary>
        public List<int> QuestId { get; set; }

        /// <summary>问题id</summary>
        public bool Has_HeartBeatFinishActionId { get; private set; }
        private int __HeartBeatFinishActionId;
        public int HeartBeatFinishActionId { get { return __HeartBeatFinishActionId; } set { __HeartBeatFinishActionId = value; Has_HeartBeatFinishActionId = true; } }

        /// <summary>心动时刻结束剧情id</summary>
        public bool Has_HeartBeatPos { get; private set; }
        private int __HeartBeatPos;
        public int HeartBeatPos { get { return __HeartBeatPos; } set { __HeartBeatPos = value; Has_HeartBeatPos = true; } }

        /// <summary>
        /// <para>心动时刻点击位置触发剧情</para>
        /// <para>进度相关</para>
        /// </summary>
        public List<int> QuestNum { get; set; }

        /// <summary>问题选项</summary>
        public List<int> QuestState { get; set; }

    }

    public partial class _HeartBeat
    {
        public bool Has_Count { get; private set; }
        private int __Count;
        public int Count { get { return __Count; } set { __Count = value; Has_Count = true; } }

        /// <summary>今天进行心动玩法的次数</summary>
        public bool Has_UseCount { get; private set; }
        private int __UseCount;
        public int UseCount { get { return __UseCount; } set { __UseCount = value; Has_UseCount = true; } }

        /// <summary>今天使用心动玩法道具增加的次数</summary>
        public global::ProtobufPacket._HeartBeatProgress Progress { get; set; }

        /// <summary>心动进度</summary>
        public bool Has_HeartBeatRewardNumber { get; private set; }
        private int __HeartBeatRewardNumber;
        public int HeartBeatRewardNumber { get { return __HeartBeatRewardNumber; } set { __HeartBeatRewardNumber = value; Has_HeartBeatRewardNumber = true; } }

    }

    /// <summary>礼物交互</summary>
    public partial class _Interflow
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

    }

    /// <summary>公众号文章</summary>
    [SLua.CustomLuaClass]
    public partial class _DBArticle
    {
        public _DBArticle()
        {
            ForwardIdx = -1;
        }
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

        /// <summary>文章Id</summary>
        public bool Has_PushTime { get; private set; }
        private long __PushTime;
        public long PushTime { get { return __PushTime; } set { __PushTime = value; Has_PushTime = true; } }

        /// <summary>推送时间</summary>
        public bool Has_ForwardIdx { get; private set; }
        private int __ForwardIdx;
        public int ForwardIdx { get { return __ForwardIdx; } set { __ForwardIdx = value; Has_ForwardIdx = true; } }

        /// <summary>转发的第几个</summary>
        public bool Has_IsRead { get; private set; }
        private bool __IsRead;
        public bool IsRead { get { return __IsRead; } set { __IsRead = value; Has_IsRead = true; } }

    }

    public partial class _DBArticles
    {
        public _DBArticles()
        {
            Articles = new List<global::ProtobufPacket._DBArticle>();
        }
        public List<global::ProtobufPacket._DBArticle> Articles { get; set; }

    }

    /// <summary>礼物</summary>
    public partial class _Gift
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

        /// <summary>礼物</summary>
        public bool Has_State { get; private set; }
        private int __State;
        public int State { get { return __State; } set { __State = value; Has_State = true; } }

    }

    /// <summary>活动</summary>
    public partial class _ActivityInfo
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

        public string Name { get; set; }

        /// <summary>前端tab页签 是否显示</summary>
        public bool Has_IsShowInTab { get; private set; }
        private int __IsShowInTab;
        public int IsShowInTab { get { return __IsShowInTab; } set { __IsShowInTab = value; Has_IsShowInTab = true; } }

        /// <summary>前端tab页签 是否显示</summary>
        public bool Has_Priority { get; private set; }
        private int __Priority;
        public int Priority { get { return __Priority; } set { __Priority = value; Has_Priority = true; } }

        /// <summary>显示顺序</summary>
        public bool Has_RedPoint_Type { get; private set; }
        private int __RedPoint_Type;
        public int RedPoint_Type { get { return __RedPoint_Type; } set { __RedPoint_Type = value; Has_RedPoint_Type = true; } }

        /// <summary>红点类型： 红点类型： 0代表一次性提示；1代表每天首次登陆5点刷新；2代表每次登陆</summary>
        public bool Has_IsCycle_Time { get; private set; }
        private bool __IsCycle_Time;
        public bool IsCycle_Time { get { return __IsCycle_Time; } set { __IsCycle_Time = value; Has_IsCycle_Time = true; } }

        /// <summary>是否为 周期性活动时间</summary>
        public string ShowStartTime { get; set; }

        /// <summary>展示开始年月日时分秒：*年月日时分秒；例如“*20210511235800””</summary>
        public string ShowEndTime { get; set; }

        /// <summary>展示结束年月日时分秒：*年月日时分秒；例如“*20210511235800””</summary>
        public string TrueStartTime_Date { get; set; }

        /// <summary>活动实际开始年月日：*年月日；例如“*20210511”</summary>
        public string TrueStartTime_Clock { get; set; }

        /// <summary>活动实际开始时分秒：*时分秒；例如“*235800”</summary>
        public string TrueEndTime_Date { get; set; }

        /// <summary>活动实际结束年月日：*年月日；例如“*20210511”</summary>
        public string TrueEndTime_Clock { get; set; }

        /// <summary>活动实际结束时分秒：*时分秒；例如“*235800”</summary>
        public bool Has_StyleType { get; private set; }
        private int __StyleType;
        public int StyleType { get { return __StyleType; } set { __StyleType = value; Has_StyleType = true; } }

        /// <summary>UI控件的 控制器索引类型</summary>
        public bool Has_Act_Group { get; private set; }
        private int __Act_Group;
        public int Act_Group { get { return __Act_Group; } set { __Act_Group = value; Has_Act_Group = true; } }

        /// <summary>活动分组</summary>
        public bool Has_Act_Type { get; private set; }
        private int __Act_Type;
        public int Act_Type { get { return __Act_Type; } set { __Act_Type = value; Has_Act_Type = true; } }

        /// <summary>活动类型: 活动类型: 1早期旧类型体力领取 2早期旧类型新生签到 3代表活动大图 4代表活动列表</summary>
        public bool Has_RelationId { get; private set; }
        private int __RelationId;
        public int RelationId { get { return __RelationId; } set { __RelationId = value; Has_RelationId = true; } }

        /// <summary>关联表的id</summary>
        public bool Has_ActEnum { get; private set; }
        private int __ActEnum;
        public int ActEnum { get { return __ActEnum; } set { __ActEnum = value; Has_ActEnum = true; } }

    }

    /// <summary>传输购买道具订单</summary>
    public partial class _RechageOrder_tf
    {
        public _RechageOrder_tf()
        {
            orders = new List<byte[]>();
            modify = new List<string>();
            del = new List<string>();
        }
        public List<byte[]> orders { get; set; }

        /// <summary>增加的订单</summary>
        public List<string> modify { get; set; }

        public List<string> del { get; set; }

    }

    /// <summary>入库订单结构，不可随意更改/////////////////////////////////////////////////////</summary>
    public partial class _RECHARGEORDER
    {
        public _RECHARGEORDER()
        {
            playerGuid = 0xffffffffffffffff;
            ordertype = -1;
            m_connId = -1;
        }
        /// <summary>sdk内容</summary>
        public string userIdentity { get; set; }

        /// <summary>（必）账号ID</summary>
        public long appId { get; set; }

        /// <summary>（必）应用在onesdk平台的唯一标识</summary>
        public long generalOrder { get; set; }

        /// <summary>（必）通用平台订单号</summary>
        public long t { get; set; }

        /// <summary>（必）时间</summary>
        public string appOrder { get; set; }

        /// <summary>（必）游戏自定义订单号</summary>
        public long amount { get; set; }

        /// <summary>（必）实际支付金额</summary>
        public string payStatus { get; set; }

        /// <summary>（必）支付结果：0-失败；1-成功；2-取消订阅</summary>
        public string agent { get; set; }

        /// <summary>（必）渠道名的缩写</summary>
        public string agentId { get; set; }

        /// <summary>（必）渠道id</summary>
        public string agentOrder { get; set; }

        /// <summary> 渠道产生的订单号，不存在则不传</summary>
        public long bookAmount { get; set; }

        /// <summary>（必）下单金额（单位：分）</summary>
        public int serverId { get; set; }

        /// <summary> 游戏服ID，传递后参与签名，不传则不参与签名，只有>0才会传递并参与签名</summary>
        public string ext { get; set; }

        /// <summary> 游戏透传的信息，非空才会参与签名</summary>
        public int supplement { get; set; }

        /// <summary> 是否补单，1表示订单通知时补单，正常支付通知没有此字段</summary>
        public string expireTime { get; set; }

        /// <summary> 过期时间</summary>
        public int sandbox { get; set; }

        /// <summary> 是否为沙盒支付：1-是；0-否；</summary>
        public string agentAdParam { get; set; }

        /// <summary> 渠道广告参数，目前只有投放OPPO广告的游戏有此字段</summary>
        public string mainChannelId { get; set; }

        /// <summary>
        /// <para>（必）主渠道ID</para>
        /// <para>非sdk内容</para>
        /// </summary>
        public ulong playerGuid { get; set; }

        /// <summary>角色GUID</summary>
        public int goodId { get; set; }

        /// <summary>商品id</summary>
        public bool Has_ordertype { get; private set; }
        private int __ordertype;
        public int ordertype { get { return __ordertype; } set { __ordertype = value; Has_ordertype = true; } }

        public bool Has_m_connId { get; private set; }
        private long __m_connId;
        public long m_connId { get { return __m_connId; } set { __m_connId = value; Has_m_connId = true; } }

        public string payType { get; set; }

    }

    /// <summary>入库临时订单，修改需要注意兼容//////////////////////////////////////////////////</summary>
    public partial class _RECHARGEORDER_BRIEF
    {
        public bool Has_createTime { get; private set; }
        private long __createTime;
        public long createTime { get { return __createTime; } set { __createTime = value; Has_createTime = true; } }

        /// <summary> 生成订单时间（毫秒）</summary>
        public string appOrderId { get; set; }

    }

    /// <summary>入库临时订单，修改需要注意兼容//////////////////////////////////////////////////</summary>
    public partial class _RECHARGEORDER_BRIEF_tf
    {
        public _RECHARGEORDER_BRIEF_tf()
        {
            briefList = new List<global::ProtobufPacket._RECHARGEORDER_BRIEF>();
        }
        public List<global::ProtobufPacket._RECHARGEORDER_BRIEF> briefList { get; set; }

    }

    /// <summary>入库完整充值信息，本结构不可修改////////////////////////////////////////////////</summary>
    public partial class _RECHARGE_ROUTINE_sm
    {
        public global::ProtobufPacket._RECHARGEORDER_BRIEF_tf briefList { get; set; }

        public global::ProtobufPacket._RechageOrder_tf orderList { get; set; }

    }

    public partial class _BUY_GOODS_RET
    {
        public bool Has_ret { get; private set; }
        private int __ret;
        public int ret { get { return __ret; } set { __ret = value; Has_ret = true; } }

        public string msg { get; set; }

        public string token { get; set; }

        public string url_params { get; set; }

    }

    public partial class _DBFRISTGIFTINFO
    {
        public bool Has_ReceivedDay { get; private set; }
        private int __ReceivedDay;
        public int ReceivedDay { get { return __ReceivedDay; } set { __ReceivedDay = value; Has_ReceivedDay = true; } }

        public bool Has_NoReceivedDay { get; private set; }
        private int __NoReceivedDay;
        public int NoReceivedDay { get { return __NoReceivedDay; } set { __NoReceivedDay = value; Has_NoReceivedDay = true; } }

        public bool Has_IsOpenFristGift { get; private set; }
        private bool __IsOpenFristGift;
        public bool IsOpenFristGift { get { return __IsOpenFristGift; } set { __IsOpenFristGift = value; Has_IsOpenFristGift = true; } }

        public bool Has_IsTodayFristGift { get; private set; }
        private bool __IsTodayFristGift;
        public bool IsTodayFristGift { get { return __IsTodayFristGift; } set { __IsTodayFristGift = value; Has_IsTodayFristGift = true; } }

        public bool Has_IsPlayAction { get; private set; }
        private bool __IsPlayAction;
        public bool IsPlayAction { get { return __IsPlayAction; } set { __IsPlayAction = value; Has_IsPlayAction = true; } }

        public bool Has_ActiveFristGiftDay { get; private set; }
        private int __ActiveFristGiftDay;
        public int ActiveFristGiftDay { get { return __ActiveFristGiftDay; } set { __ActiveFristGiftDay = value; Has_ActiveFristGiftDay = true; } }

    }

    /// <summary>累计充值</summary>
    public partial class _FuliRecharge
    {
        public _FuliRecharge()
        {
            LongFuliRechargeScore = 0;
            LimitFuliRechargeScore = 0;
            LongFuliRechargeReceivedIds = new List<int>();
            LimitFuliRechargeReceivedIds = new List<int>();
        }
        public bool Has_LongFuliRechargeScore { get; private set; }
        private int __LongFuliRechargeScore;
        public int LongFuliRechargeScore { get { return __LongFuliRechargeScore; } set { __LongFuliRechargeScore = value; Has_LongFuliRechargeScore = true; } }

        /// <summary>累计充值 常驻积分</summary>
        public bool Has_LimitFuliRechargeScore { get; private set; }
        private int __LimitFuliRechargeScore;
        public int LimitFuliRechargeScore { get { return __LimitFuliRechargeScore; } set { __LimitFuliRechargeScore = value; Has_LimitFuliRechargeScore = true; } }

        /// <summary>累计充值 限时积分</summary>
        public List<int> LongFuliRechargeReceivedIds { get; set; }

        /// <summary>常驻累计基金 领取记录 存储的是FuliRecharge表的id</summary>
        public List<int> LimitFuliRechargeReceivedIds { get; set; }

    }

    public partial class _DBGiftRecharge
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

        public bool Has_beginTime { get; private set; }
        private long __beginTime;
        public long beginTime { get { return __beginTime; } set { __beginTime = value; Has_beginTime = true; } }

        public bool Has_IsSoldOut { get; private set; }
        private bool __IsSoldOut;
        public bool IsSoldOut { get { return __IsSoldOut; } set { __IsSoldOut = value; Has_IsSoldOut = true; } }

    }

    /// <summary>礼包期号</summary>
    public partial class _DBRechargeGiftIssue
    {
        public bool Has_rechargeGiftId { get; private set; }
        private int __rechargeGiftId;
        public int rechargeGiftId { get { return __rechargeGiftId; } set { __rechargeGiftId = value; Has_rechargeGiftId = true; } }

        public bool Has_rechargeGiftIssue { get; private set; }
        private int __rechargeGiftIssue;
        public int rechargeGiftIssue { get { return __rechargeGiftIssue; } set { __rechargeGiftIssue = value; Has_rechargeGiftIssue = true; } }

    }

    public partial class _DBShop
    {
        public bool Has_Id { get; private set; }
        private int __Id;
        public int Id { get { return __Id; } set { __Id = value; Has_Id = true; } }

        public bool Has_beginTime { get; private set; }
        private long __beginTime;
        public long beginTime { get { return __beginTime; } set { __beginTime = value; Has_beginTime = true; } }

        public bool Has_IsSoldOut { get; private set; }
        private bool __IsSoldOut;
        public bool IsSoldOut { get { return __IsSoldOut; } set { __IsSoldOut = value; Has_IsSoldOut = true; } }

        public bool Has_shopIssue { get; private set; }
        private int __shopIssue;
        public int shopIssue { get { return __shopIssue; } set { __shopIssue = value; Has_shopIssue = true; } }

    }

    public partial class _DBGiveGift
    {
        public bool Has_characterId { get; private set; }
        private int __characterId;
        public int characterId { get { return __characterId; } set { __characterId = value; Has_characterId = true; } }

        public bool Has_giveCount { get; private set; }
        private int __giveCount;
        public int giveCount { get { return __giveCount; } set { __giveCount = value; Has_giveCount = true; } }

    }

    /// <summary>万象之庭</summary>
    public partial class _DBDivination
    {
        public _DBDivination()
        {
            GetRewardId = new List<int>();
        }
        public bool Has_HexagramId { get; private set; }
        private int __HexagramId;
        public int HexagramId { get { return __HexagramId; } set { __HexagramId = value; Has_HexagramId = true; } }

        public bool Has_TodayDivinationCount { get; private set; }
        private int __TodayDivinationCount;
        public int TodayDivinationCount { get { return __TodayDivinationCount; } set { __TodayDivinationCount = value; Has_TodayDivinationCount = true; } }

        public bool Has_DivinationNum { get; private set; }
        private int __DivinationNum;
        public int DivinationNum { get { return __DivinationNum; } set { __DivinationNum = value; Has_DivinationNum = true; } }

        public bool Has_MusicDivinationNum { get; private set; }
        private int __MusicDivinationNum;
        public int MusicDivinationNum { get { return __MusicDivinationNum; } set { __MusicDivinationNum = value; Has_MusicDivinationNum = true; } }

        public List<int> GetRewardId { get; set; }

        /// <summary>万象之庭累计奖励领取状态</summary>
        public bool Has_DivinationIssue { get; private set; }
        private int __DivinationIssue;
        public int DivinationIssue { get { return __DivinationIssue; } set { __DivinationIssue = value; Has_DivinationIssue = true; } }

        public bool Has_TodayDivinationId { get; private set; }
        private int __TodayDivinationId;
        public int TodayDivinationId { get { return __TodayDivinationId; } set { __TodayDivinationId = value; Has_TodayDivinationId = true; } }

        public bool Has_IsActivate { get; private set; }
        private bool __IsActivate;
        public bool IsActivate { get { return __IsActivate; } set { __IsActivate = value; Has_IsActivate = true; } }

        public bool Has_IsCompensation { get; private set; }
        private bool __IsCompensation;
        public bool IsCompensation { get { return __IsCompensation; } set { __IsCompensation = value; Has_IsCompensation = true; } }

    }

    /// <summary>传输购买道具订单</summary>
    public partial class _RechageOrder_hw_tf
    {
        public _RechageOrder_hw_tf()
        {
            orders = new List<byte[]>();
            modify = new List<string>();
            del = new List<string>();
        }
        public List<byte[]> orders { get; set; }

        /// <summary>增加的订单</summary>
        public List<string> modify { get; set; }

        public List<string> del { get; set; }

    }

    /// <summary>海外入库订单结构，不可随意更改/////////////////////////////////////////////////////</summary>
    public partial class _RECHARGEORDER_HW
    {
        public _RECHARGEORDER_HW()
        {
            playerGuid = 0xffffffffffffffff;
            m_connId = -1;
            ordertype = -1;
        }
        /// <summary>sdk内容 Y 代表sdk服务器必给的 N代表不一定给</summary>
        public string uid { get; set; }

        /// <summary>Y 账号ID</summary>
        public long appId { get; set; }

        /// <summary>Y 应用在onesdk平台的唯一标识</summary>
        public string sdkOrderId { get; set; }

        /// <summary>Y 通用平台订单号</summary>
        public string subscribeSdkOrderId { get; set; }

        /// <summary>N 如果该值存在，说明这个是根据之前的⼀个订阅订单，⾃动⽣成的订单</summary>
        public long t { get; set; }

        /// <summary>Y 时间</summary>
        public string appOrderId { get; set; }

        /// <summary>N 游戏自定义订单号</summary>
        public long moneyAmount { get; set; }

        /// <summary>Y 实际支付金额</summary>
        public string moneyCurrency { get; set; }

        /// <summary>Y 货币种类</summary>
        public long orderAmount { get; set; }

        /// <summary>Y SDK 服务器后台配置的⾦额</summary>
        public string orderCurrency { get; set; }

        /// <summary>Y SDK 服务器后台配置的币种</summary>
        public int serverId { get; set; }

        /// <summary>Y 游戏服务器 ID</summary>
        public string roleId { get; set; }

        /// <summary>Y 游戏角色id</summary>
        public long payType { get; set; }

        /// <summary>Y 充值平台类型具体查看文档</summary>
        public string productId { get; set; }

        /// <summary>Y 商品ID</summary>
        public string productName { get; set; }

        /// <summary>N 商品名称</summary>
        public string channelName { get; set; }

        /// <summary>N 渠道名称</summary>
        public string channelId { get; set; }

        /// <summary>N 渠道id</summary>
        public string channelOrderId { get; set; }

        /// <summary>Y 渠道产生的订单号，不存在则不传</summary>
        public int sandbox { get; set; }

        /// <summary>Y 是否为沙盒支付：1-是；0-否；</summary>
        public int subscribe { get; set; }

        /// <summary>Y 该商品是否为订阅商品。如果是订阅商品，不论 unsubscribe 取何值，subscribe 始终为 true</summary>
        public int unsubscribe { get; set; }

        /// <summary>N 当 subscribe 为 true 时，unsubscribe 的值才需要考虑</summary>
        public long platformId { get; set; }

        /// <summary>Y 系统类型 2安卓3ios</summary>
        public string appext { get; set; }

        /// <summary> 游戏透传的信息，非空才会参与签名</summary>
        public string sdkext { get; set; }

        /// <summary>
        /// <para> 游戏透传的信息，非空才会参与签名</para>
        /// <para>非sdk内容</para>
        /// </summary>
        public ulong playerGuid { get; set; }

        /// <summary>角色GUID</summary>
        public int goodId { get; set; }

        /// <summary>商品id</summary>
        public bool Has_m_connId { get; private set; }
        private long __m_connId;
        public long m_connId { get { return __m_connId; } set { __m_connId = value; Has_m_connId = true; } }

        public bool Has_ordertype { get; private set; }
        private int __ordertype;
        public int ordertype { get { return __ordertype; } set { __ordertype = value; Has_ordertype = true; } }

    }

    /// <summary>店铺招牌主题</summary>
    public partial class _DBSignboardTheme
    {
        public _DBSignboardTheme()
        {
            Signboards = new List<global::ProtobufPacket.SignboardInfo>();
            Decalss = new List<global::ProtobufPacket.DecalsInfo>();
        }
        public bool Has_ThemeId { get; private set; }
        private int __ThemeId;
        public int ThemeId { get { return __ThemeId; } set { __ThemeId = value; Has_ThemeId = true; } }

        /// <summary>主题Id</summary>
        public List<global::ProtobufPacket.SignboardInfo> Signboards { get; set; }

        /// <summary>主题招牌</summary>
        public List<global::ProtobufPacket.DecalsInfo> Decalss { get; set; }

        /// <summary>主题贴纸</summary>
        public bool Has_IsAward { get; private set; }
        private bool __IsAward;
        public bool IsAward { get { return __IsAward; } set { __IsAward = value; Has_IsAward = true; } }

    }

    /// <summary>店铺招牌状态</summary>
    public partial class SignboardInfo
    {
        public bool Has_SignboardId { get; private set; }
        private int __SignboardId;
        public int SignboardId { get { return __SignboardId; } set { __SignboardId = value; Has_SignboardId = true; } }

        /// <summary>招牌</summary>
        public bool Has_IsActivate { get; private set; }
        private int __IsActivate;
        public int IsActivate { get { return __IsActivate; } set { __IsActivate = value; Has_IsActivate = true; } }

    }

    /// <summary>店铺贴纸状态</summary>
    public partial class DecalsInfo
    {
        public bool Has_DecalsId { get; private set; }
        private int __DecalsId;
        public int DecalsId { get { return __DecalsId; } set { __DecalsId = value; Has_DecalsId = true; } }

        /// <summary>贴纸Id</summary>
        public bool Has_IsActivate { get; private set; }
        private int __IsActivate;
        public int IsActivate { get { return __IsActivate; } set { __IsActivate = value; Has_IsActivate = true; } }

    }

    /// <summary>店铺招牌</summary>
    [SLua.CustomLuaClass]
    public partial class _DBSignboardPalette
    {
        public _DBSignboardPalette()
        {
            curDecals = new List<global::ProtobufPacket._Decals>();
        }
        public bool Has_curSignboardId { get; private set; }
        private int __curSignboardId;
        public int curSignboardId { get { return __curSignboardId; } set { __curSignboardId = value; Has_curSignboardId = true; } }

        /// <summary>当前招牌</summary>
        public List<global::ProtobufPacket._Decals> curDecals { get; set; }

    }

    /// <summary>店铺画板</summary>
    [SLua.CustomLuaClass]
    public partial class _DBThemePalette
    {
        public _DBThemePalette()
        {
            curDecals = new List<global::ProtobufPacket._Decals>();
        }
        public bool Has_themeId { get; private set; }
        private int __themeId;
        public int themeId { get { return __themeId; } set { __themeId = value; Has_themeId = true; } }

        /// <summary>主题Id</summary>
        public List<global::ProtobufPacket._Decals> curDecals { get; set; }

    }

    /// <summary>店铺贴纸</summary>
    [SLua.CustomLuaClass]
    public partial class _Decals
    {
        public bool Has_DecalsId { get; private set; }
        private int __DecalsId;
        public int DecalsId { get { return __DecalsId; } set { __DecalsId = value; Has_DecalsId = true; } }

        /// <summary>贴纸Id</summary>
        public bool Has_DecalsX { get; private set; }
        private int __DecalsX;
        public int DecalsX { get { return __DecalsX; } set { __DecalsX = value; Has_DecalsX = true; } }

        /// <summary>贴纸X</summary>
        public bool Has_DecalsY { get; private set; }
        private int __DecalsY;
        public int DecalsY { get { return __DecalsY; } set { __DecalsY = value; Has_DecalsY = true; } }

        /// <summary>贴纸Y</summary>
        public bool Has_DecalsZ { get; private set; }
        private int __DecalsZ;
        public int DecalsZ { get { return __DecalsZ; } set { __DecalsZ = value; Has_DecalsZ = true; } }

    }

    /// <summary>入库临时订单，修改需要注意兼容//////////////////////////////////////////////////</summary>
    public partial class _RECHARGEORDER_HW_BRIEF
    {
        public bool Has_createTime { get; private set; }
        private long __createTime;
        public long createTime { get { return __createTime; } set { __createTime = value; Has_createTime = true; } }

        /// <summary> 生成订单时间（毫秒）</summary>
        public string appOrderId { get; set; }

    }

    /// <summary>入库临时订单，修改需要注意兼容//////////////////////////////////////////////////</summary>
    public partial class _RECHARGEORDER_HW_BRIEF_tf
    {
        public _RECHARGEORDER_HW_BRIEF_tf()
        {
            briefList = new List<global::ProtobufPacket._RECHARGEORDER_HW_BRIEF>();
        }
        public List<global::ProtobufPacket._RECHARGEORDER_HW_BRIEF> briefList { get; set; }

    }

    /// <summary>入库完整充值信息，本结构不可修改////////////////////////////////////////////////</summary>
    public partial class _RECHARGE_HW_ROUTINE_sm
    {
        public global::ProtobufPacket._RECHARGEORDER_HW_BRIEF_tf briefList { get; set; }

        public global::ProtobufPacket._RechageOrder_hw_tf orderList { get; set; }

    }

    /// <summary>
    /// <para>-------------------------- 转盘抽奖 db------------------------ 开始//</para>
    /// <para>转盘奖品状态信息</para>
    /// </summary>
    public partial class _DBLotteryData
    {
        public _DBLotteryData()
        {
            poolItemIds = new List<int>();
            poolTypes = new List<int>();
            rewardTypes = new List<int>();
            rewardIds = new List<int>();
            rewardNums = new List<int>();
            rewardParams = new List<int>();
            percents = new List<float>();
            leftTimes = new List<int>();
            prioritys = new List<int>();
        }
        public bool Has_lotteryId { get; private set; }
        private int __lotteryId;
        public int lotteryId { get { return __lotteryId; } set { __lotteryId = value; Has_lotteryId = true; } }

        /// <summary>当前对应的转盘抽奖表 lotteryId</summary>
        public bool Has_versionNum { get; private set; }
        private int __versionNum;
        public int versionNum { get { return __versionNum; } set { __versionNum = value; Has_versionNum = true; } }

        /// <summary> 当前期号</summary>
        public bool Has_activitytId { get; private set; }
        private int __activitytId;
        public int activitytId { get { return __activitytId; } set { __activitytId = value; Has_activitytId = true; } }

        /// <summary>当前对应活动表的activityId</summary>
        public bool Has_stage { get; private set; }
        private int __stage;
        public int stage { get { return __stage; } set { __stage = value; Has_stage = true; } }

        /// <summary>当前阶段</summary>
        public bool Has_drawTimes { get; private set; }
        private int __drawTimes;
        public int drawTimes { get { return __drawTimes; } set { __drawTimes = value; Has_drawTimes = true; } }

        /// <summary>当前活动 已经抽奖的次数</summary>
        public List<int> poolItemIds { get; set; }

        /// <summary>FuliLotteryPoolItem表对应的id</summary>
        public List<int> poolTypes { get; set; }

        /// <summary>池子类型0普通池子 1稀有池子</summary>
        public List<int> rewardTypes { get; set; }

        /// <summary>物品类型(0普通奖励道具、 1时装、2剧情道具、3招牌道具)</summary>
        public List<int> rewardIds { get; set; }

        /// <summary>礼物关键id  可能为itemid、时装skinId</summary>
        public List<int> rewardNums { get; set; }

        /// <summary>礼物个数  比如奖励为  钻石*100</summary>
        public List<int> rewardParams { get; set; }

        /// <summary>额外参数(时装类型时，这里是时装展示道具对应itemId)</summary>
        public List<float> percents { get; set; }

        /// <summary>概率; 百分制 ;</summary>
        public List<int> leftTimes { get; set; }

        /// <summary>剩余抽奖次数</summary>
        public List<int> prioritys { get; set; }

    }

    /// <summary>一次抽奖 前后转盘状态数据</summary>
    public partial class _LotteryOneDrawData
    {
        public _LotteryOneDrawData()
        {
            awardId = new List<int>();
            awardNum = new List<int>();
        }
        public global::ProtobufPacket._DBLotteryData beforeData { get; set; }

        /// <summary>抽奖前 转盘状态</summary>
        public global::ProtobufPacket._DBLotteryData afterData { get; set; }

        /// <summary>抽奖后 转盘状态</summary>
        public bool Has_poolItemId { get; private set; }
        private int __poolItemId;
        public int poolItemId { get { return __poolItemId; } set { __poolItemId = value; Has_poolItemId = true; } }

        /// <summary>本次抽奖 FuliLotteryPoolItem表对应的id</summary>
        public bool Has_poolType { get; private set; }
        private int __poolType;
        public int poolType { get { return __poolType; } set { __poolType = value; Has_poolType = true; } }

        /// <summary>本次抽奖 池子类型0普通池子 1稀有池子</summary>
        public bool Has_awardType { get; private set; }
        private int __awardType;
        public int awardType { get { return __awardType; } set { __awardType = value; Has_awardType = true; } }

        /// <summary>本次抽奖返回的礼物种类 (0普通奖励道具、 1时装、2剧情道具、3招牌道具)</summary>
        public bool Has_awardSkinId { get; private set; }
        private int __awardSkinId;
        public int awardSkinId { get { return __awardSkinId; } set { __awardSkinId = value; Has_awardSkinId = true; } }

        /// <summary>本次抽奖返回的时装礼物skinId 可为空</summary>
        public List<int> awardId { get; set; }

        /// <summary>本次抽奖返回的礼物关键id  仅为itemid  ------->本次抽奖可能稀有全不抽取完毕，所以这里给的可能较多</summary>
        public List<int> awardNum { get; set; }

        /// <summary>本次抽奖返回的礼物个数  比如奖励为  钻石*100  ------->本次抽奖可能稀有全不抽取完毕，所以这里给的可能较多</summary>
        public global::ProtobufPacket._DROP_LIST skin_DropList { get; set; }

        /// <summary>时装重复奖励---->用来判定是否是重复获取时装</summary>
        public global::ProtobufPacket._DROP_LIST mix_DropList { get; set; }

    }

    /// <summary>
    /// <para>-------------------------- 转盘抽奖 db------------------------ 结束//</para>
    /// <para>-------------------------- 七日迷笼 db------------------------ 开始//</para>
    /// <para>七日迷笼</para>
    /// </summary>
    public partial class _FuliRiddleCage
    {
        public _FuliRiddleCage()
        {
            score = 0;
            receivedIds = new List<int>();
        }
        public bool Has_score { get; private set; }
        private int __score;
        public int score { get { return __score; } set { __score = value; Has_score = true; } }

        /// <summary>七日迷笼 灵感沙漏进度</summary>
        public List<int> receivedIds { get; set; }

        /// <summary>七日迷笼 领取记录 存储的是 FuliRiddleCage 表的id</summary>
        public bool Has_versionNum { get; private set; }
        private int __versionNum;
        public int versionNum { get { return __versionNum; } set { __versionNum = value; Has_versionNum = true; } }

    }

    /// <summary>
    /// <para>-------------------------- 七日迷笼 db------------------------ 结束//</para>
    /// <para>BattlePass</para>
    /// </summary>
    public partial class _DBBattlePass
    {
        public _DBBattlePass()
        {
            BPTasks = new List<global::ProtobufPacket._BattlePassTask>();
        }
        public bool Has_BattlePassId { get; private set; }
        private int __BattlePassId;
        public int BattlePassId { get { return __BattlePassId; } set { __BattlePassId = value; Has_BattlePassId = true; } }

        public bool Has_IsActivateBP { get; private set; }
        private bool __IsActivateBP;
        public bool IsActivateBP { get { return __IsActivateBP; } set { __IsActivateBP = value; Has_IsActivateBP = true; } }

        public bool Has_IsBuyVIPBP { get; private set; }
        private bool __IsBuyVIPBP;
        public bool IsBuyVIPBP { get { return __IsBuyVIPBP; } set { __IsBuyVIPBP = value; Has_IsBuyVIPBP = true; } }

        public List<global::ProtobufPacket._BattlePassTask> BPTasks { get; set; }

    }

    public partial class _BattlePassTask
    {
        public bool Has_TaskId { get; private set; }
        private int __TaskId;
        public int TaskId { get { return __TaskId; } set { __TaskId = value; Has_TaskId = true; } }

        public bool Has_IsCompletelTask { get; private set; }
        private bool __IsCompletelTask;
        public bool IsCompletelTask { get { return __IsCompletelTask; } set { __IsCompletelTask = value; Has_IsCompletelTask = true; } }

        public bool Has_IsReceiveNormalAward { get; private set; }
        private bool __IsReceiveNormalAward;
        public bool IsReceiveNormalAward { get { return __IsReceiveNormalAward; } set { __IsReceiveNormalAward = value; Has_IsReceiveNormalAward = true; } }

        public bool Has_IsReceiveHighAward { get; private set; }
        private bool __IsReceiveHighAward;
        public bool IsReceiveHighAward { get { return __IsReceiveHighAward; } set { __IsReceiveHighAward = value; Has_IsReceiveHighAward = true; } }

    }

    /// <summary>npc状态 与NpcState.txt对应</summary>
    public enum NPCState
    {
        NPCS_NONE = 0,
        /// <summary>无特殊状态</summary>
        NPCS_DEAD = 1,
        /// <summary>死亡</summary>
        NPCS_CRAZY = 2,
        /// <summary>疯狂</summary>
        NPCS_DIZZY = 4,
        /// <summary>晕眩</summary>
        NPCS_MIND = 8,
        /// <summary>理智</summary>
        NPCS_RELEASE = 16,
    }


    /// <summary>npc状态 与NpcState.txt对应</summary>
    public enum StoryLevelSyncFlag
    {
        FLAG_SPECCLUE = 1,
        /// <summary>特殊线索</summary>
        FLAG_CHECKPOINT = 2,
        /// <summary>事件更新点</summary>
        FLAG_NPCSTATUS = 4,
        /// <summary>npc状态</summary>
        FLAG_USECARDS = 8,
        /// <summary>使用卡牌</summary>
        FLAG_KNOWEVENTS = 16,
        /// <summary>已知行为</summary>
        FLAG_FINISHEVENTS = 32,
        /// <summary>完成行为</summary>
        FLAG_LASTFINISHEDSCENEEVENTS = 64,
    }


    /// <summary>行为状态</summary>
    public enum SCENEEVENTSTATE
    {
        STATE_INACTIVE = 0,
        /// <summary>未激活</summary>
        STATE_ACTIVE = 1,
        /// <summary>激活</summary>
        STATE_SUCC = 2,
        /// <summary>成功</summary>
        STATE_FAIL = 3,
        /// <summary>失败</summary>
        STATE_CONTINUE = 4,
        /// <summary>继续</summary>
        STATE_DISABLED = 5,
    }


    /// <summary>行为结果</summary>
    public enum SCENEEVENT_CALCRESULT
    {
        CALCRESULT_SUCC = 0,
        /// <summary>成功</summary>
        CALCRESULT_HUGESUCC = 1,
        /// <summary>大成功</summary>
        CALCRESULT_FAIL = 2,
        /// <summary>失败</summary>
        CALCRESULT_HUGEFAIL = 3,
        /// <summary>大失败</summary>
        CALCRESULT_NONE = 4,
    }


    public enum AppointmentState
    {
        APPOINT_UNGET = 0,
        /// <summary>未获取</summary>
        APPOINT_UNOPEN = 1,
        /// <summary>未开启</summary>
        APPOINT_OPEN_UNFINISH = 2,
        /// <summary>已开启，未完成</summary>
        APPOINT_OPEN_FINISH = 3,
    }


    public enum KeywordState
    {
        KEYWORD_GOT = 1,
        /// <summary>已获取</summary>
        KEYWORD_USE = 2,
    }


    /// <summary>玩家被踢出 原因</summary>
    public enum PlayerKickReason
    {
        REPEATLOGIN = 0,
        /// <summary>重复登陆-顶号</summary>
        ANTI_INDULGENCE_ONLINE_YOUNG = 1,
        /// <summary>防沉迷-未成年人在线时长已达上限or处于宵禁时间</summary>
        ROLEFREEZE = 2,
        /// <summary>账号冻结</summary>
        DELETEROLE = 3,
    }


    /// <summary>
    /// <para>服务器返回客户端的错误代码</para>
    /// <para>可以用错误代码从字典直接获取到提示信息</para>
    /// <para>可以分段使用，需要避免重复冲突</para>
    /// </summary>
    public enum RESULT
    {
        SUCCESS = 0,
        /// <summary>登录</summary>
        FAIL_VALIDATEPROCESS = 1,
        FAIL_ALREADYLOGIN = 2,
        FAIL_QUEUEFULL = 3,
        FAIL_NEEDFORCEENTER = 4,
        FAIL_PACKETNOTMATCH = 5,
        FAIL_VERSIONNOTMATCH = 6,
        FAIL_ONLYALLOWGM = 7,
        FAIL_IPWHITELISTLIMIT = 8,
        FAIL_PLATFORMRESTRICT = 9,
        FAIL_PCNOTALLOWLOGIN = 10,
        FAIL_NOPLAY = 11,
        FAIL_AQBAN = 12,
        FAIL_RESVERSIONLOW = 13,
        /// <summary>资源版本号过低</summary>
        FAIL_INVALID_TOKEN = 14,
        /// <summary>
        /// <para>Token 验证失败</para>
        /// <para>创建角色</para>
        /// </summary>
        CREATE_USER = 100,
        /// <summary>需要创建角色</summary>
        CREATE_USER_FAIL = 101,
        /// <summary>服务器内部错误</summary>
        CREATE_USER_FAIL_NAMEEXIST = 102,
        /// <summary>名字已经存在</summary>
        CREATE_USER_FAIL_NAMESCREENING = 103,
        /// <summary>名字含有屏蔽字</summary>
        CREATE_USER_FAIL_LONGNAME = 104,
        /// <summary>名字太长</summary>
        CREATE_USER_FAIL_GUIDEXIST = 105,
        /// <summary>GUID重复</summary>
        CREATE_USER_FAIL_OVERNUM = 106,
        /// <summary>角色数量超出限制</summary>
        CREATE_USER_FAIL_ACTIVATION = 107,
        /// <summary>激活码错误</summary>
        CREATE_USER_FAIL_LOADCHAR = 108,
        /// <summary>加载角色信息失败	---在cg_login可能返回，但是服务器没有触发逻辑</summary>
        CREATE_USER_FAIL_NAME_ANTISPAM = 109,
        /// <summary>反垃圾不通过</summary>
        CREATE_USER_FAIL_NAME_ANTISPAM_TIMEOUT = 110,
        /// <summary>反垃圾超时</summary>
        CREATE_USER_FAIL_NAME_ANTISPAM_ERROR = 111,
        /// <summary>反垃圾错误</summary>
        CREATE_USER_FAIL_CREATEREPEAT = 112,
        /// <summary>角色重复创建</summary>
        CREATE_USER_FAIL_DB_WRONG = 113,
        /// <summary>
        /// <para>创建角色DB有错误</para>
        /// <para>约会</para>
        /// </summary>
        FAIL_APPOINT_FINISH_FAILED = 200,
        /// <summary>
        /// <para>约会结束验证失败</para>
        /// <para>心动</para>
        /// </summary>
        FAIL_HEARTBEAT_USECOUNT = 201,
        /// <summary>
        /// <para>心动使用次数失败</para>
        /// <para>城市副本</para>
        /// </summary>
        CITY_COPY_OP_ERROR = 202,
        CITY_COPY_GET_COMMON_AWARD_NONE = 203,
        /// <summary>idip</summary>
        IDIP_BAN_ACCOUNT = 800,
        /// <summary>
        /// <para>帐号被封</para>
        /// <para>创建角色限制</para>
        /// </summary>
        CREATE_ROLE_LIMIT_REGISTER = 900,
        /// <summary>ServerConfig的最大注册人数限制</summary>
        CREATE_ROLE_LIMIT_FORBID = 901,
        /// <summary>
        /// <para>gameconfig.ini的NewRoleLimitOpt为全部禁止状态；或者 ServerConfig的OpenReg为禁止状态</para>
        /// <para>故事</para>
        /// </summary>
        STORY_OP_ERROR = 1000,
        LEVEL_FINISH_CHAPTER_STATUS_ERROR = 1001,
        LEVEL_FINISH_ORDER_ERROR = 1002,
        LEVEL_FINISH_NO_DATA = 1003,
        INVALID_STORYLINE_ID = 1004,
        INVALID_STORYCHAPTER_ID = 1005,
        INVALID_STORYLEVEL_ID = 1006,
        INVALID_STORYLEVELRULE_ID = 1007,
        INVALID_STORYCHAPTERRULE_ID = 1008,
        REWIND_NO_ENDING = 1009,
        REWIND_CHAPTER_STATUS_ERROR = 1010,
        REWIND_LEVEL_NOT_EXISTS = 1011,
        RESOLVE_ENDING_PROGRESS_EMPTY = 1012,
        RESOLVE_ENDING_NOT_REACH_YET = 1013,
        RESOLVE_ENDING_NO_ENDING_AVAILABLE = 1014,
        SELECT_ENDING_NOT_AVAILABLE = 1015,
        CHAPTER_NOT_IN_STORYLINE = 1016,
        CHAPTER_HAS_NO_PREV = 1017,
        CHAPTER_LOCK_PLAYER_LEVEL = 1018,
        CHAPTER_LOCK_PREV_RANK = 1019,
        CHAPTER_LOCK_ALT_RANK = 1020,
        LEVEL_LOCK = 1021,
        LEVEL_NOT_IN_CURRENT_SET = 1022,
        LEVEL_NOT_RUNNING = 1023,
        LEVEL_START_NO_STAMINA = 1024,
        PUZZLE_LEVEL_NO_STAMINA = 1025,
        RESOLVE_ENDING_RUMOR_CHECK_FAILD = 1026,
        LEVEL_FINISH_NO_STORY_DATA = 1027,
        LEVEL_CHAPTER_LOCK_ITEM_UNENOUGH = 1028,
        PERSONAL_STORY_AWARD_NOT_GET = 1029,
        PUZZLE_DATA_MISTAKE = 1030,
        INVALID_SAVEPOINT_DATA = 1031,
        INVALID_CANNOT_QUICK_START = 1032,
        INVALID_PERCEPTION_SKILL = 1033,
        INVALID_QUICK_FIRST_PASS = 1034,
        PUZZLE_LEVEL_QUIT = 1035,
        INVALID_LINEUP_CARD_ID = 1036,
        INVALID_LINEUP_CARD_TAG = 1037,
        INVALID_LINEUP_CARD_ABILITY = 1038,
        INVALID_LINEUP_NO_CARD = 1039,
        SPECIAL_LEVEL_QUIT = 1040,
        SPECIAL_LEVEL_COMPLETION_NOTPASS = 1041,
        /// <summary>调查过程</summary>
        STORY_LOAD_FAILED = 1100,
        STORY_INVALID_ID = 1101,
        STORY_SECTIONS_EMPTY = 1102,
        STORY_SECTIONS_LOAD_FAILED = 1103,
        STORY_ACTION_CODE_INVALID = 1104,
        STORY_EXECUTE_FAILED = 1110,
        STORY_SECTIONS_EXECUTE_FAILED = 1111,
        STORY_SECTIONS_VERIFY_FAILED = 1112,
        STORY_VERIFY_TIME = 1113,
        /// <summary>防沉迷-无效</summary>
        FAIL_ANTI_INDULGENCE_INVALID = 1500,
        /// <summary>防沉迷-账号不在列表里</summary>
        FAIL_ANTI_INDULGENCE_NOT_INLIST = 1501,
        /// <summary>防沉迷-没有登录权限</summary>
        FAIL_ANTI_INDULGENCE_LOGIN_AUTHORITY = 1502,
        /// <summary>防沉迷-未成年人宵禁期间禁止登录</summary>
        FAIL_ANTI_INDULGENCE_FORBIDTIME_LOGIN_YOUNG = 1503,
        /// <summary>防沉迷-成年人在线时长提示</summary>
        FAIL_ANTI_INDULGENCE_ONLINE_ADULT_TIPS = 1504,
        /// <summary>防沉迷-未成年人在线时长限制</summary>
        FAIL_ANTI_INDULGENCE_ONLINE_YOUNG_LIMIT = 1505,
        /// <summary>防沉迷-未成年人在线时长限制-节假日</summary>
        FAIL_ANTI_INDULGENCE_ONLINE_YOUNG_HOLIDAY_LIMIT = 1506,
        /// <summary>防沉迷-未成年人单次充值限制-8岁以下</summary>
        FAIL_ANTI_INDULGENCE_RECHARGE_SINGLE_8_LIMIT = 1507,
        /// <summary>防沉迷-未成年人单次充值限制-8~16岁</summary>
        FAIL_ANTI_INDULGENCE_RECHARGE_SINGLE_16_LIMIT = 1508,
        /// <summary>防沉迷-未成年人单次充值限制-16~18岁</summary>
        FAIL_ANTI_INDULGENCE_RECHARGE_SINGLE_18_LIMIT = 1509,
        /// <summary>防沉迷-未成年人单月充值限制-8岁以下</summary>
        FAIL_ANTI_INDULGENCE_RECHARGE_MONTH_8_LIMIT = 1510,
        /// <summary>防沉迷-未成年人单月充值限制-8~16岁</summary>
        FAIL_ANTI_INDULGENCE_RECHARGE_MONTH_16_LIMIT = 1511,
        /// <summary>防沉迷-未成年人单月充值限制-16~18岁</summary>
        FAIL_ANTI_INDULGENCE_RECHARGE_MONTH_18_LIMIT = 1512,
        /// <summary>防沉迷-每日充值上限</summary>
        FAIL_ANTI_INDULGENCE_RECHARGE_DAY_LIMIT = 1513,
        /// <summary>防沉迷-未成年游戏登录健康提示</summary>
        FAIL_ANTI_INDULGENCE_LOGIN_YOUNG_LIMIT = 1514,
        /// <summary>福利 成长基金领取失败</summary>
        FAIL_RECEIVE_FUND_LEVELREWARD = 1520,
        /// <summary>删除账号</summary>
        FAIL_ACCOUNT_MISS_BRIEF_INFO = 1530,
        FAIL_ACCOUNT_DB_OPERATION = 1531,
    }


    public enum DROPITEMTYPE
    {
        DROP_ITEM_INVALID = -1,
        DROP_ITEM_DROPITEM = 0,
        /// <summary>0-DropItem表子ID</summary>
        DROP_ITEM_ITEM = 1,
        /// <summary>1-物品</summary>
        DROP_ITEM_CARD = 2,
        /// <summary>2-卡</summary>
        DROP_ITEM_CARD_PIECE = 3,
        /// <summary>3-卡碎片</summary>
        DROP_ITEM_PERSONALITY = 4,
        /// <summary>4-性格</summary>
        DROP_ITEM_TITLE = 5,
        /// <summary>5-称号</summary>
        DROP_ITEM_CARDFRAME = 6,
        /// <summary>6-卡框</summary>
        DROP_ITEM_SIGNBOARD = 7,
        /// <summary>7-招牌</summary>
        DROP_ITEM_DECALS = 8,
        /// <summary>8-贴纸</summary>
        DROP_ITEM_FASHION = 9,
        /// <summary>9- 时装</summary>
        DROP_ITEM_NUM = 10,
    }


    /// <summary>=================数据库存储 修改需要考虑兼容=================</summary>
    public enum MailConditionType
    {
        Invalid = 0,
        ContainGuid = 1,
        /// <summary>指定guid玩家可以领取</summary>
        Level = 2,
    }


    /// <summary>=================数据库存储 修改需要考虑兼容=================</summary>
    public enum MailImportance
    {
        MAIL_MAIN = 0,
        MAIL_SECONDARY = 1,
    }


    /// <summary>
    /// <para>邮件标志类型，目前转使用字典方式  数据库使用</para>
    /// <para> =================数据库存储 修改需要考虑兼容=================</para>
    /// </summary>
    public enum MailFlagType
    {
        MAIL_FLAGT_NONE = 0,
        MAIL_FLAGT_PARAMETER = 1,
    }


    public enum MailType
    {
        Nomal = 0,
        AutoSend = 1,
        GMSRedeem = 2,
        /// <summary>GM全服邮件</summary>
        GMSingle = 3,
    }


    public enum _DBResult
    {
        /// <summary>必须保持和原本DBMsgResult一致</summary>
        DB_INVALID = -1,
        DB_FAIL = 0,
        DB_SUCCESS = 1,
        DB_SAME_NAME = 2,
        DB_SAME_GUID = 3,
        DB_SAME_ACCOUNT = 4,
        DB_NO_DATA = 5,
        DB_ACTIVATION_CODE_ERROR = 6,
        DB_WRONG_GAME_SERVER = 7,
    }


    /// <summary>根据该类型决定_LinkObj 里面的内容</summary>
    public enum LINKTYPE
    {
        LINK_NONE = 0,
        LINK_ITEM = 1,
        LINK_TEAM = 2,
        LINK_AUGUR_YUNPRESENT = 3,
        LINK_AUGUR_LUCKBAG = 4,
        LINK_DRAWCARD = 5,
        LINK_PLAYER = 6,
        LINK_CARD = 7,
        LINK_GUILD = 8,
        LINK_TALISMAN = 9,
        /// <summary>废弃</summary>
        LINK_REQ_ADD_FRIEND = 10,
        LINK_ADVENTURE = 11,
        LINK_ONCE_MORE = 12,
        LINK_TREASUREHUNT = 13,
        LINK_SOLO = 14,
        LINK_WILDTREASURE = 15,
        LINK_CARD_DETAIL = 16,
        LINK_GUILD_INVITE = 17,
        LINK_QUARTZ_DETAIL = 18,
        LINK_MOVETONPC = 19,
        LINK_ASYNCPVPROBOT = 20,
        LINK_AUGURDRAWCARD = 21,
        LINK_EMOJ_SHOP = 22,
        LINK_DEFENDER = 23,
        LINK_GUILD_SHARE_QUEST = 24,
        LINK_GUILD_TREASURE = 25,
        LINK_GUILD_TREASURE_NOTICE = 26,
        LINK_REQ_ADD_RELATION = 27,
        LINK_WORLDBOSS = 28,
        LINK_LUCKYGIFT = 29,
    }


    /// <summary>系统消息类型，需要跟策划定义一下所发系统消息属于哪种类型</summary>
    public enum SYSTEM_MSG_TYPE
    {
        SYSTEM_TYPE_NONE = 0,
        /// <summary>其他</summary>
        SYSTEM_TYPE_GUIL = 1,
        /// <summary>帮会</summary>
        SYSTEM_TYPE_GAIN = 2,
        /// <summary>收获</summary>
        SYSTEM_TYPE_DRAWCARD = 3,
        /// <summary>祭祀</summary>
        SYSTEM_TYPE_TreasuresShop = 4,
        /// <summary>西域奇珍商店</summary>
        SYSTEM_TYPE_WORLD = 5,
    }


    public enum RECOVER_TYPE
    {
        RECOVER_STAMINA = 0,
        RECOVER_CONFIDENCE = 1,
    }


    public enum MISTYPE
    {
        MISTYPE_MAIN = 1,
        /// <summary>主线-调查</summary>
        MISTYPE_MAIL = 2,
        /// <summary>信件</summary>
        MISTYPE_ITEM = 3,
        /// <summary>普通货物</summary>
        MISTYPE_ITEM_ADVANCE = 4,
    }


    public enum MISSTATE
    {
        MISSTATE_NONE = 0,
        MISSTATE_PRPUSH = 1,
        /// <summary>预发布</summary>
        MISSTATE_PUSH = 2,
        /// <summary>发布</summary>
        MISSTATE_ACCEPT = 3,
        /// <summary>已接</summary>
        MISSTATE_COMPLETED = 4,
        /// <summary>已完成未提交</summary>
        MISSTATE_DONE = 5,
    }


    public enum MISLOGIC
    {
        MISLOGIC_STORY = 0,
        /// <summary>调查任务 通关X并达成Y以上结局</summary>
        MISLOGIC_MAIL = 2,
        /// <summary>信件任务</summary>
        MISLOGIC_ITEM = 1,
    }


    public enum RUMORSTATE
    {
        RUMORSTATE_NONE = 0,
        /// <summary>未解锁</summary>
        RUMORSTATE_UNLOCK = 1,
        /// <summary>解锁未获取</summary>
        RUMORSTATE_ACCEPTED = 2,
        /// <summary>已获取，待调查</summary>
        RUMORSTATE_CAN_RESET = 3,
        /// <summary>调查到假相，待重新推理</summary>
        RUMORSTATE_RESET = 4,
        /// <summary>重置完推理（回溯）</summary>
        RUMORSTATE_DONE = 5,
        /// <summary>调查完真相</summary>
        RUMORSTATE_REDUCE = 6,
    }


    /// <summary>账号激活返回值 与服务器定义匹配</summary>
    public enum ValidateAccountCode
    {
        FAIL_SDK_ERROR = 1,
        /// <summary>SDK返回错误</summary>
        FAIL_SERVER_SENDPACKET = 2,
        /// <summary>GAMESERVER端发送PACKET失败</summary>
        FAIL_SERVER_TIMEOUT = 3,
        /// <summary>GAMESEVER端超时</summary>
        FAIL_HTTP_TIMEOUT = 4,
        /// <summary>HTTPAGENT端超时</summary>
        FAIL_HTTP_EXCPTION = 5,
        /// <summary>HTTP请求触发异常</summary>
        FAIL_HTTP_STATUS_ERR = 6,
        /// <summary>HTTP相应状态码不是200</summary>
        FAIL_RAPID_VALIDATE = 7,
        /// <summary>快速验证逻辑失败</summary>
        FAIL_ACTIVATION_HTTP_TIMEOUT = 8,
        /// <summary>验证激活码超时</summary>
        FAIL_ACTIVATION_HTTP_EXCPTION = 9,
        /// <summary>验证激活码触发HTTP请求异常</summary>
        FAIL_ACTIVATION_HTTP_STATUS_ERR = 10,
        /// <summary>验证激活码响应状态码不是200</summary>
        FAIL_ACTIVATION_NEED_CODE = 11,
        /// <summary>需要输入激活码</summary>
        FAIL_ACTIVATION_CODE_NOTEXIST = 12,
        /// <summary>激活码不存在</summary>
        FAIL_ACTIVATION_CODE_WRONGAGENT = 13,
        /// <summary>激活渠道错误</summary>
        FAIL_ACTIVATION_CODE_USED = 14,
        /// <summary>激活码已经使用</summary>
        FAIL_ACTIVATION_CODE_INVALID = 15,
        /// <summary>激活码无效</summary>
        FAIL_ACTIVATION_UNKNOWN = 16,
        /// <summary>激活码未知错误</summary>
        FAIL_MSDK_CLOSE_LOCAL = 17,
        /// <summary>本地配置停止MSDK登陆验证</summary>
        FAIL_MSDK_GET_ACCOUNT_ERROR = 18,
        /// <summary>Openid生成ACCOUNT失败</summary>
        FAIL_MSDK_PLAT_ERROR = 19,
        /// <summary> MSDK PLATID错误</summary>
        FAIL_MSDK_NO_TEST_LOGIN = 20,
        /// <summary>不允许TEST登录方式</summary>
        FAIL_MSDK_PLATID_NOT_MATCH_SERVER = 21,
        /// <summary>PLATID 跟服务器不匹配</summary>
        FAIL_ACCOUNT_NULL = 22,
    }


    /// <summary>反垃圾 类型</summary>
    public enum AntiSpamType
    {
        ANTI_SPAM_CHANGE_NAME = 0,
        /// <summary>游戏中改名 预留</summary>
        ANTI_SPAM_CREATE_ROLE = 1,
        /// <summary>创建角色时改名</summary>
        ANTI_SPAM_SIGNATURE = 2,
        /// <summary>玩家签名</summary>
        ANTI_SPAM_CHARACTER_REMARK = 3,
    }


    /// <summary>反垃圾检查结果 返回给客户端，给对应提示</summary>
    public enum AntiSpamResult
    {
        ANTI_SPAM_RET_OK = 0,
        /// <summary>通过</summary>
        ANTI_SPAM_RET_TIMEOUT = 1,
        /// <summary>超时</summary>
        ANTI_SPAM_RET_FAIL = 2,
    }


    public enum RECHARGE_TYPE
    {
        RECHARGE_LONGIN = 0,
        RECHARGE_GETBALANCE = 1,
        RECHARGE_GETBALANCE_RET = 2,
        RECHARGE_BUYGOODS = 3,
        RECHARGE_BUYGOODS_RET = 4,
        RECHARGE_SYNC_CONFIG = 5,
    }


}
