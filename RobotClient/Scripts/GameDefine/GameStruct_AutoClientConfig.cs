/*****Generated by ClientConfigTool!*****/ 
/*****Do Not Edit!*****/

using UnityEngine;
using System.Collections;

namespace Games.GlobeDefine
{
    [SLua.CustomLuaClass]
    public class GameStruct_AutoClientConfig
    {
        public bool bval = false;
        public int ival = 0;
        public float fval = 0.0f;
        public long lval = 0;
        public string sval = "";
        public bool OpenAssert = false;
        public bool OpenLogInfo = false;
        public bool OpenLogError = false;
        public bool OpenLogWarning = false;
        public bool OpenLogException = false;
        public bool OpenDefaultLog = false;
        public bool OpenGMLog = false;
        public bool OpenFUILog = false;
        public bool OpenLuaLog = false;
        public bool OpenSDKLog = false;
        public bool OpenTmpLog = false;
        public bool OpenRoleLog = false;
        public bool OpenShopLog = false;
        public bool OpenNodeLog = false;
        public bool OpenAuxiLog = false;
        public bool OpenMailLog = false;
        public bool OpenDropLog = false;
        public bool OpenCardLog = false;
        public bool OpenRedLog = false;
        public bool OpenRumorLog = false;
        public bool OpenAlbumLog = false;
        public bool OpenSceneLog = false;
        public bool OpenVchatLog = false;
        public bool OpenTableLog = false;
        public bool OpenUtilsLog = false;
        public bool OpenLoginLog = false;
        public bool OpenGuideLog = false;
        public bool OpenStoryLog = false;
        public bool OpenBuildLog = false;
        public bool OpenLineupLog = false;
        public bool OpenMissinLog = false;
        public bool OpenEditorLog = false;
        public bool OpenCamaraLog = false;
        public bool OpenBundleLog = false;
        public bool OpenFatigueLog = false;
        public bool OpenNetWorkLog = false;
        public bool OpenUserDataLog = false;
        public bool OpenDialogueLog = false;
        public bool OpenFateLineLog = false;
        public bool OpenIntimacyLog = false;
        public bool OpenActivityLog = false;
        public bool OpenResourceLog = false;
        public bool OpenSuperBlurLog = false;
        public bool OpenQuickJumpLog = false;
        public bool OpenComponentLog = false;
        public bool OpenPreloaderLog = false;
        public bool OpenActionEventLog = false;
        public bool OpenInvestigateLog = false;
        public bool OpenNotificationLog = false;
        public bool OpenTaskLog = false;
        public bool OpenDivinationLog = false;
        public bool OpenGameControllerLog = false;
        public float BuildingSpeed = 0.0f;
        public float LightSpeed = 0.0f;
        public float TrainPassSpeed = 0.0f;
        public float TransSpeed = 0.0f;
        public float LightDelayTime = 0.0f;
        public float TrainPassDelayTime = 0.0f;
        public float TransDelayTime = 0.0f;
        public float FazhenFadeinDuration = 0.0f;
        public float FazhenActiveDuration = 0.0f;
        public float FaZhenDelayTime = 0.0f;
        public int CdnDownloadTimeout = 0;
        public int WebInvalidRequestLife = 0;
        public bool IsOpenBlurMask_H = false;
        public bool IsOpenBlurMask_M = false;
        public bool IsOpenBlurMask_L = false;
        public int CarouselMaptime = 0;
        public bool IsEnableLogConsole = false;
        public bool IsEnableLogFile = false;
        public float LogFileFlushInterval = 0.0f;
        public float LogFileFlushRate = 0.0f;
        public bool EnableFpsCounter = false;
        public long CardImageCount = 0;
        public int OtherChatPopsUp = 0;
        public string AppointmentBgRes = "";
        public int TimeLockInterval = 0;
        public int ScreenSound = 0;
        public string ShowCardChangePos = "";
        public int XindongProgressBarSound = 0;
        public float CacheReconnectInterval = 0.0f;
        public bool EnableResDebug = false;
        public bool EnableResProfiler = false;
        public bool H_BG_Show = false;
        public bool M_BG_Show = false;
        public bool L_BG_Show = false;
        public int MonthlySignCheckGuideId = 0;
        public int IosAppraiseNum = 0;
        public int IosAppraiseCustom = 0;
        public int IosAppId = 0;
        public string IosAppSkipEndingCheck = "";
        public long IntervalTime = 0;
        public float ClockUpdateTimeTick = 0.0f;

		public void LoadFile()
		{
			string content = Utils.ReadIniFile("Config/ClientConfig");
			Load(content);
		}

        public static string GetFileName() { return "ClientConfig.txt"; }
        public static string GetFilePath() { return "Config/ClientConfig.txt"; }

		public bool Load(string content)
		{
			try
            {
				IniFile ini = new IniFile(content);

				ival = ini.read_int("data","ival",ival);
				CdnDownloadTimeout = ini.read_int("DownloadAssetConfig","CdnDownloadTimeout",CdnDownloadTimeout);
				WebInvalidRequestLife = ini.read_int("DownloadAssetConfig","WebInvalidRequestLife",WebInvalidRequestLife);
				CarouselMaptime = ini.read_int("CarouselMap","CarouselMaptime",CarouselMaptime);
				OtherChatPopsUp = ini.read_int("Sound","OtherChatPopsUp",OtherChatPopsUp);
				TimeLockInterval = ini.read_int("TimeLock","TimeLockInterval",TimeLockInterval);
				ScreenSound = ini.read_int("ClickScreen","ScreenSound",ScreenSound);
				XindongProgressBarSound = ini.read_int("Xindong","XindongProgressBarSound",XindongProgressBarSound);
				MonthlySignCheckGuideId = ini.read_int("MonthlySign","MonthlySignCheckGuideId",MonthlySignCheckGuideId);
				IosAppraiseNum = ini.read_int("IosAppraise","IosAppraiseNum",IosAppraiseNum);
				IosAppraiseCustom = ini.read_int("IosAppraise","IosAppraiseCustom",IosAppraiseCustom);
				IosAppId = ini.read_int("IosAppraise","IosAppId",IosAppId);

				lval = ini.read_long("data","lval",lval);
				CardImageCount = ini.read_long("Global","CardImageCount",CardImageCount);
				IntervalTime = ini.read_long("Update","IntervalTime",IntervalTime);


				bval = ini.read_bool("data","bval",bval);
				OpenAssert = ini.read_bool("LogLevel","OpenAssert",OpenAssert);
				OpenLogInfo = ini.read_bool("LogLevel","OpenLogInfo",OpenLogInfo);
				OpenLogError = ini.read_bool("LogLevel","OpenLogError",OpenLogError);
				OpenLogWarning = ini.read_bool("LogLevel","OpenLogWarning",OpenLogWarning);
				OpenLogException = ini.read_bool("LogLevel","OpenLogException",OpenLogException);
				OpenDefaultLog = ini.read_bool("LogSource","OpenDefaultLog",OpenDefaultLog);
				OpenGMLog = ini.read_bool("LogSource","OpenGMLog",OpenGMLog);
				OpenFUILog = ini.read_bool("LogSource","OpenFUILog",OpenFUILog);
				OpenLuaLog = ini.read_bool("LogSource","OpenLuaLog",OpenLuaLog);
				OpenSDKLog = ini.read_bool("LogSource","OpenSDKLog",OpenSDKLog);
				OpenTmpLog = ini.read_bool("LogSource","OpenTmpLog",OpenTmpLog);
				OpenRoleLog = ini.read_bool("LogSource","OpenRoleLog",OpenRoleLog);
				OpenShopLog = ini.read_bool("LogSource","OpenShopLog",OpenShopLog);
				OpenNodeLog = ini.read_bool("LogSource","OpenNodeLog",OpenNodeLog);
				OpenAuxiLog = ini.read_bool("LogSource","OpenAuxiLog",OpenAuxiLog);
				OpenMailLog = ini.read_bool("LogSource","OpenMailLog",OpenMailLog);
				OpenDropLog = ini.read_bool("LogSource","OpenDropLog",OpenDropLog);
				OpenCardLog = ini.read_bool("LogSource","OpenCardLog",OpenCardLog);
				OpenRedLog = ini.read_bool("LogSource","OpenRedLog",OpenRedLog);
				OpenRumorLog = ini.read_bool("LogSource","OpenRumorLog",OpenRumorLog);
				OpenAlbumLog = ini.read_bool("LogSource","OpenAlbumLog",OpenAlbumLog);
				OpenSceneLog = ini.read_bool("LogSource","OpenSceneLog",OpenSceneLog);
				OpenVchatLog = ini.read_bool("LogSource","OpenVchatLog",OpenVchatLog);
				OpenTableLog = ini.read_bool("LogSource","OpenTableLog",OpenTableLog);
				OpenUtilsLog = ini.read_bool("LogSource","OpenUtilsLog",OpenUtilsLog);
				OpenLoginLog = ini.read_bool("LogSource","OpenLoginLog",OpenLoginLog);
				OpenGuideLog = ini.read_bool("LogSource","OpenGuideLog",OpenGuideLog);
				OpenStoryLog = ini.read_bool("LogSource","OpenStoryLog",OpenStoryLog);
				OpenBuildLog = ini.read_bool("LogSource","OpenBuildLog",OpenBuildLog);
				OpenLineupLog = ini.read_bool("LogSource","OpenLineupLog",OpenLineupLog);
				OpenMissinLog = ini.read_bool("LogSource","OpenMissinLog",OpenMissinLog);
				OpenEditorLog = ini.read_bool("LogSource","OpenEditorLog",OpenEditorLog);
				OpenCamaraLog = ini.read_bool("LogSource","OpenCamaraLog",OpenCamaraLog);
				OpenBundleLog = ini.read_bool("LogSource","OpenBundleLog",OpenBundleLog);
				OpenFatigueLog = ini.read_bool("LogSource","OpenFatigueLog",OpenFatigueLog);
				OpenNetWorkLog = ini.read_bool("LogSource","OpenNetWorkLog",OpenNetWorkLog);
				OpenUserDataLog = ini.read_bool("LogSource","OpenUserDataLog",OpenUserDataLog);
				OpenDialogueLog = ini.read_bool("LogSource","OpenDialogueLog",OpenDialogueLog);
				OpenFateLineLog = ini.read_bool("LogSource","OpenFateLineLog",OpenFateLineLog);
				OpenIntimacyLog = ini.read_bool("LogSource","OpenIntimacyLog",OpenIntimacyLog);
				OpenActivityLog = ini.read_bool("LogSource","OpenActivityLog",OpenActivityLog);
				OpenResourceLog = ini.read_bool("LogSource","OpenResourceLog",OpenResourceLog);
				OpenSuperBlurLog = ini.read_bool("LogSource","OpenSuperBlurLog",OpenSuperBlurLog);
				OpenQuickJumpLog = ini.read_bool("LogSource","OpenQuickJumpLog",OpenQuickJumpLog);
				OpenComponentLog = ini.read_bool("LogSource","OpenComponentLog",OpenComponentLog);
				OpenPreloaderLog = ini.read_bool("LogSource","OpenPreloaderLog",OpenPreloaderLog);
				OpenActionEventLog = ini.read_bool("LogSource","OpenActionEventLog",OpenActionEventLog);
				OpenInvestigateLog = ini.read_bool("LogSource","OpenInvestigateLog",OpenInvestigateLog);
				OpenNotificationLog = ini.read_bool("LogSource","OpenNotificationLog",OpenNotificationLog);
				OpenTaskLog = ini.read_bool("LogSource","OpenTaskLog",OpenTaskLog);
				OpenDivinationLog = ini.read_bool("LogSource","OpenDivinationLog",OpenDivinationLog);
				OpenGameControllerLog = ini.read_bool("LogSource","OpenGameControllerLog",OpenGameControllerLog);
				IsOpenBlurMask_H = ini.read_bool("Mask","IsOpenBlurMask_H",IsOpenBlurMask_H);
				IsOpenBlurMask_M = ini.read_bool("Mask","IsOpenBlurMask_M",IsOpenBlurMask_M);
				IsOpenBlurMask_L = ini.read_bool("Mask","IsOpenBlurMask_L",IsOpenBlurMask_L);
				IsEnableLogConsole = ini.read_bool("Global","IsEnableLogConsole",IsEnableLogConsole);
				IsEnableLogFile = ini.read_bool("Global","IsEnableLogFile",IsEnableLogFile);
				EnableFpsCounter = ini.read_bool("Global","EnableFpsCounter",EnableFpsCounter);
				EnableResDebug = ini.read_bool("Res","EnableResDebug",EnableResDebug);
				EnableResProfiler = ini.read_bool("Res","EnableResProfiler",EnableResProfiler);
				H_BG_Show = ini.read_bool("UIBG","H_BG_Show",H_BG_Show);
				M_BG_Show = ini.read_bool("UIBG","M_BG_Show",M_BG_Show);
				L_BG_Show = ini.read_bool("UIBG","L_BG_Show",L_BG_Show);

				fval = ini.read_float("data","fval",fval);
				BuildingSpeed = ini.read_float("DarwCardData","BuildingSpeed",BuildingSpeed);
				LightSpeed = ini.read_float("DarwCardData","LightSpeed",LightSpeed);
				TrainPassSpeed = ini.read_float("DarwCardData","TrainPassSpeed",TrainPassSpeed);
				TransSpeed = ini.read_float("DarwCardData","TransSpeed",TransSpeed);
				LightDelayTime = ini.read_float("DarwCardData","LightDelayTime",LightDelayTime);
				TrainPassDelayTime = ini.read_float("DarwCardData","TrainPassDelayTime",TrainPassDelayTime);
				TransDelayTime = ini.read_float("DarwCardData","TransDelayTime",TransDelayTime);
				FazhenFadeinDuration = ini.read_float("DarwCardData","FazhenFadeinDuration",FazhenFadeinDuration);
				FazhenActiveDuration = ini.read_float("DarwCardData","FazhenActiveDuration",FazhenActiveDuration);
				FaZhenDelayTime = ini.read_float("DarwCardData","FaZhenDelayTime",FaZhenDelayTime);
				LogFileFlushInterval = ini.read_float("Global","LogFileFlushInterval",LogFileFlushInterval);
				LogFileFlushRate = ini.read_float("Global","LogFileFlushRate",LogFileFlushRate);
				CacheReconnectInterval = ini.read_float("Network","CacheReconnectInterval",CacheReconnectInterval);
				ClockUpdateTimeTick = ini.read_float("Investigate","ClockUpdateTimeTick",ClockUpdateTimeTick);

				sval = ini.read_string("data","sval",sval);
				AppointmentBgRes = ini.read_string("Appointment","AppointmentBgRes",AppointmentBgRes);
				ShowCardChangePos = ini.read_string("ShopCardChange","ShowCardChangePos",ShowCardChangePos);
				IosAppSkipEndingCheck = ini.read_string("IosAppraise","IosAppSkipEndingCheck",IosAppSkipEndingCheck);

			}
			catch (System.Exception ex)
			{
				UnityEngine.Debug.LogError("load ini file error." + GetFileName());
				UnityEngine.Debug.LogException(ex);
				return false;
			}
			return true;
		}
    }
}
